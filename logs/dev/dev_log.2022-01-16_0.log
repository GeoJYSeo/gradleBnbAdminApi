INFO  22-01-16 07:01:30[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-01-16 07:01:30[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:01:30[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:01:30[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-01-16 07:01:30[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  22-01-16 07:01:40[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:01:42[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2192 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:01:43[restartedMain] [InstanceMetadataServiceResourceFetcher:105] - Fail to retrieve token 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-16 07:01:43[restartedMain] [EC2MetadataUtils:409] - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). Failed to connect to service endpoint: 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-16 07:01:44[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:01:49[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:01:49[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:01:49[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:01:49[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:01:49[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:01:49[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 18425 ms
INFO  22-01-16 07:01:50[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-01-16 07:01:51[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-01-16 07:01:52[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:01:52[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.32.Final
INFO  22-01-16 07:01:53[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  22-01-16 07:01:55[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:02:02[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:02:02[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:02:03[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:02:09[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 28dfc870-ce0e-4500-8170-b1b8c6d2c2c9

INFO  22-01-16 07:02:11[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10f99f88, org.springframework.security.web.context.SecurityContextPersistenceFilter@1aca8abf, org.springframework.security.web.header.HeaderWriterFilter@708d5af5, org.springframework.web.filter.CorsFilter@45d1bec2, org.springframework.security.web.authentication.logout.LogoutFilter@b3ecfb5, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@40389a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f6e437, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ce07aad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bf06b9d, org.springframework.security.web.session.SessionManagementFilter@930d4c6, org.springframework.security.web.access.ExceptionTranslationFilter@6ceb0d2a]
INFO  22-01-16 07:02:16[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:02:17[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:02:18[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:02:18[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 51.191 seconds (JVM running for 52.915)
INFO  22-01-16 07:06:29[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-16 07:06:29[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-16 07:06:29[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
DEBUG 22-01-16 07:06:30[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:06:30[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 14 msec}
INFO  22-01-16 07:06:30[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 07:06:30[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 07:06:30[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-16 07:06:30[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-16 07:06:30[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:06:30[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:06:30[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-15T18:59:25 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 07:09:29[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:09:29[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:09:29[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 07:09:29[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 07:09:29[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-16 07:09:29[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-16 07:09:29[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:09:29[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:09:29[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-15T18:59:25 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 07:10:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:10:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/location/places
INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [LocationApiLogicServiceImpl:47] - places: Recommanded places nearby
INFO  22-01-16 07:10:01[http-nio-8080-exec-5] [LocationApiLogicServiceImpl:51] - Google Places Url: https://maps.googleapis.com/maps/api/place/queryautocomplete/json?key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc&language=en&input=Recommanded+places+nearby
INFO  22-01-16 07:10:02[http-nio-8080-exec-5] [LocationApiLogicServiceImpl:55] - Responded Places info:{
   "predictions" : [],
   "status" : "ZERO_RESULTS"
}

INFO  22-01-16 07:16:03[Thread-5] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:16:03[Thread-5] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-01-16 07:16:03[Thread-5] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-01-16 07:16:04[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:16:04[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:16:09[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:16:11[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2018 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:16:12[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:16:13[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:16:13[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:16:13[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:16:13[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:16:13[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:16:13[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9147 ms
INFO  22-01-16 07:16:13[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  22-01-16 07:16:13[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  22-01-16 07:16:14[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:16:14[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:16:15[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:16:15[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:16:15[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:16:17[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 5d5d13a7-1e8b-4d8f-9b3c-9c6c8e84c165

INFO  22-01-16 07:16:18[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37ac6c4f, org.springframework.security.web.context.SecurityContextPersistenceFilter@20e36a70, org.springframework.security.web.header.HeaderWriterFilter@1005a76c, org.springframework.web.filter.CorsFilter@17529b17, org.springframework.security.web.authentication.logout.LogoutFilter@52290f33, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@7d319493, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75b3df5a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48303847, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@456fee2f, org.springframework.security.web.session.SessionManagementFilter@1e67ea96, org.springframework.security.web.access.ExceptionTranslationFilter@5ca13492]
INFO  22-01-16 07:16:19[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:16:19[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:16:19[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:16:19[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.907 seconds (JVM running for 894.584)
INFO  22-01-16 07:16:19[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:18:06[Thread-7] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:18:06[Thread-7] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  22-01-16 07:18:06[Thread-7] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  22-01-16 07:18:06[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:18:06[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:18:13[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:18:15[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1946 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:18:16[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:18:16[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:18:16[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:18:16[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:18:16[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:18:16[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:18:16[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 10148 ms
INFO  22-01-16 07:18:17[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  22-01-16 07:18:17[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  22-01-16 07:18:18[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:18:18[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:18:18[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:18:18[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:18:19[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:18:21[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: ebbfd2e1-5de7-4ed3-bf48-8a7de491f949

INFO  22-01-16 07:18:22[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70138f3a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2563bec0, org.springframework.security.web.header.HeaderWriterFilter@390e3c6a, org.springframework.web.filter.CorsFilter@7f138e6d, org.springframework.security.web.authentication.logout.LogoutFilter@4dcc885, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@7941973a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bcc503b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73e9d644, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7877f5b4, org.springframework.security.web.session.SessionManagementFilter@394ec337, org.springframework.security.web.access.ExceptionTranslationFilter@57693b0c]
INFO  22-01-16 07:18:23[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:18:23[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:18:23[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:18:23[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 17.039 seconds (JVM running for 1018.138)
INFO  22-01-16 07:18:23[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:20:28[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-16 07:20:28[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-16 07:20:28[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  22-01-16 07:20:28[http-nio-8080-exec-2] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
WARN  22-01-16 07:20:46[http-nio-8080-exec-3] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
WARN  22-01-16 07:22:50[http-nio-8080-exec-5] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
WARN  22-01-16 07:23:19[http-nio-8080-exec-7] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
WARN  22-01-16 07:23:36[http-nio-8080-exec-9] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
WARN  22-01-16 07:24:11[http-nio-8080-exec-1] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
WARN  22-01-16 07:24:14[http-nio-8080-exec-3] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
INFO  22-01-16 07:24:14[Thread-11] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:24:14[Thread-11] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  22-01-16 07:24:14[Thread-11] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  22-01-16 07:24:15[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:24:15[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:24:21[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:24:23[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1922 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:24:24[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:24:24[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:24:24[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:24:24[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:24:24[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:24:24[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:24:24[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9186 ms
INFO  22-01-16 07:24:25[restartedMain] [HikariDataSource:110] - HikariPool-4 - Starting...
INFO  22-01-16 07:24:25[restartedMain] [HikariDataSource:123] - HikariPool-4 - Start completed.
INFO  22-01-16 07:24:26[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:24:26[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:24:27[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:24:27[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:24:27[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:24:28[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 2b967982-00a6-4dff-a38a-190d2f63f0c3

INFO  22-01-16 07:24:29[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31e0ab45, org.springframework.security.web.context.SecurityContextPersistenceFilter@631205ca, org.springframework.security.web.header.HeaderWriterFilter@76d05057, org.springframework.web.filter.CorsFilter@49778973, org.springframework.security.web.authentication.logout.LogoutFilter@5e7318dd, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@67dcc134, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@506a32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74f6d087, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@bbbe287, org.springframework.security.web.session.SessionManagementFilter@319d01c5, org.springframework.security.web.access.ExceptionTranslationFilter@5f3782d8]
INFO  22-01-16 07:24:30[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:24:30[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:24:30[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:24:30[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.817 seconds (JVM running for 1385.855)
INFO  22-01-16 07:24:30[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:24:31[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-16 07:24:31[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-16 07:24:31[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  22-01-16 07:24:31[http-nio-8080-exec-2] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'request' for method parameter type SearchRoomRequest is not present]
INFO  22-01-16 07:28:20[Thread-15] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:28:20[Thread-15] [HikariDataSource:350] - HikariPool-4 - Shutdown initiated...
INFO  22-01-16 07:28:20[Thread-15] [HikariDataSource:352] - HikariPool-4 - Shutdown completed.
INFO  22-01-16 07:28:20[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:28:20[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:28:25[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:28:28[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2219 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:28:29[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:28:29[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:28:29[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:28:29[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:28:29[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:28:29[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:28:29[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9178 ms
INFO  22-01-16 07:28:30[restartedMain] [HikariDataSource:110] - HikariPool-5 - Starting...
INFO  22-01-16 07:28:30[restartedMain] [HikariDataSource:123] - HikariPool-5 - Start completed.
INFO  22-01-16 07:28:31[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:28:31[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:28:31[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:28:31[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:28:32[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:28:33[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 4632539e-6608-48a7-b02d-24a7c593b474

INFO  22-01-16 07:28:34[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b610e2a, org.springframework.security.web.context.SecurityContextPersistenceFilter@6403723d, org.springframework.security.web.header.HeaderWriterFilter@3bb9d209, org.springframework.web.filter.CorsFilter@100f17b1, org.springframework.security.web.authentication.logout.LogoutFilter@228f1199, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@55e5e08f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d23659, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@700e8570, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59b49d09, org.springframework.security.web.session.SessionManagementFilter@dc400ab, org.springframework.security.web.access.ExceptionTranslationFilter@4174088c]
INFO  22-01-16 07:28:35[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:28:35[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:28:35[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:28:35[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.272 seconds (JVM running for 1630.385)
INFO  22-01-16 07:28:35[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-16 07:31:11[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:31:11[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/search-room
INFO  22-01-16 07:31:11[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-16 07:37:52[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 07:37:52[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/location/places
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [LocationApiLogicServiceImpl:47] - places: Recommanded places nearby
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [LocationApiLogicServiceImpl:51] - Google Places Url: https://maps.googleapis.com/maps/api/place/queryautocomplete/json?key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc&language=en&input=Recommanded+places+nearby
INFO  22-01-16 07:37:52[http-nio-8080-exec-4] [LocationApiLogicServiceImpl:55] - Responded Places info:{
   "predictions" : [],
   "status" : "ZERO_RESULTS"
}

INFO  22-01-16 07:57:15[Thread-19] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:57:15[Thread-19] [HikariDataSource:350] - HikariPool-5 - Shutdown initiated...
INFO  22-01-16 07:57:15[Thread-19] [HikariDataSource:352] - HikariPool-5 - Shutdown completed.
INFO  22-01-16 07:57:15[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:57:15[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:57:21[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:57:23[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2120 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:57:24[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:57:25[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:57:25[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:57:25[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:57:25[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:57:25[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:57:25[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9900 ms
INFO  22-01-16 07:57:26[restartedMain] [HikariDataSource:110] - HikariPool-6 - Starting...
INFO  22-01-16 07:57:26[restartedMain] [HikariDataSource:123] - HikariPool-6 - Start completed.
INFO  22-01-16 07:57:27[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:57:27[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:57:27[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:57:27[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:57:28[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:57:30[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 8664a82e-44ea-40ac-81e2-037a3352f0dc

INFO  22-01-16 07:57:31[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bc51aa2, org.springframework.security.web.context.SecurityContextPersistenceFilter@211d5d39, org.springframework.security.web.header.HeaderWriterFilter@6ce4741, org.springframework.web.filter.CorsFilter@256ccfcf, org.springframework.security.web.authentication.logout.LogoutFilter@52112a43, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@1e992cbc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28b10b26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c31a53e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c6624d1, org.springframework.security.web.session.SessionManagementFilter@3b8cc5e, org.springframework.security.web.access.ExceptionTranslationFilter@505b3fdb]
INFO  22-01-16 07:57:31[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:57:32[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:57:32[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:57:32[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.709 seconds (JVM running for 3366.918)
INFO  22-01-16 07:57:32[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:57:38[Thread-23] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:57:38[Thread-23] [HikariDataSource:350] - HikariPool-6 - Shutdown initiated...
INFO  22-01-16 07:57:38[Thread-23] [HikariDataSource:352] - HikariPool-6 - Shutdown completed.
INFO  22-01-16 07:57:39[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:57:39[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:57:45[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:57:47[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1859 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:57:48[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:57:49[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:57:49[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:57:49[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:57:49[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:57:49[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:57:49[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9407 ms
INFO  22-01-16 07:57:49[restartedMain] [HikariDataSource:110] - HikariPool-7 - Starting...
INFO  22-01-16 07:57:49[restartedMain] [HikariDataSource:123] - HikariPool-7 - Start completed.
INFO  22-01-16 07:57:50[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:57:50[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:57:51[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:57:51[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:57:51[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:57:53[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: e36acb7e-3af9-42c3-8ae4-fb5ea7df9c0c

INFO  22-01-16 07:57:54[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55a4c7e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@29628103, org.springframework.security.web.header.HeaderWriterFilter@593d6ec9, org.springframework.web.filter.CorsFilter@2fb5685c, org.springframework.security.web.authentication.logout.LogoutFilter@779aec4e, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@156754e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50a18fa2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62d8f859, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f10c867, org.springframework.security.web.session.SessionManagementFilter@32c34fc0, org.springframework.security.web.access.ExceptionTranslationFilter@47b7d1bc]
INFO  22-01-16 07:57:55[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:57:55[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:57:55[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:57:55[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.375 seconds (JVM running for 3390.334)
INFO  22-01-16 07:57:55[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 07:59:09[Thread-27] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 07:59:09[Thread-27] [HikariDataSource:350] - HikariPool-7 - Shutdown initiated...
INFO  22-01-16 07:59:09[Thread-27] [HikariDataSource:352] - HikariPool-7 - Shutdown completed.
INFO  22-01-16 07:59:10[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 07:59:10[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 07:59:15[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 07:59:18[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2567 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 07:59:19[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 07:59:20[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 07:59:20[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:59:20[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 07:59:20[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 07:59:20[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 07:59:20[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9927 ms
INFO  22-01-16 07:59:21[restartedMain] [HikariDataSource:110] - HikariPool-8 - Starting...
INFO  22-01-16 07:59:21[restartedMain] [HikariDataSource:123] - HikariPool-8 - Start completed.
INFO  22-01-16 07:59:21[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 07:59:22[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 07:59:22[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 07:59:22[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 07:59:23[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 07:59:25[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: d06d2435-497a-4ba5-9fd5-ad10b02f7567

INFO  22-01-16 07:59:26[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d08dd16, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b7ad58c, org.springframework.security.web.header.HeaderWriterFilter@7654e14d, org.springframework.web.filter.CorsFilter@1b4d9d43, org.springframework.security.web.authentication.logout.LogoutFilter@2d99cd01, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@4b6e6ecc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65f76c38, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34f8b742, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54655ae3, org.springframework.security.web.session.SessionManagementFilter@77e079c8, org.springframework.security.web.access.ExceptionTranslationFilter@283eddb6]
INFO  22-01-16 07:59:27[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 07:59:27[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 07:59:27[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 07:59:27[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 17.386 seconds (JVM running for 3482.333)
INFO  22-01-16 07:59:27[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 10:19:46[Thread-31] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 10:19:46[Thread-31] [HikariDataSource:350] - HikariPool-8 - Shutdown initiated...
INFO  22-01-16 10:19:46[Thread-31] [HikariDataSource:352] - HikariPool-8 - Shutdown completed.
INFO  22-01-16 10:19:47[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 10:19:47[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 10:19:53[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 10:19:55[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2096 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 10:19:56[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 10:19:57[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 10:19:57[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 10:19:57[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 10:19:57[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 10:19:57[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 10:19:57[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 10833 ms
INFO  22-01-16 10:19:58[restartedMain] [HikariDataSource:110] - HikariPool-9 - Starting...
INFO  22-01-16 10:19:58[restartedMain] [HikariDataSource:123] - HikariPool-9 - Start completed.
INFO  22-01-16 10:19:59[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 10:19:59[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 10:20:00[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 10:20:00[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 10:20:01[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-16 10:20:02[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roomController': Unsatisfied dependency expressed through field 'roomApiLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-16 10:20:02[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 10:20:02[restartedMain] [HikariDataSource:350] - HikariPool-9 - Shutdown initiated...
INFO  22-01-16 10:20:02[restartedMain] [HikariDataSource:352] - HikariPool-9 - Shutdown completed.
INFO  22-01-16 10:20:02[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-16 10:20:02[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-16 10:20:02[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field roomApiLogicService in com.example.gradlebnbadminapi.controller.RoomController required a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' in your configuration.

INFO  22-01-16 10:31:55[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 10:31:55[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 10:31:59[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 10:32:00[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1191 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 10:32:01[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 10:32:01[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 10:32:01[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 10:32:01[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 10:32:01[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 10:32:01[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 10:32:01[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6618 ms
INFO  22-01-16 10:32:02[restartedMain] [HikariDataSource:110] - HikariPool-10 - Starting...
INFO  22-01-16 10:32:02[restartedMain] [HikariDataSource:123] - HikariPool-10 - Start completed.
INFO  22-01-16 10:32:02[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 10:32:02[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 10:32:02[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 10:32:02[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 10:32:03[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 10:32:04[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 8429cf9c-ca31-45de-9e73-1fdd579c0a1e

INFO  22-01-16 10:32:05[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42df23e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2a3d1066, org.springframework.security.web.header.HeaderWriterFilter@4c9a9446, org.springframework.web.filter.CorsFilter@4a29413b, org.springframework.security.web.authentication.logout.LogoutFilter@197f70d0, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@16d5a8f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43894168, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b29c5fb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b448fa7, org.springframework.security.web.session.SessionManagementFilter@2a6559f9, org.springframework.security.web.access.ExceptionTranslationFilter@51170940]
INFO  22-01-16 10:32:06[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 10:32:06[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 10:32:06[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 10:32:06[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 11.535 seconds (JVM running for 12641.233)
INFO  22-01-16 10:32:06[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 10:40:34[Thread-35] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 10:40:34[Thread-35] [HikariDataSource:350] - HikariPool-10 - Shutdown initiated...
INFO  22-01-16 10:40:34[Thread-35] [HikariDataSource:352] - HikariPool-10 - Shutdown completed.
INFO  22-01-16 10:40:34[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 10:40:34[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 10:40:38[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 10:40:39[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1071 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 10:40:40[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 10:40:40[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 10:40:40[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 10:40:40[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 10:40:40[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 10:40:40[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 10:40:40[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5687 ms
INFO  22-01-16 10:40:40[restartedMain] [HikariDataSource:110] - HikariPool-11 - Starting...
INFO  22-01-16 10:40:40[restartedMain] [HikariDataSource:123] - HikariPool-11 - Start completed.
INFO  22-01-16 10:40:41[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 10:40:41[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 10:40:41[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 10:40:41[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 10:40:41[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 10:40:43[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 4aa60adf-38ab-4152-a7e9-aabaef670993

INFO  22-01-16 10:40:43[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ce38443, org.springframework.security.web.context.SecurityContextPersistenceFilter@220ed6f9, org.springframework.security.web.header.HeaderWriterFilter@768bb4ac, org.springframework.web.filter.CorsFilter@2812c667, org.springframework.security.web.authentication.logout.LogoutFilter@73b9975b, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@ad891bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cec773a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27698cdf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@244cb112, org.springframework.security.web.session.SessionManagementFilter@3576b975, org.springframework.security.web.access.ExceptionTranslationFilter@374331eb]
INFO  22-01-16 10:40:44[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 10:40:44[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 10:40:44[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 10:40:44[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 9.976 seconds (JVM running for 13159.314)
INFO  22-01-16 10:40:44[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 12:16:54[Thread-42] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 12:16:55[Thread-42] [HikariDataSource:350] - HikariPool-11 - Shutdown initiated...
INFO  22-01-16 12:16:55[Thread-42] [HikariDataSource:352] - HikariPool-11 - Shutdown completed.
INFO  22-01-16 12:16:55[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 12:16:55[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 12:16:59[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 12:17:00[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1443 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 12:17:01[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 12:17:01[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 12:17:01[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 12:17:01[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 12:17:01[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 12:17:01[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 12:17:01[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5794 ms
INFO  22-01-16 12:17:02[restartedMain] [HikariDataSource:110] - HikariPool-12 - Starting...
INFO  22-01-16 12:17:02[restartedMain] [HikariDataSource:123] - HikariPool-12 - Start completed.
INFO  22-01-16 12:17:02[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 12:17:02[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 12:17:03[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 12:17:03[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 12:17:03[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 12:17:04[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: acd36856-5f89-45c1-ab64-1a12d6c2e924

INFO  22-01-16 12:17:05[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@314d96eb, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a41783b, org.springframework.security.web.header.HeaderWriterFilter@564b1acc, org.springframework.web.filter.CorsFilter@5c843b00, org.springframework.security.web.authentication.logout.LogoutFilter@1c0bb023, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@4c9fc746, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75826c7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b11857a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5671985f, org.springframework.security.web.session.SessionManagementFilter@4aa4af5, org.springframework.security.web.access.ExceptionTranslationFilter@4f701f90]
INFO  22-01-16 12:17:06[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 12:17:06[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 12:17:06[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 12:17:06[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 10.663 seconds (JVM running for 18941.076)
INFO  22-01-16 12:17:06[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 13:00:42[Thread-46] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 13:00:42[Thread-46] [HikariDataSource:350] - HikariPool-12 - Shutdown initiated...
INFO  22-01-16 13:00:42[Thread-46] [HikariDataSource:352] - HikariPool-12 - Shutdown completed.
INFO  22-01-16 13:00:43[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 13:00:43[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 13:00:47[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 13:00:49[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1489 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 13:00:49[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 13:00:50[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 13:00:50[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 13:00:50[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 13:00:50[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 13:00:50[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 13:00:50[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6679 ms
INFO  22-01-16 13:00:50[restartedMain] [HikariDataSource:110] - HikariPool-13 - Starting...
INFO  22-01-16 13:00:50[restartedMain] [HikariDataSource:123] - HikariPool-13 - Start completed.
INFO  22-01-16 13:00:51[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 13:00:51[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 13:00:52[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 13:00:52[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 13:00:52[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 13:00:54[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: e20ee892-9073-4148-bcf1-92d38ebe7b40

INFO  22-01-16 13:00:55[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fe861e1, org.springframework.security.web.context.SecurityContextPersistenceFilter@791e8cd, org.springframework.security.web.header.HeaderWriterFilter@3902cf62, org.springframework.web.filter.CorsFilter@1312f86b, org.springframework.security.web.authentication.logout.LogoutFilter@24f1bbd0, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@e0600d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ddbc988, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@320d6c8e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43f53f9, org.springframework.security.web.session.SessionManagementFilter@698ef669, org.springframework.security.web.access.ExceptionTranslationFilter@485a5156]
INFO  22-01-16 13:00:55[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 13:00:55[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 13:00:55[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 13:00:55[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 12.542 seconds (JVM running for 21570.832)
INFO  22-01-16 13:00:55[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 13:01:26[Thread-50] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-16 13:01:26[Thread-50] [HikariDataSource:350] - HikariPool-13 - Shutdown initiated...
INFO  22-01-16 13:01:26[Thread-50] [HikariDataSource:352] - HikariPool-13 - Shutdown completed.
INFO  22-01-16 13:01:27[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 276 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-16 13:01:27[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-16 13:01:31[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-16 13:01:32[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1105 ms. Found 9 JPA repository interfaces.
WARN  22-01-16 13:01:32[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-16 13:01:33[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-16 13:01:33[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 13:01:33[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-16 13:01:33[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-16 13:01:33[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-16 13:01:33[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6064 ms
INFO  22-01-16 13:01:33[restartedMain] [HikariDataSource:110] - HikariPool-14 - Starting...
INFO  22-01-16 13:01:33[restartedMain] [HikariDataSource:123] - HikariPool-14 - Start completed.
INFO  22-01-16 13:01:33[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-16 13:01:34[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-16 13:01:34[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-16 13:01:34[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-16 13:01:34[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-16 13:01:36[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 44addcce-22a5-490b-936f-06ef01045fa6

INFO  22-01-16 13:01:36[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@53ad7a1c, org.springframework.security.web.context.SecurityContextPersistenceFilter@721bb1cd, org.springframework.security.web.header.HeaderWriterFilter@49bce57f, org.springframework.web.filter.CorsFilter@278f1c79, org.springframework.security.web.authentication.logout.LogoutFilter@75f876f7, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@50a84df7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e8d80ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7034015d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f5431a2, org.springframework.security.web.session.SessionManagementFilter@4dcce202, org.springframework.security.web.access.ExceptionTranslationFilter@21d1bd75]
INFO  22-01-16 13:01:37[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-16 13:01:37[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-16 13:01:37[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-16 13:01:37[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 10.46 seconds (JVM running for 21612.428)
INFO  22-01-16 13:01:37[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-16 13:02:01[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-16 13:02:01[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-16 13:02:01[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
ERROR 22-01-16 13:02:01[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: class java.lang.String cannot be cast to class io.jsonwebtoken.Claims (java.lang.String is in module java.base of loader 'bootstrap'; io.jsonwebtoken.Claims is in unnamed module of loader 'app')] with root cause
java.lang.ClassCastException: class java.lang.String cannot be cast to class io.jsonwebtoken.Claims (java.lang.String is in module java.base of loader 'bootstrap'; io.jsonwebtoken.Claims is in unnamed module of loader 'app')
	at com.example.gradlebnbadminapi.jwt.TokenProvider.getClaimsData(TokenProvider.java:57)
	at com.example.gradlebnbadminapi.aop.ParameterAop.Before(ParameterAop.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-16 13:02:12[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:02:12[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-16 13:02:12[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-15 09:59:25.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 13:02:13[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/16/2022 13:02:12.712' where id=1

DEBUG 22-01-16 13:02:13[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/16/2022 13:02:12.712' where id=1
 {executed in 6 msec}
DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-16 13:02:13.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-16T22:02:13 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 13 msec}
INFO  22-01-16 13:02:26[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-16 13:02:26[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

ERROR 22-01-16 13:02:26[http-nio-8080-exec-5] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

java.sql.SQLSyntaxErrorException: Unknown column 'amenities1_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-16 13:02:26[http-nio-8080-exec-5] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {FAILED after 161 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'amenities1_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-16 13:02:26[http-nio-8080-exec-5] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-16 13:02:26[http-nio-8080-exec-5] [SqlExceptionHelper:142] - Unknown column 'amenities1_.updated_at' in 'field list'
ERROR 22-01-16 13:02:26[http-nio-8080-exec-5] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'amenities1_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-16 13:02:13.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-16T22:02:13 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 3 msec}
INFO  22-01-16 13:03:34[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

ERROR 22-01-16 13:03:34[http-nio-8080-exec-7] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

java.sql.SQLSyntaxErrorException: Unknown column 'bedlist0_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$response$7(RoomApiLogicServiceImpl.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-16 13:03:34[http-nio-8080-exec-7] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'bedlist0_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$response$7(RoomApiLogicServiceImpl.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-16 13:03:34[http-nio-8080-exec-7] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-16 13:03:34[http-nio-8080-exec-7] [SqlExceptionHelper:142] - Unknown column 'bedlist0_.updated_at' in 'field list'
ERROR 22-01-16 13:03:34[http-nio-8080-exec-7] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'bedlist0_.updated_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:390)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:163)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:104)
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87)
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:710)
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2163)
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589)
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264)
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585)
	at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:149)
	at org.hibernate.collection.internal.PersistentBag.iterator(PersistentBag.java:387)
	at java.base/java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)
	at java.base/java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$response$7(RoomApiLogicServiceImpl.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.response(RoomApiLogicServiceImpl.java:285)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.get(RoomApiLogicServiceImpl.java:89)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$5184ce97.get(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.get(RoomController.java:21)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$2fcd1dd1.get(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-16 13:02:13.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-16T22:02:13 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 0 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 2 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 0 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-16 13:04:14[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

INFO  22-01-16 13:04:14[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)])]
