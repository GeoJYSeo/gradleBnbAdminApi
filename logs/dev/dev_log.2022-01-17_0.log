INFO  22-01-17 17:07:39[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:07:39[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-01-17 17:07:39[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:07:39[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-01-17 17:07:39[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  22-01-17 17:07:50[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:07:53[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2619 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:07:55[restartedMain] [InstanceMetadataServiceResourceFetcher:105] - Fail to retrieve token 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-17 17:07:55[restartedMain] [EC2MetadataUtils:409] - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). Failed to connect to service endpoint: 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-17 17:07:57[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:08:02[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:08:02[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:08:02[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:08:02[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:08:02[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:08:02[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 22891 ms
INFO  22-01-17 17:08:03[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-01-17 17:08:04[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-01-17 17:08:05[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:08:06[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.32.Final
INFO  22-01-17 17:08:08[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  22-01-17 17:08:09[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:08:17[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:08:17[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:08:18[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:08:25[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 964dfcff-bdb6-43ae-aca9-39a69ff2c7ef

INFO  22-01-17 17:08:27[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@617c2642, org.springframework.security.web.context.SecurityContextPersistenceFilter@36fddd10, org.springframework.security.web.header.HeaderWriterFilter@60780b39, org.springframework.web.filter.CorsFilter@200e24bd, org.springframework.security.web.authentication.logout.LogoutFilter@f4c9f54, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@64142353, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a4a0a9a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d7f425a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68fc0ff, org.springframework.security.web.session.SessionManagementFilter@80a091d, org.springframework.security.web.access.ExceptionTranslationFilter@5375ab77]
INFO  22-01-17 17:08:32[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:08:34[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:08:34[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:08:34[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 58.79 seconds (JVM running for 60.855)
INFO  22-01-17 17:11:52[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:11:52[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:11:52[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
ERROR 22-01-17 17:11:52[http-nio-8080-exec-1] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-17T13:02:13Z. Current time: 2022-01-17T17:11:52Z, a difference of 14979923 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:11:53[http-nio-8080-exec-1] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:11:53[http-nio-8080-exec-1] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-17 17:12:05[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:12:05[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 15 msec}
INFO  22-01-17 17:12:05[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-16 13:02:13.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:12:06[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. update user set last_login_at='01/17/2022 17:12:06.162' where id=1

DEBUG 22-01-17 17:12:06[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. update user set last_login_at='01/17/2022 17:12:06.162' where id=1
 {executed in 1 msec}
DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:12:06.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:12:06 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 5 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 3 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 0 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 3 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:12:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

INFO  22-01-17 17:12:21[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)])]
INFO  22-01-17 17:17:26[Thread-5] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:17:26[Thread-5] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-01-17 17:17:26[Thread-5] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-01-17 17:17:27[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:17:27[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:17:32[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:17:34[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2056 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:17:36[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:17:36[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:17:36[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:17:36[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:17:36[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:17:36[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:17:36[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9903 ms
INFO  22-01-17 17:17:37[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  22-01-17 17:17:37[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  22-01-17 17:17:37[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:17:38[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:17:38[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:17:38[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:17:39[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:17:41[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 3704148d-e98e-44e2-a2ed-7ee15e127c40

INFO  22-01-17 17:17:42[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d0ef96c, org.springframework.security.web.context.SecurityContextPersistenceFilter@51dd92c5, org.springframework.security.web.header.HeaderWriterFilter@662ec0b1, org.springframework.web.filter.CorsFilter@5df8d9d2, org.springframework.security.web.authentication.logout.LogoutFilter@5620f5aa, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@3cf54994, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ef600e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ecd6cce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3962847c, org.springframework.security.web.session.SessionManagementFilter@65ac065e, org.springframework.security.web.access.ExceptionTranslationFilter@924d41b]
INFO  22-01-17 17:17:42[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:17:42[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:17:42[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:17:42[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.583 seconds (JVM running for 609.647)
INFO  22-01-17 17:17:42[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:12:06.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:12:06 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:17:44[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

INFO  22-01-17 17:17:44[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)])]
ERROR 22-01-17 17:19:19[http-nio-8080-exec-6] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:19:19Z, a difference of 112794424 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:19:19[http-nio-8080-exec-5] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:19:19Z, a difference of 112794424 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-17 17:19:19[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
12. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:19:19[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:19:19[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-17 17:19:19[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
12. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:19:19[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:12:06.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:19:19[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:12:06.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:19:19[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. update user set last_login_at='01/17/2022 17:19:19.533' where id=1

DEBUG 22-01-17 17:19:19[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
12. update user set last_login_at='01/17/2022 17:19:19.534' where id=1

DEBUG 22-01-17 17:19:19[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. update user set last_login_at='01/17/2022 17:19:19.533' where id=1
 {executed in 1 msec}
DEBUG 22-01-17 17:19:19[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
12. update user set last_login_at='01/17/2022 17:19:19.534' where id=1
 {executed in 10 msec}
ERROR 22-01-17 17:20:22[http-nio-8080-exec-10] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:20:22Z, a difference of 112857623 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:20:22[http-nio-8080-exec-10] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:20:22[http-nio-8080-exec-10] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-17 17:20:26[http-nio-8080-exec-1] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:20:26Z, a difference of 112861784 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:20:26[http-nio-8080-exec-1] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:20:26[http-nio-8080-exec-1] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-17 17:20:49[http-nio-8080-exec-2] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:20:49Z, a difference of 112884448 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:20:49[http-nio-8080-exec-2] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:20:49[http-nio-8080-exec-2] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:21:43[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

INFO  22-01-17 17:21:43[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)])]
ERROR 22-01-17 17:21:52[http-nio-8080-exec-7] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:21:52Z, a difference of 112947038 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:21:52[http-nio-8080-exec-7] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:21:52[http-nio-8080-exec-7] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-17 17:22:12[http-nio-8080-exec-8] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-16T09:59:25Z. Current time: 2022-01-17T17:22:12Z, a difference of 112967356 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-17 17:22:12[http-nio-8080-exec-8] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-17 17:22:12[http-nio-8080-exec-8] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-17 17:22:24[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:22:24[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-17 17:22:24[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:22:24[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:22:24[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-17 17:22:24[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-17 17:22:24[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:22:24[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:22:24[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 2 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:22:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

INFO  22-01-17 17:22:58[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)])]
DEBUG 22-01-17 17:23:44[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:23:44[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/location
INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [LocationApiLogicServiceImpl:36] - Google Geometry Url: https://maps.googleapis.com/maps/api/geocode/json?latlng=35.5762176,139.7358592&language=en&key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc
INFO  22-01-17 17:23:44[http-nio-8080-exec-3] [LocationApiLogicServiceImpl:40] - Responded Geometry info: {
   "plus_code" : {
      "compound_code" : "HPGP+F8Q Ota City, Tokyo, Japan",
      "global_code" : "8Q7XHPGP+F8Q"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "11",
               "short_name" : "11",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-11 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "location" : {
               "lat" : 35.576195,
               "lng" : 139.7358564
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775439802915,
                  "lng" : 139.7372053802915
               },
               "southwest" : {
                  "lat" : 35.5748460197085,
                  "lng" : 139.7345074197085
               }
            }
         },
         "place_id" : "ChIJo_F5wLNhGGAR3ZJ0VjxRESc",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "street_address" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1",
               "short_name" : "1",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-1 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762398,
                  "lng" : 139.7358912
               },
               "southwest" : {
                  "lat" : 35.5761781,
                  "lng" : 139.735711
               }
            },
            "location" : {
               "lat" : 35.5762071,
               "lng" : 139.7357942
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775579302915,
                  "lng" : 139.7371500802915
               },
               "southwest" : {
                  "lat" : 35.5748599697085,
                  "lng" : 139.7344521197085
               }
            }
         },
         "place_id" : "ChIJfST3v7NhGGARCuuUiP6q1nE",
         "types" : [ "premise" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "HPGP+F8",
               "short_name" : "HPGP+F8",
               "types" : [ "plus_code" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "HPGP+F8 Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57625,
                  "lng" : 139.735875
               },
               "southwest" : {
                  "lat" : 35.576125,
                  "lng" : 139.73575
               }
            },
            "location" : {
               "lat" : 35.5762176,
               "lng" : 139.7358592
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775364802915,
                  "lng" : 139.7371614802915
               },
               "southwest" : {
                  "lat" : 35.5748385197085,
                  "lng" : 139.7344635197085
               }
            }
         },
         "place_id" : "GhIJl7CRf8HJQUARvs6XKIx3YUA",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "plus_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Mihara Street",
               "short_name" : "Mihara St",
               "types" : [ "route" ]
            },
            {
               "long_name" : "5",
               "short_name" : "5",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Mihara St, 1-chōme-5 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762533,
                  "lng" : 139.735672
               },
               "southwest" : {
                  "lat" : 35.576126,
                  "lng" : 139.7356173
               }
            },
            "location" : {
               "lat" : 35.5761897,
               "lng" : 139.7356446
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57753863029149,
                  "lng" : 139.7369936302915
               },
               "southwest" : {
                  "lat" : 35.57484066970849,
                  "lng" : 139.7342956697085
               }
            }
         },
         "place_id" : "ChIJtZqDlbNhGGARXmmGMykr0mk",
         "types" : [ "route" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome-15 Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57627069999999,
                  "lng" : 139.7366059
               },
               "southwest" : {
                  "lat" : 35.5759985,
                  "lng" : 139.7356182
               }
            },
            "location" : {
               "lat" : 35.5761067,
               "lng" : 139.7361035
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57748358029149,
                  "lng" : 139.7374610302915
               },
               "southwest" : {
                  "lat" : 35.57478561970849,
                  "lng" : 139.7347630697085
               }
            }
         },
         "place_id" : "ChIJvWlowbNhGGARgK1ORU6LGRg",
         "types" : [ "political", "sublocality", "sublocality_level_4" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            },
            "location" : {
               "lat" : 35.5758024,
               "lng" : 139.7390173
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            }
         },
         "place_id" : "ChIJu8heqrFhGGARuv9YOBCQzGo",
         "types" : [ "political", "sublocality", "sublocality_level_3" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJxZNj_qhhGGARTW5fPBcmOYU",
         "types" : [ "postal_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJLRKfCK9hGGARvfLtFpOxWWw",
         "types" : [ "political", "sublocality", "sublocality_level_2" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ōmori",
               "short_name" : "Ōmori",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ōmori, Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            },
            "location" : {
               "lat" : 35.5736324,
               "lng" : 139.7338633
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            }
         },
         "place_id" : "ChIJExMzH6pvGGARsS6Ipgy1Jn0",
         "types" : [ "neighborhood", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            },
            "location" : {
               "lat" : 35.561407,
               "lng" : 139.7160626
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            }
         },
         "place_id" : "ChIJQ2ajwVJgGGARSQ1cUKxqwk8",
         "types" : [ "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "colloquial_area", "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            },
            "location" : {
               "lat" : 35.6803997,
               "lng" : 139.7690174
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            }
         },
         "place_id" : "ChIJXSModoWLGGARILWiCfeu2M0",
         "types" : [ "colloquial_area", "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            },
            "location" : {
               "lat" : 35.6761919,
               "lng" : 139.6503106
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            }
         },
         "place_id" : "ChIJ51cu8IcbXWARiRtXIothAS4",
         "types" : [ "administrative_area_level_1", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            },
            "location" : {
               "lat" : 36.204824,
               "lng" : 138.252924
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            }
         },
         "place_id" : "ChIJLxl_1w9OZzQRRFJmfNR1QvU",
         "types" : [ "country", "political" ]
      }
   ],
   "status" : "OK"
}

DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:24:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 3 msec}
INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:24:05[http-nio-8080-exec-6] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:24:50[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:24:50[http-nio-8080-exec-7] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:24:58[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:58[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:59] - email: test@gmail.com
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:97] - Conveniences builder.
DEBUG 22-01-17 17:24:58[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:24:58[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:24:58[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:24:58.953', 'test', 'House', 6, 'test', 1)

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:24:58.953', 'test', 'House', 6, 'test', 1)
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:24:58.953', 'test', 'House', 6, 'test', 1)
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:114] - Conveniences builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:126] - Conveniences save: Conveniences(id=null, kitchen=NOT, laundryRoom=NOT, parkingLot=NOT, gym=NOT, swimmingPool=NOT, jacuzzi=NOT, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/17/2022 17:24:59.133', 1, 1, 1, 1, 1, 1)

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/17/2022 17:24:59.133', 1, 1, 1, 1, 1, 1)
 {executed in 2 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/17/2022 17:24:59.133', 1, 1, 1, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:131] - Location builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:144] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ota City', '01/17/2022 17:24:59.175', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ota City', '01/17/2022 17:24:59.175', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ota City', '01/17/2022 17:24:59.175', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:149] - Vacancy builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:158] - Vacancy save: Vacancy(id=null, price=100000, startDate=2022-02-01, endDate=2022-02-10, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (3, '01/17/2022 17:24:59.205', '2022-02-10', '100000', '2022-02-01')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (3, '01/17/2022 17:24:59.205', '2022-02-10', '100000', '2022-02-01')
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (3, '01/17/2022 17:24:59.205', '2022-02-10', '100000', '2022-02-01')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:163] - Room builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:173] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (3, 1, 'private', '01/17/2022 17:24:59.260', 0, 0, 'entire')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (3, 1, 'private', '01/17/2022 17:24:59.260', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (3, 1, 'private', '01/17/2022 17:24:59.260', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:178] - Private bed builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:192] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=3, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:24:59.260554, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:24:59.305', 0, 3, 'Single')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:24:59.305', 0, 3, 'Single')
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:24:59.305', 0, 3, 'Single')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:192] - Private bed save: Bed(id=null, type=Double, count=2, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=3, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:24:59.260554, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.332', 0, 3, 'Double')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.332', 0, 3, 'Double')
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.332', 0, 3, 'Double')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:198] - Public bed builder
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:210] - Public bed save: Bed(id=null, type=Queen-size, count=2, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=3, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:24:59.260554, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.345', 1, 3, 'Queen-size')

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.345', 1, 3, 'Queen-size')
 {executed in 1 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:24:59.345', 1, 3, 'Queen-size')
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:216] - Amenities builder.
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:236] - Amenities save: Amenities(id=null, wifi=NOT, tv=NOT, heater=NOT, airConditioner=NOT, iron=NOT, shampoo=NOT, hairDryer=NOT, breakfast=NOT, businessSpace=NOT, fireplace=NOT, closet=NOT, guestEntrance=NOT, createdAt=null, updatedAt=null, room=Room(id=3, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:24:59.260554, updatedAt=null, accommodation=Accommodation(id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:24:58.953270, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 17:24:59.377', 1, 1, 1, 1, 1, 3, 1, 1, 1)

DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
11. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 17:24:59.377', 1, 1, 1, 1, 1, 3, 1, 1, 1)
 {executed in 0 msec}
DEBUG 22-01-17 17:24:59[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 17:24:59.377', 1, 1, 1, 1, 1, 3, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 17:24:59[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address       |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |3  |3  |Town House    |2022-01-17 17:24:59.0 |test             |House               |6                   |test  |null       |1       |3  |3                |2022-01-17 17:24:59.0 |1   |1       |1       |1            |1           |1             |null       |3  |3                |Ota City     |2022-01-17 17:24:59.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|3                |3  |3  |3                |1              |private       |2022-01-17 17:24:59.0 |0                   |0      |entire |null       |3  |1               |1         |1              |1      |2022-01-17 17:24:59.0 |1         |1              |1          |1      |1    |3       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|3       |6  |6  |3     |2022-01-17 17:24:59.0 |0          |3       |Single     |null       |
|3       |7  |7  |2     |2022-01-17 17:24:59.0 |0          |3       |Double     |null       |
|3       |8  |8  |2     |2022-01-17 17:24:59.0 |1          |3       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3

DEBUG 22-01-17 17:25:03[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
11. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|3                |3  |3  |3                |2022-01-17 17:24:59.0 |2022-02-10 |100000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

INFO  22-01-17 17:25:03[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=100000, startDate=2022-02-01, endDate=2022-02-10)])]
INFO  22-01-17 17:28:31[Thread-7] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:28:31[Thread-7] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  22-01-17 17:28:31[Thread-7] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  22-01-17 17:28:32[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:28:32[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:28:38[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:28:40[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2165 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:28:41[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:28:42[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:28:42[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:28:42[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:28:42[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:28:42[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:28:42[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9964 ms
INFO  22-01-17 17:28:42[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  22-01-17 17:28:42[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  22-01-17 17:28:43[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:28:43[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:28:44[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:28:44[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:28:45[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:28:47[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: ed082a8c-4360-4457-9ffa-31c6ae5b4bda

INFO  22-01-17 17:28:48[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@682d832a, org.springframework.security.web.context.SecurityContextPersistenceFilter@3edcc74a, org.springframework.security.web.header.HeaderWriterFilter@712547b2, org.springframework.web.filter.CorsFilter@1387fc01, org.springframework.security.web.authentication.logout.LogoutFilter@2b36d1c9, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@f76a3d9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b6e5d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d753064, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a6f10e0, org.springframework.security.web.session.SessionManagementFilter@6a228423, org.springframework.security.web.access.ExceptionTranslationFilter@5fdafe1]
INFO  22-01-17 17:28:49[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:28:49[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:28:49[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:28:49[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 17.671 seconds (JVM running for 1276.178)
INFO  22-01-17 17:28:49[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:28:56[Thread-11] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:28:56[Thread-11] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  22-01-17 17:28:56[Thread-11] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  22-01-17 17:28:56[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:28:56[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:29:03[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:29:05[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1847 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:29:06[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:29:06[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:29:06[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:29:06[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:29:06[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:29:06[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:29:06[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9803 ms
INFO  22-01-17 17:29:07[restartedMain] [HikariDataSource:110] - HikariPool-4 - Starting...
INFO  22-01-17 17:29:07[restartedMain] [HikariDataSource:123] - HikariPool-4 - Start completed.
INFO  22-01-17 17:29:07[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:29:08[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:29:08[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:29:08[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:29:08[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:29:10[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 6f8142af-2088-4aa1-abbf-34787e4657b3

INFO  22-01-17 17:29:11[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77c1baed, org.springframework.security.web.context.SecurityContextPersistenceFilter@113e9da3, org.springframework.security.web.header.HeaderWriterFilter@18ab2feb, org.springframework.web.filter.CorsFilter@3627cde7, org.springframework.security.web.authentication.logout.LogoutFilter@4d6cce6d, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@3c565513, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7521b1e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34b40cdc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c8e88bd, org.springframework.security.web.session.SessionManagementFilter@741d0dff, org.springframework.security.web.access.ExceptionTranslationFilter@57167db5]
INFO  22-01-17 17:29:12[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:29:12[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:29:12[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:29:12[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.952 seconds (JVM running for 1299.006)
INFO  22-01-17 17:29:12[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:30:12[Thread-15] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:30:12[Thread-15] [HikariDataSource:350] - HikariPool-4 - Shutdown initiated...
INFO  22-01-17 17:30:12[Thread-15] [HikariDataSource:352] - HikariPool-4 - Shutdown completed.
INFO  22-01-17 17:30:12[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:30:12[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:30:18[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:30:20[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2195 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:30:21[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:30:22[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:30:22[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:30:22[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:30:22[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:30:22[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:30:22[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9759 ms
INFO  22-01-17 17:30:22[restartedMain] [HikariDataSource:110] - HikariPool-5 - Starting...
INFO  22-01-17 17:30:22[restartedMain] [HikariDataSource:123] - HikariPool-5 - Start completed.
INFO  22-01-17 17:30:23[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:30:23[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:30:24[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:30:24[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:30:24[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:30:26[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: d01ceaf1-d720-48ce-86a2-744c8cc26738

INFO  22-01-17 17:30:27[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48f23d12, org.springframework.security.web.context.SecurityContextPersistenceFilter@2fa029a3, org.springframework.security.web.header.HeaderWriterFilter@4e2350a6, org.springframework.web.filter.CorsFilter@36eaa62b, org.springframework.security.web.authentication.logout.LogoutFilter@69ea946c, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@1fa3e05c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ba389c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fd14671, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21d3f0b8, org.springframework.security.web.session.SessionManagementFilter@10c90d35, org.springframework.security.web.access.ExceptionTranslationFilter@4ff57256]
INFO  22-01-17 17:30:28[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:30:29[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:30:29[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:30:29[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.763 seconds (JVM running for 1375.754)
INFO  22-01-17 17:30:29[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:30:40[Thread-19] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:30:40[Thread-19] [HikariDataSource:350] - HikariPool-5 - Shutdown initiated...
INFO  22-01-17 17:30:40[Thread-19] [HikariDataSource:352] - HikariPool-5 - Shutdown completed.
INFO  22-01-17 17:30:41[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:30:41[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:30:48[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:30:50[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1990 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:30:51[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:30:52[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:30:52[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:30:52[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:30:52[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:30:52[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:30:52[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 10460 ms
INFO  22-01-17 17:30:52[restartedMain] [HikariDataSource:110] - HikariPool-6 - Starting...
INFO  22-01-17 17:30:52[restartedMain] [HikariDataSource:123] - HikariPool-6 - Start completed.
INFO  22-01-17 17:30:53[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:30:53[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:30:54[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:30:54[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:30:54[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:30:57[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: c48aeb45-27ff-4574-a205-3fd9740c8231

INFO  22-01-17 17:30:58[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c5bae61, org.springframework.security.web.context.SecurityContextPersistenceFilter@467a8bda, org.springframework.security.web.header.HeaderWriterFilter@229f10b7, org.springframework.web.filter.CorsFilter@6fd3d88f, org.springframework.security.web.authentication.logout.LogoutFilter@560e65ae, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@75ef9d57, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@598ebbe9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ce02c7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56222658, org.springframework.security.web.session.SessionManagementFilter@27fc09b7, org.springframework.security.web.access.ExceptionTranslationFilter@ab2ab2f]
INFO  22-01-17 17:30:59[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:30:59[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:30:59[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:30:59[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 18.278 seconds (JVM running for 1406.119)
INFO  22-01-17 17:30:59[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:31:37[Thread-23] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:31:37[Thread-23] [HikariDataSource:350] - HikariPool-6 - Shutdown initiated...
INFO  22-01-17 17:31:37[Thread-23] [HikariDataSource:352] - HikariPool-6 - Shutdown completed.
INFO  22-01-17 17:31:38[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:31:38[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:31:43[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:31:45[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1874 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:31:46[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:31:47[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:31:47[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:31:47[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:31:47[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:31:47[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:31:47[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8974 ms
INFO  22-01-17 17:31:48[restartedMain] [HikariDataSource:110] - HikariPool-7 - Starting...
INFO  22-01-17 17:31:48[restartedMain] [HikariDataSource:123] - HikariPool-7 - Start completed.
INFO  22-01-17 17:31:48[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:31:48[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:31:49[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:31:49[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:31:49[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:31:51[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 07d267d2-5bad-4a89-a7a2-9940af80b2ce

INFO  22-01-17 17:31:52[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42e0b575, org.springframework.security.web.context.SecurityContextPersistenceFilter@22e63203, org.springframework.security.web.header.HeaderWriterFilter@5cb2c6d2, org.springframework.web.filter.CorsFilter@2fd9706d, org.springframework.security.web.authentication.logout.LogoutFilter@5d7dfac3, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@7a89fc50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3eb4ea69, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74fa2f3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@27342164, org.springframework.security.web.session.SessionManagementFilter@6eaa9e4b, org.springframework.security.web.access.ExceptionTranslationFilter@655f3224]
INFO  22-01-17 17:31:53[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:31:53[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:31:53[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:31:53[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.463 seconds (JVM running for 1460.238)
INFO  22-01-17 17:31:53[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:32:02[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:32:02[http-nio-8080-exec-1] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:32:07[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 0 msec}
INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:32:07[http-nio-8080-exec-2] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:32:27[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:32:27[http-nio-8080-exec-3] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:59] - email: test@gmail.com
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:97] - Conveniences builder.
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:32:40.879', 'test', 'House', 6, 'test', 1)

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:32:40.879', 'test', 'House', 6, 'test', 1)
 {executed in 0 msec}
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:32:40.879', 'test', 'House', 6, 'test', 1)
 {executed in 0 msec}
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:114] - Conveniences builder.
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:126] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/17/2022 17:32:40.922', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/17/2022 17:32:40.922', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/17/2022 17:32:40.922', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:131] - Location builder.
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:144] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ota City', '01/17/2022 17:32:40.953', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ota City', '01/17/2022 17:32:40.953', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 1 msec}
DEBUG 22-01-17 17:32:40[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ota City', '01/17/2022 17:32:40.953', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:149] - Vacancy builder.
INFO  22-01-17 17:32:40[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:158] - Vacancy save: Vacancy(id=null, price=200000, startDate=2022-02-01, endDate=2022-02-10, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (4, '01/17/2022 17:32:40.992', '2022-02-10', '200000', '2022-02-01')

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (4, '01/17/2022 17:32:40.992', '2022-02-10', '200000', '2022-02-01')
 {executed in 0 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (4, '01/17/2022 17:32:40.992', '2022-02-10', '200000', '2022-02-01')
 {executed in 0 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:163] - Room builder.
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:173] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (4, 1, 'private', '01/17/2022 17:32:41.022', 0, 0, 'entire')

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (4, 1, 'private', '01/17/2022 17:32:41.022', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (4, 1, 'private', '01/17/2022 17:32:41.022', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:178] - Private bed builder.
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:192] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:32:41.022160, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:32:41.063', 0, 4, 'Single')

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:32:41.063', 0, 4, 'Single')
 {executed in 1 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:32:41.063', 0, 4, 'Single')
 {executed in 1 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|9             |
|--------------|

INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:192] - Private bed save: Bed(id=null, type=Double, count=2, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:32:41.022160, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.085', 0, 4, 'Double')

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.085', 0, 4, 'Double')
 {executed in 0 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.085', 0, 4, 'Double')
 {executed in 0 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|10            |
|--------------|

INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:198] - Public bed builder
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:210] - Public bed save: Bed(id=null, type=Queen-size, count=2, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:32:41.022160, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.091', 1, 4, 'Queen-size')

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.091', 1, 4, 'Queen-size')
 {executed in 1 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:32:41.091', 1, 4, 'Queen-size')
 {executed in 1 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|11            |
|--------------|

INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:216] - Amenities builder.
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:239] - Amenities save: Amenities(id=null, wifi=HAS, tv=HAS, heater=HAS, airConditioner=HAS, iron=HAS, shampoo=HAS, hairDryer=NOT, breakfast=HAS, businessSpace=HAS, fireplace=HAS, closet=HAS, guestEntrance=HAS, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=Yes, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:32:41.022160, updatedAt=null, accommodation=Accommodation(id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:32:40.879745, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:32:41.098', 0, 0, 1, 0, 0, 4, 0, 0, 0)

DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
61. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:32:41.098', 0, 0, 1, 0, 0, 4, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-17 17:32:41[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
61. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:32:41.098', 0, 0, 1, 0, 0, 4, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-17 17:32:41[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 2 msec}
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address       |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |3  |3  |Town House    |2022-01-17 17:24:59.0 |test             |House               |6                   |test  |null       |1       |3  |3                |2022-01-17 17:24:59.0 |1   |1       |1       |1            |1           |1             |null       |3  |3                |Ota City     |2022-01-17 17:24:59.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |4  |4  |Town House    |2022-01-17 17:32:41.0 |test             |House               |6                   |test  |null       |1       |4  |4                |2022-01-17 17:32:41.0 |0   |0       |0       |0            |0           |0             |null       |4  |4                |Ota City     |2022-01-17 17:32:41.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:32:51[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 0 msec}
INFO  22-01-17 17:32:51[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 0 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3
 {executed in 0 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|3                |3  |3  |3                |1              |private       |2022-01-17 17:24:59.0 |0                   |0      |entire |null       |3  |1               |1         |1              |1      |2022-01-17 17:24:59.0 |1         |1              |1          |1      |1    |3       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3
 {executed in 0 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|3       |6  |6  |3     |2022-01-17 17:24:59.0 |0          |3       |Single     |null       |
|3       |7  |7  |2     |2022-01-17 17:24:59.0 |0          |3       |Double     |null       |
|3       |8  |8  |2     |2022-01-17 17:24:59.0 |1          |3       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|3                |3  |3  |3                |2022-01-17 17:24:59.0 |2022-02-10 |100000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|4                |4  |4  |4                |1              |private       |2022-01-17 17:32:41.0 |0                   |0      |entire |null       |4  |0               |0         |0              |0      |2022-01-17 17:32:41.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 0 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |9  |9  |3     |2022-01-17 17:32:41.0 |0          |4       |Single     |null       |
|4       |10 |10 |2     |2022-01-17 17:32:41.0 |0          |4       |Double     |null       |
|4       |11 |11 |2     |2022-01-17 17:32:41.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4

DEBUG 22-01-17 17:32:52[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|4                |4  |4  |4                |2022-01-17 17:32:41.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

INFO  22-01-17 17:32:52[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=100000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)])]
INFO  22-01-17 17:33:53[Thread-27] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:33:53[Thread-27] [HikariDataSource:350] - HikariPool-7 - Shutdown initiated...
INFO  22-01-17 17:33:53[Thread-27] [HikariDataSource:352] - HikariPool-7 - Shutdown completed.
INFO  22-01-17 17:33:54[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:33:54[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:34:00[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:34:01[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1846 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:34:02[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:34:03[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:34:03[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:34:03[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:34:03[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:34:03[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:34:03[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8831 ms
INFO  22-01-17 17:34:03[restartedMain] [HikariDataSource:110] - HikariPool-8 - Starting...
INFO  22-01-17 17:34:03[restartedMain] [HikariDataSource:123] - HikariPool-8 - Start completed.
INFO  22-01-17 17:34:04[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:34:04[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:34:05[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:34:05[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:34:05[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:34:07[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 1ac7983d-d9f5-4806-9d44-bf06761c6bc2

INFO  22-01-17 17:34:08[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b794aa6, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f3fc99b, org.springframework.security.web.header.HeaderWriterFilter@29a6a9b1, org.springframework.web.filter.CorsFilter@5a6d25df, org.springframework.security.web.authentication.logout.LogoutFilter@3ab462e5, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@687802c4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79c107ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65b6c262, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63f32b8d, org.springframework.security.web.session.SessionManagementFilter@20f3cbb4, org.springframework.security.web.access.ExceptionTranslationFilter@5cf74de3]
INFO  22-01-17 17:34:09[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:34:09[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:34:09[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:34:09[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.319 seconds (JVM running for 1596.212)
INFO  22-01-17 17:34:09[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:34:16[Thread-31] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:34:16[Thread-31] [HikariDataSource:350] - HikariPool-8 - Shutdown initiated...
INFO  22-01-17 17:34:16[Thread-31] [HikariDataSource:352] - HikariPool-8 - Shutdown completed.
INFO  22-01-17 17:34:17[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:34:17[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:34:23[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:34:25[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1941 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:34:26[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:34:27[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:34:27[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:34:27[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:34:27[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:34:27[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:34:27[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9687 ms
INFO  22-01-17 17:34:27[restartedMain] [HikariDataSource:110] - HikariPool-9 - Starting...
INFO  22-01-17 17:34:27[restartedMain] [HikariDataSource:123] - HikariPool-9 - Start completed.
INFO  22-01-17 17:34:28[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:34:28[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:34:28[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:34:28[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:34:29[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-17 17:34:30[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roomController': Unsatisfied dependency expressed through field 'roomApiLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-17 17:34:30[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:34:30[restartedMain] [HikariDataSource:350] - HikariPool-9 - Shutdown initiated...
INFO  22-01-17 17:34:30[restartedMain] [HikariDataSource:352] - HikariPool-9 - Shutdown completed.
INFO  22-01-17 17:34:30[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-17 17:34:30[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-17 17:34:30[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field roomApiLogicService in com.example.gradlebnbadminapi.controller.RoomController required a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' in your configuration.

INFO  22-01-17 17:34:40[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:34:40[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:34:44[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:34:45[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 965 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:34:46[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:34:46[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:34:46[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:34:46[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:34:46[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:34:46[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:34:46[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6076 ms
INFO  22-01-17 17:34:47[restartedMain] [HikariDataSource:110] - HikariPool-10 - Starting...
INFO  22-01-17 17:34:47[restartedMain] [HikariDataSource:123] - HikariPool-10 - Start completed.
INFO  22-01-17 17:34:47[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:34:47[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:34:47[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:34:47[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:34:48[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-17 17:34:49[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roomController': Unsatisfied dependency expressed through field 'roomApiLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-17 17:34:49[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:34:49[restartedMain] [HikariDataSource:350] - HikariPool-10 - Shutdown initiated...
INFO  22-01-17 17:34:49[restartedMain] [HikariDataSource:352] - HikariPool-10 - Shutdown completed.
INFO  22-01-17 17:34:49[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-17 17:34:49[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-17 17:34:49[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field roomApiLogicService in com.example.gradlebnbadminapi.controller.RoomController required a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' in your configuration.

INFO  22-01-17 17:35:10[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:35:10[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:35:13[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:35:15[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1297 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:35:15[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:35:16[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:35:16[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:35:16[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:35:16[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:35:16[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:35:16[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5780 ms
INFO  22-01-17 17:35:16[restartedMain] [HikariDataSource:110] - HikariPool-11 - Starting...
INFO  22-01-17 17:35:16[restartedMain] [HikariDataSource:123] - HikariPool-11 - Start completed.
INFO  22-01-17 17:35:17[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:35:17[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:35:17[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:35:17[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:35:17[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:35:18[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 6c573cb4-8785-4040-ad9f-f5ec1f37405e

INFO  22-01-17 17:35:19[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42c8f678, org.springframework.security.web.context.SecurityContextPersistenceFilter@155e909, org.springframework.security.web.header.HeaderWriterFilter@1712a3ff, org.springframework.web.filter.CorsFilter@659c54fd, org.springframework.security.web.authentication.logout.LogoutFilter@18deb4e4, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@49588b29, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a3005ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58bf580e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a744bd7, org.springframework.security.web.session.SessionManagementFilter@777329e9, org.springframework.security.web.access.ExceptionTranslationFilter@aea2a8d]
INFO  22-01-17 17:35:20[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:35:20[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:35:20[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:35:20[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 10.17 seconds (JVM running for 1666.978)
INFO  22-01-17 17:35:20[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:37:13[Thread-35] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:37:13[Thread-35] [HikariDataSource:350] - HikariPool-11 - Shutdown initiated...
INFO  22-01-17 17:37:13[Thread-35] [HikariDataSource:352] - HikariPool-11 - Shutdown completed.
INFO  22-01-17 17:37:13[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:37:13[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:37:17[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:37:19[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1375 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:37:19[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:37:20[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:37:20[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:37:20[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:37:20[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:37:20[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:37:20[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6591 ms
INFO  22-01-17 17:37:20[restartedMain] [HikariDataSource:110] - HikariPool-12 - Starting...
INFO  22-01-17 17:37:20[restartedMain] [HikariDataSource:123] - HikariPool-12 - Start completed.
INFO  22-01-17 17:37:21[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:37:21[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:37:22[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:37:22[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:37:22[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:37:24[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: a08baffb-2a71-4122-af65-4e3a3de7c60d

INFO  22-01-17 17:37:25[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1053be2c, org.springframework.security.web.context.SecurityContextPersistenceFilter@72242c8e, org.springframework.security.web.header.HeaderWriterFilter@23fd34d1, org.springframework.web.filter.CorsFilter@32c4f1a, org.springframework.security.web.authentication.logout.LogoutFilter@23245873, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@790d715d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c37ac4c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@562648a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13514754, org.springframework.security.web.session.SessionManagementFilter@410cf76b, org.springframework.security.web.access.ExceptionTranslationFilter@5ca65b75]
INFO  22-01-17 17:37:25[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:37:25[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:37:25[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:37:25[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 12.431 seconds (JVM running for 1792.702)
INFO  22-01-17 17:37:25[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:37:30[Thread-45] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:37:30[Thread-45] [HikariDataSource:350] - HikariPool-12 - Shutdown initiated...
INFO  22-01-17 17:37:30[Thread-45] [HikariDataSource:352] - HikariPool-12 - Shutdown completed.
INFO  22-01-17 17:37:31[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:37:31[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:37:34[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:37:36[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1012 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:37:36[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:37:36[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:37:37[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:37:37[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:37:37[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:37:37[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:37:37[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5559 ms
INFO  22-01-17 17:37:37[restartedMain] [HikariDataSource:110] - HikariPool-13 - Starting...
INFO  22-01-17 17:37:37[restartedMain] [HikariDataSource:123] - HikariPool-13 - Start completed.
INFO  22-01-17 17:37:37[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:37:37[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:37:38[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:37:38[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:37:38[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:37:39[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 1b6c06cf-828b-424c-9765-540f8cbf35f2

INFO  22-01-17 17:37:40[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@411ac6a6, org.springframework.security.web.context.SecurityContextPersistenceFilter@44672243, org.springframework.security.web.header.HeaderWriterFilter@7275c4b4, org.springframework.web.filter.CorsFilter@4c329661, org.springframework.security.web.authentication.logout.LogoutFilter@727b5d9f, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@29256610, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15331753, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49bf2125, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c21dfae, org.springframework.security.web.session.SessionManagementFilter@5943e93b, org.springframework.security.web.access.ExceptionTranslationFilter@71c40834]
INFO  22-01-17 17:37:40[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:37:40[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:37:40[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:37:40[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 9.905 seconds (JVM running for 1807.617)
INFO  22-01-17 17:37:40[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:37:52[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:37:52[http-nio-8080-exec-1] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:59] - email: test@gmail.com
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:97] - Conveniences builder.
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:38:03.304', 'test', 'House', 6, 'test', 1)

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:38:03.304', 'test', 'House', 6, 'test', 1)
 {executed in 2 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Town House', '01/17/2022 17:38:03.304', 'test', 'House', 6, 'test', 1)
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:114] - Conveniences builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:126] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/17/2022 17:38:03.363', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/17/2022 17:38:03.363', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/17/2022 17:38:03.363', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:131] - Location builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:144] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ota City', '01/17/2022 17:38:03.386', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ota City', '01/17/2022 17:38:03.386', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 1 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ota City', '01/17/2022 17:38:03.386', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:149] - Vacancy builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:158] - Vacancy save: Vacancy(id=null, price=200000, startDate=2022-02-01, endDate=2022-02-10, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (5, '01/17/2022 17:38:03.406', '2022-02-10', '200000', '2022-02-01')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (5, '01/17/2022 17:38:03.406', '2022-02-10', '200000', '2022-02-01')
 {executed in 10 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (5, '01/17/2022 17:38:03.406', '2022-02-10', '200000', '2022-02-01')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:163] - Room builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:177] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (5, 1, 'private', '01/17/2022 17:38:03.449', 0, 0, 'entire')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (5, 1, 'private', '01/17/2022 17:38:03.449', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (5, 1, 'private', '01/17/2022 17:38:03.449', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:182] - Private bed builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:196] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=5, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:38:03.449922, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:38:03.481', 0, 5, 'Single')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:38:03.481', 0, 5, 'Single')
 {executed in 1 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:38:03.481', 0, 5, 'Single')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|12            |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:196] - Private bed save: Bed(id=null, type=Double, count=2, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=5, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:38:03.449922, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.501', 0, 5, 'Double')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.501', 0, 5, 'Double')
 {executed in 0 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.501', 0, 5, 'Double')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|13            |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:202] - Public bed builder
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:214] - Public bed save: Bed(id=null, type=Queen-size, count=2, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=5, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:38:03.449922, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.509', 1, 5, 'Queen-size')

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.509', 1, 5, 'Queen-size')
 {executed in 0 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:38:03.509', 1, 5, 'Queen-size')
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|14            |
|--------------|

INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:220] - Amenities builder.
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:238] - Amenities save: Amenities(id=null, wifi=HAS, tv=HAS, heater=HAS, airConditioner=HAS, iron=HAS, shampoo=HAS, hairDryer=NOT, breakfast=HAS, businessSpace=HAS, fireplace=HAS, closet=HAS, guestEntrance=HAS, createdAt=null, updatedAt=null, room=Room(id=5, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1, bathroomType=private, createdAt=2022-01-17T17:38:03.449922, updatedAt=null, accommodation=Accommodation(id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, createdAt=2022-01-17T17:38:03.304107, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:19:20, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:38:03.522', 0, 0, 1, 0, 0, 5, 0, 0, 0)

DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:38:03.522', 0, 0, 1, 0, 0, 5, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-17 17:38:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:38:03.522', 0, 0, 1, 0, 0, 5, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-17 17:38:03[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address       |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |3  |3  |Town House    |2022-01-17 17:24:59.0 |test             |House               |6                   |test  |null       |1       |3  |3                |2022-01-17 17:24:59.0 |1   |1       |1       |1            |1           |1             |null       |3  |3                |Ota City     |2022-01-17 17:24:59.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |4  |4  |Town House    |2022-01-17 17:32:41.0 |test             |House               |6                   |test  |null       |1       |4  |4                |2022-01-17 17:32:41.0 |0   |0       |0       |0            |0           |0             |null       |4  |4                |Ota City     |2022-01-17 17:32:41.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |5  |5  |Town House    |2022-01-17 17:38:03.0 |test             |House               |6                   |test  |null       |1       |5  |5                |2022-01-17 17:38:03.0 |0   |0       |0       |0            |0           |0             |null       |5  |5                |Ota City     |2022-01-17 17:38:03.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 2 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|3                |3  |3  |3                |1              |private       |2022-01-17 17:24:59.0 |0                   |0      |entire |null       |3  |1               |1         |1              |1      |2022-01-17 17:24:59.0 |1         |1              |1          |1      |1    |3       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|3       |6  |6  |3     |2022-01-17 17:24:59.0 |0          |3       |Single     |null       |
|3       |7  |7  |2     |2022-01-17 17:24:59.0 |0          |3       |Double     |null       |
|3       |8  |8  |2     |2022-01-17 17:24:59.0 |1          |3       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|3                |3  |3  |3                |2022-01-17 17:24:59.0 |2022-02-10 |100000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4
 {executed in 3 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|4                |4  |4  |4                |1              |private       |2022-01-17 17:32:41.0 |0                   |0      |entire |null       |4  |0               |0         |0              |0      |2022-01-17 17:32:41.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |9  |9  |3     |2022-01-17 17:32:41.0 |0          |4       |Single     |null       |
|4       |10 |10 |2     |2022-01-17 17:32:41.0 |0          |4       |Double     |null       |
|4       |11 |11 |2     |2022-01-17 17:32:41.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4
 {executed in 2 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|4                |4  |4  |4                |2022-01-17 17:32:41.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5
 {executed in 2 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|5                |5  |5  |5                |1              |private       |2022-01-17 17:38:03.0 |0                   |0      |entire |null       |5  |0               |0         |0              |0      |2022-01-17 17:38:04.0 |0         |0              |1          |0      |0    |5       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|5       |12 |12 |3     |2022-01-17 17:38:03.0 |0          |5       |Single     |null       |
|5       |13 |13 |2     |2022-01-17 17:38:04.0 |0          |5       |Double     |null       |
|5       |14 |14 |2     |2022-01-17 17:38:04.0 |1          |5       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5

DEBUG 22-01-17 17:38:42[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5
 {executed in 1 msec}
INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|5                |5  |5  |5                |2022-01-17 17:38:03.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

INFO  22-01-17 17:38:42[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=2, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=100000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=false, bathroomCount=1, bathroomType=private, bedList=[], publicBedList=[], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)])]
INFO  22-01-17 17:40:37[Thread-49] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:40:37[Thread-49] [HikariDataSource:350] - HikariPool-13 - Shutdown initiated...
INFO  22-01-17 17:40:37[Thread-49] [HikariDataSource:352] - HikariPool-13 - Shutdown completed.
INFO  22-01-17 17:40:37[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:40:37[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:40:41[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:40:42[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1371 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:40:43[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:40:44[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:40:44[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:40:44[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:40:44[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:40:44[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:40:44[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6140 ms
INFO  22-01-17 17:40:44[restartedMain] [HikariDataSource:110] - HikariPool-14 - Starting...
INFO  22-01-17 17:40:44[restartedMain] [HikariDataSource:123] - HikariPool-14 - Start completed.
INFO  22-01-17 17:40:45[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:40:45[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:40:45[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:40:45[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:40:45[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:40:47[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 35e6fb60-1564-43b8-baec-6af1f23883c0

INFO  22-01-17 17:40:48[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ba40968, org.springframework.security.web.context.SecurityContextPersistenceFilter@20f50dec, org.springframework.security.web.header.HeaderWriterFilter@34eead1, org.springframework.web.filter.CorsFilter@53fd9e73, org.springframework.security.web.authentication.logout.LogoutFilter@6a49d3c7, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@2f6fa41f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3179874b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4595ebd7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49e06d06, org.springframework.security.web.session.SessionManagementFilter@5cff72da, org.springframework.security.web.access.ExceptionTranslationFilter@1700d3ba]
INFO  22-01-17 17:40:49[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:40:49[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:40:49[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:40:49[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 11.658 seconds (JVM running for 1995.931)
INFO  22-01-17 17:40:49[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-17 17:41:15[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:41:15[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 17:41:15[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:81] - Email: test@gmail.com
DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:19:20 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address       |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test  |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test  |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |3  |3  |Town House    |2022-01-17 17:24:59.0 |test             |House               |6                   |test  |null       |1       |3  |3                |2022-01-17 17:24:59.0 |1   |1       |1       |1            |1           |1             |null       |3  |3                |Ota City     |2022-01-17 17:24:59.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |4  |4  |Town House    |2022-01-17 17:32:41.0 |test             |House               |6                   |test  |null       |1       |4  |4                |2022-01-17 17:32:41.0 |0   |0       |0       |0            |0           |0             |null       |4  |4                |Ota City     |2022-01-17 17:32:41.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |5  |5  |Town House    |2022-01-17 17:38:03.0 |test             |House               |6                   |test  |null       |1       |5  |5                |2022-01-17 17:38:03.0 |0   |0       |0       |0            |0           |0             |null       |5  |5                |Ota City     |2022-01-17 17:38:03.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2              |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1              |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 0 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3
 {executed in 0 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|3                |3  |3  |3                |1              |private       |2022-01-17 17:24:59.0 |0                   |0      |entire |null       |3  |1               |1         |1              |1      |2022-01-17 17:24:59.0 |1         |1              |1          |1      |1    |3       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3
 {executed in 0 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|3       |6  |6  |3     |2022-01-17 17:24:59.0 |0          |3       |Single     |null       |
|3       |7  |7  |2     |2022-01-17 17:24:59.0 |0          |3       |Double     |null       |
|3       |8  |8  |2     |2022-01-17 17:24:59.0 |1          |3       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|3                |3  |3  |3                |2022-01-17 17:24:59.0 |2022-02-10 |100000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|4                |4  |4  |4                |1              |private       |2022-01-17 17:32:41.0 |0                   |0      |entire |null       |4  |0               |0         |0              |0      |2022-01-17 17:32:41.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |9  |9  |3     |2022-01-17 17:32:41.0 |0          |4       |Single     |null       |
|4       |10 |10 |2     |2022-01-17 17:32:41.0 |0          |4       |Double     |null       |
|4       |11 |11 |2     |2022-01-17 17:32:41.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|4                |4  |4  |4                |2022-01-17 17:32:41.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|5                |5  |5  |5                |1              |private       |2022-01-17 17:38:03.0 |0                   |0      |entire |null       |5  |0               |0         |0              |0      |2022-01-17 17:38:04.0 |0         |0              |1          |0      |0    |5       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|5       |12 |12 |3     |2022-01-17 17:38:03.0 |0          |5       |Single     |null       |
|5       |13 |13 |2     |2022-01-17 17:38:04.0 |0          |5       |Double     |null       |
|5       |14 |14 |2     |2022-01-17 17:38:04.0 |1          |5       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5

DEBUG 22-01-17 17:41:16[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5
 {executed in 1 msec}
INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|5                |5  |5  |5                |2022-01-17 17:38:03.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

INFO  22-01-17 17:41:16[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:91] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=2, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1), BedApiResponse(type=Air Mettress, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1)], publicBedList=[BedApiResponse(type=Double, count=1)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=100000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)])]
INFO  22-01-17 17:48:04[Thread-53] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:48:04[Thread-53] [HikariDataSource:350] - HikariPool-14 - Shutdown initiated...
INFO  22-01-17 17:48:04[Thread-53] [HikariDataSource:352] - HikariPool-14 - Shutdown completed.
INFO  22-01-17 17:48:05[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:48:05[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:48:09[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:48:10[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 977 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:48:11[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:48:11[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:48:11[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:48:11[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:48:11[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:48:11[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:48:11[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6201 ms
INFO  22-01-17 17:48:12[restartedMain] [HikariDataSource:110] - HikariPool-15 - Starting...
INFO  22-01-17 17:48:12[restartedMain] [HikariDataSource:123] - HikariPool-15 - Start completed.
INFO  22-01-17 17:48:12[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:48:12[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:48:12[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:48:12[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:48:13[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-17 17:48:13[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roomController': Unsatisfied dependency expressed through field 'roomApiLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-17 17:48:13[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:48:13[restartedMain] [HikariDataSource:350] - HikariPool-15 - Shutdown initiated...
INFO  22-01-17 17:48:14[restartedMain] [HikariDataSource:352] - HikariPool-15 - Shutdown completed.
INFO  22-01-17 17:48:14[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-17 17:48:14[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-17 17:48:14[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field roomApiLogicService in com.example.gradlebnbadminapi.controller.RoomController required a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' in your configuration.

INFO  22-01-17 17:52:23[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:52:23[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:52:26[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:52:27[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 962 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:52:28[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:52:28[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:52:28[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:52:28[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:52:28[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:52:29[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:52:29[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5643 ms
INFO  22-01-17 17:52:29[restartedMain] [HikariDataSource:110] - HikariPool-16 - Starting...
INFO  22-01-17 17:52:29[restartedMain] [HikariDataSource:123] - HikariPool-16 - Start completed.
INFO  22-01-17 17:52:29[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:52:29[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:52:30[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:52:30[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:52:30[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:52:32[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: ab95de66-51eb-46ce-90b4-25e4bffa8437

INFO  22-01-17 17:52:32[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e41838a, org.springframework.security.web.context.SecurityContextPersistenceFilter@45b4acee, org.springframework.security.web.header.HeaderWriterFilter@25365eff, org.springframework.web.filter.CorsFilter@3c02f26b, org.springframework.security.web.authentication.logout.LogoutFilter@23cf3b92, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@5b76ee85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5597956b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42c1f880, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@557953ff, org.springframework.security.web.session.SessionManagementFilter@7bff4867, org.springframework.security.web.access.ExceptionTranslationFilter@24669aa1]
INFO  22-01-17 17:52:33[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:52:33[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:52:33[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:52:33[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 10.772 seconds (JVM running for 2700.465)
INFO  22-01-17 17:52:33[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 17:53:08[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 17:53:08[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 17:53:08[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 22-01-17 17:53:08[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:53:08[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:53:08[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:19:20.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:53:08[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. update user set last_login_at='01/17/2022 17:53:08.804' where id=1

DEBUG 22-01-17 17:53:08[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. update user set last_login_at='01/17/2022 17:53:08.804' where id=1
 {executed in 1 msec}
DEBUG 22-01-17 17:53:59[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:53:59[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:53:59[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:53:59[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:53:59[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/location
INFO  22-01-17 17:53:59[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:53:59[http-nio-8080-exec-4] [LocationApiLogicServiceImpl:36] - Google Geometry Url: https://maps.googleapis.com/maps/api/geocode/json?latlng=35.5762176,139.7358592&language=en&key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc
INFO  22-01-17 17:54:00[http-nio-8080-exec-4] [LocationApiLogicServiceImpl:40] - Responded Geometry info: {
   "plus_code" : {
      "compound_code" : "HPGP+F8Q Ota City, Tokyo, Japan",
      "global_code" : "8Q7XHPGP+F8Q"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "11",
               "short_name" : "11",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-11 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "location" : {
               "lat" : 35.576195,
               "lng" : 139.7358564
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775439802915,
                  "lng" : 139.7372053802915
               },
               "southwest" : {
                  "lat" : 35.5748460197085,
                  "lng" : 139.7345074197085
               }
            }
         },
         "place_id" : "ChIJo_F5wLNhGGAR3ZJ0VjxRESc",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "street_address" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1",
               "short_name" : "1",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-1 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762398,
                  "lng" : 139.7358912
               },
               "southwest" : {
                  "lat" : 35.5761781,
                  "lng" : 139.735711
               }
            },
            "location" : {
               "lat" : 35.5762071,
               "lng" : 139.7357942
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775579302915,
                  "lng" : 139.7371500802915
               },
               "southwest" : {
                  "lat" : 35.5748599697085,
                  "lng" : 139.7344521197085
               }
            }
         },
         "place_id" : "ChIJfST3v7NhGGARCuuUiP6q1nE",
         "types" : [ "premise" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "HPGP+F8",
               "short_name" : "HPGP+F8",
               "types" : [ "plus_code" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "HPGP+F8 Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57625,
                  "lng" : 139.735875
               },
               "southwest" : {
                  "lat" : 35.576125,
                  "lng" : 139.73575
               }
            },
            "location" : {
               "lat" : 35.5762176,
               "lng" : 139.7358592
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775364802915,
                  "lng" : 139.7371614802915
               },
               "southwest" : {
                  "lat" : 35.5748385197085,
                  "lng" : 139.7344635197085
               }
            }
         },
         "place_id" : "GhIJl7CRf8HJQUARvs6XKIx3YUA",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "plus_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Mihara Street",
               "short_name" : "Mihara St",
               "types" : [ "route" ]
            },
            {
               "long_name" : "5",
               "short_name" : "5",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Mihara St, 1-chōme-5 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762533,
                  "lng" : 139.735672
               },
               "southwest" : {
                  "lat" : 35.576126,
                  "lng" : 139.7356173
               }
            },
            "location" : {
               "lat" : 35.5761897,
               "lng" : 139.7356446
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57753863029149,
                  "lng" : 139.7369936302915
               },
               "southwest" : {
                  "lat" : 35.57484066970849,
                  "lng" : 139.7342956697085
               }
            }
         },
         "place_id" : "ChIJtZqDlbNhGGARXmmGMykr0mk",
         "types" : [ "route" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome-15 Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57627069999999,
                  "lng" : 139.7366059
               },
               "southwest" : {
                  "lat" : 35.5759985,
                  "lng" : 139.7356182
               }
            },
            "location" : {
               "lat" : 35.5761067,
               "lng" : 139.7361035
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57748358029149,
                  "lng" : 139.7374610302915
               },
               "southwest" : {
                  "lat" : 35.57478561970849,
                  "lng" : 139.7347630697085
               }
            }
         },
         "place_id" : "ChIJvWlowbNhGGARgK1ORU6LGRg",
         "types" : [ "political", "sublocality", "sublocality_level_4" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            },
            "location" : {
               "lat" : 35.5758024,
               "lng" : 139.7390173
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            }
         },
         "place_id" : "ChIJu8heqrFhGGARuv9YOBCQzGo",
         "types" : [ "political", "sublocality", "sublocality_level_3" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJxZNj_qhhGGARTW5fPBcmOYU",
         "types" : [ "postal_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJLRKfCK9hGGARvfLtFpOxWWw",
         "types" : [ "political", "sublocality", "sublocality_level_2" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ōmori",
               "short_name" : "Ōmori",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ōmori, Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            },
            "location" : {
               "lat" : 35.5736324,
               "lng" : 139.7338633
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            }
         },
         "place_id" : "ChIJExMzH6pvGGARsS6Ipgy1Jn0",
         "types" : [ "neighborhood", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            },
            "location" : {
               "lat" : 35.561407,
               "lng" : 139.7160626
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            }
         },
         "place_id" : "ChIJQ2ajwVJgGGARSQ1cUKxqwk8",
         "types" : [ "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "colloquial_area", "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            },
            "location" : {
               "lat" : 35.6803997,
               "lng" : 139.7690174
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            }
         },
         "place_id" : "ChIJXSModoWLGGARILWiCfeu2M0",
         "types" : [ "colloquial_area", "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            },
            "location" : {
               "lat" : 35.6761919,
               "lng" : 139.6503106
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            }
         },
         "place_id" : "ChIJ51cu8IcbXWARiRtXIothAS4",
         "types" : [ "administrative_area_level_1", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            },
            "location" : {
               "lat" : 36.204824,
               "lng" : 138.252924
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            }
         },
         "place_id" : "ChIJLxl_1w9OZzQRRFJmfNR1QvU",
         "types" : [ "country", "political" ]
      }
   ],
   "status" : "OK"
}

DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:54:20[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:54:20[http-nio-8080-exec-6] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Masion', '01/17/2022 17:54:42.908', 'test', 'House', 8, 'teeeest', 1)

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Masion', '01/17/2022 17:54:42.908', 'test', 'House', 8, 'teeeest', 1)
 {executed in 1 msec}
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Masion', '01/17/2022 17:54:42.908', 'test', 'House', 8, 'teeeest', 1)
 {executed in 0 msec}
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/17/2022 17:54:42.946', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/17/2022 17:54:42.946', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/17/2022 17:54:42.946', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=1111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ota City', '01/17/2022 17:54:42.969', '1111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ota City', '01/17/2022 17:54:42.969', '1111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 1 msec}
DEBUG 22-01-17 17:54:42[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ota City', '01/17/2022 17:54:42.969', '1111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-17 17:54:42[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=50000, startDate=2022-01-30, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (6, '01/17/2022 17:54:42.989', '2022-02-05', '50000', '2022-01-30')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (6, '01/17/2022 17:54:42.989', '2022-02-05', '50000', '2022-01-30')
 {executed in 1 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (6, '01/17/2022 17:54:42.989', '2022-02-05', '50000', '2022-01-30')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (6, 1.5, 'private', '01/17/2022 17:54:43.034', 0, 0, 'private')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (6, 1.5, 'private', '01/17/2022 17:54:43.034', 0, 0, 'private')
 {executed in 2 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (6, 1.5, 'private', '01/17/2022 17:54:43.034', 0, 0, 'private')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=4, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=6, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T17:54:43.034363, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (4, '01/17/2022 17:54:43.063', 0, 6, 'Single')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (4, '01/17/2022 17:54:43.063', 0, 6, 'Single')
 {executed in 6 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (4, '01/17/2022 17:54:43.063', 0, 6, 'Single')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|15            |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Double, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=6, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T17:54:43.034363, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.086', 0, 6, 'Double')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.086', 0, 6, 'Double')
 {executed in 0 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.086', 0, 6, 'Double')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|16            |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:196] - Public bed builder
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:208] - Public bed save: Bed(id=null, type=Queen-size, count=3, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=6, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T17:54:43.034363, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.094', 1, 6, 'Queen-size')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.094', 1, 6, 'Queen-size')
 {executed in 0 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/17/2022 17:54:43.094', 1, 6, 'Queen-size')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|17            |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:208] - Public bed save: Bed(id=null, type=Hammock, count=2, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=6, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T17:54:43.034363, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:54:43.100', 1, 6, 'Hammock')

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:54:43.100', 1, 6, 'Hammock')
 {executed in 1 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (2, '01/17/2022 17:54:43.100', 1, 6, 'Hammock')
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|18            |
|--------------|

INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:214] - Amenities builder.
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:232] - Amenities save: Amenities(id=null, wifi=HAS, tv=HAS, heater=HAS, airConditioner=HAS, iron=HAS, shampoo=HAS, hairDryer=NOT, breakfast=HAS, businessSpace=HAS, fireplace=HAS, closet=HAS, guestEntrance=HAS, createdAt=null, updatedAt=null, room=Room(id=6, number=0, type=private, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T17:54:43.034363, updatedAt=null, accommodation=Accommodation(id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, createdAt=2022-01-17T17:54:42.908594, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:54:43.109', 0, 0, 1, 0, 0, 6, 0, 0, 0)

DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
151. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:54:43.109', 0, 0, 1, 0, 0, 6, 0, 0, 0)
 {executed in 2 msec}
DEBUG 22-01-17 17:54:43[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
151. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/17/2022 17:54:43.109', 0, 0, 1, 0, 0, 6, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-17 17:54:43[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

DEBUG 22-01-17 17:55:08[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:55:08[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:55:08[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:55:08[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:55:08[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-17 17:55:08[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-17 17:55:08[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:55:08[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:55:08[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:56:27[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:56:27[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 17:56:27[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 17:56:27[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 17:56:27[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 17:56:27[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 17:56:28[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
151. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 17:56:28[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 17:56:28[http-nio-8080-exec-1] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
INFO  22-01-17 17:57:11[Thread-57] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-17 17:57:11[Thread-57] [HikariDataSource:350] - HikariPool-16 - Shutdown initiated...
INFO  22-01-17 17:57:11[Thread-57] [HikariDataSource:352] - HikariPool-16 - Shutdown completed.
INFO  22-01-17 17:57:12[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.11 on ba08d2c6f34e with PID 286 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-17 17:57:12[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-17 17:57:15[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-17 17:57:16[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 875 ms. Found 9 JPA repository interfaces.
WARN  22-01-17 17:57:16[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-17 17:57:17[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-17 17:57:17[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:57:17[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-17 17:57:17[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-17 17:57:17[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-17 17:57:17[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 4804 ms
INFO  22-01-17 17:57:17[restartedMain] [HikariDataSource:110] - HikariPool-17 - Starting...
INFO  22-01-17 17:57:17[restartedMain] [HikariDataSource:123] - HikariPool-17 - Start completed.
INFO  22-01-17 17:57:17[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-17 17:57:17[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-17 17:57:18[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-17 17:57:18[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-17 17:57:18[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-17 17:57:19[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 58207965-38c5-4478-b37e-1bc1143bb2e5

INFO  22-01-17 17:57:20[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1616a4a3, org.springframework.security.web.context.SecurityContextPersistenceFilter@38c36cb6, org.springframework.security.web.header.HeaderWriterFilter@f56950a, org.springframework.web.filter.CorsFilter@62af365f, org.springframework.security.web.authentication.logout.LogoutFilter@11c09661, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@2b3a3d73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c170dc4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67d23d89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@441e02fa, org.springframework.security.web.session.SessionManagementFilter@fcb4129, org.springframework.security.web.access.ExceptionTranslationFilter@6d01262c]
INFO  22-01-17 17:57:20[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-17 17:57:20[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-17 17:57:20[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-17 17:57:20[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 8.798 seconds (JVM running for 2987.494)
INFO  22-01-17 17:57:20[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-17 18:00:20[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:00:20[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 18:00:20[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
ERROR 22-01-17 18:00:20[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:57)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$1f7d6045.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:29)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$34552580.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-17 18:02:38[http-nio-8080-exec-4] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`)<LF> at [Source: (PushbackInputStream); line: 55, column: 21] (through reference chain: com.example.gradlebnbadminapi.model.network.Header["data"]->com.example.gradlebnbadminapi.model.network.request.RoomApiRequest["conveniences"])]
WARN  22-01-17 18:02:57[http-nio-8080-exec-6] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`)<LF> at [Source: (PushbackInputStream); line: 55, column: 25] (through reference chain: com.example.gradlebnbadminapi.model.network.Header["data"]->com.example.gradlebnbadminapi.model.network.request.RoomApiRequest["conveniences"])]
WARN  22-01-17 18:03:40[http-nio-8080-exec-8] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<java.lang.String>` from Object value (token `JsonToken.START_OBJECT`)<LF> at [Source: (PushbackInputStream); line: 55, column: 25] (through reference chain: com.example.gradlebnbadminapi.model.network.Header["data"]->com.example.gradlebnbadminapi.model.network.request.RoomApiRequest["conveniences"])]
DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 18:04:42[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 18:04:42[http-nio-8080-exec-9] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 18:04:59[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:04:59[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/location
INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [LocationApiLogicServiceImpl:36] - Google Geometry Url: https://maps.googleapis.com/maps/api/geocode/json?latlng=35.5762176,139.7358592&language=en&key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc
INFO  22-01-17 18:04:59[http-nio-8080-exec-10] [LocationApiLogicServiceImpl:40] - Responded Geometry info: {
   "plus_code" : {
      "compound_code" : "HPGP+F8Q Ota City, Tokyo, Japan",
      "global_code" : "8Q7XHPGP+F8Q"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "11",
               "short_name" : "11",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-11 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "location" : {
               "lat" : 35.576195,
               "lng" : 139.7358564
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775439802915,
                  "lng" : 139.7372053802915
               },
               "southwest" : {
                  "lat" : 35.5748460197085,
                  "lng" : 139.7345074197085
               }
            }
         },
         "place_id" : "ChIJo_F5wLNhGGAR3ZJ0VjxRESc",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "street_address" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1",
               "short_name" : "1",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1-chōme-15-1 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762398,
                  "lng" : 139.7358912
               },
               "southwest" : {
                  "lat" : 35.5761781,
                  "lng" : 139.735711
               }
            },
            "location" : {
               "lat" : 35.5762071,
               "lng" : 139.7357942
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775579302915,
                  "lng" : 139.7371500802915
               },
               "southwest" : {
                  "lat" : 35.5748599697085,
                  "lng" : 139.7344521197085
               }
            }
         },
         "place_id" : "ChIJfST3v7NhGGARCuuUiP6q1nE",
         "types" : [ "premise" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "HPGP+F8",
               "short_name" : "HPGP+F8",
               "types" : [ "plus_code" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "HPGP+F8 Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57625,
                  "lng" : 139.735875
               },
               "southwest" : {
                  "lat" : 35.576125,
                  "lng" : 139.73575
               }
            },
            "location" : {
               "lat" : 35.5762176,
               "lng" : 139.7358592
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5775364802915,
                  "lng" : 139.7371614802915
               },
               "southwest" : {
                  "lat" : 35.5748385197085,
                  "lng" : 139.7344635197085
               }
            }
         },
         "place_id" : "GhIJl7CRf8HJQUARvs6XKIx3YUA",
         "plus_code" : {
            "compound_code" : "HPGP+F8 Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPGP+F8"
         },
         "types" : [ "plus_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Mihara Street",
               "short_name" : "Mihara St",
               "types" : [ "route" ]
            },
            {
               "long_name" : "5",
               "short_name" : "5",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1-chōme",
               "short_name" : "1-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Mihara St, 1-chōme-5 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5762533,
                  "lng" : 139.735672
               },
               "southwest" : {
                  "lat" : 35.576126,
                  "lng" : 139.7356173
               }
            },
            "location" : {
               "lat" : 35.5761897,
               "lng" : 139.7356446
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57753863029149,
                  "lng" : 139.7369936302915
               },
               "southwest" : {
                  "lat" : 35.57484066970849,
                  "lng" : 139.7342956697085
               }
            }
         },
         "place_id" : "ChIJtZqDlbNhGGARXmmGMykr0mk",
         "types" : [ "route" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "15",
               "short_name" : "15",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome-15 Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.57627069999999,
                  "lng" : 139.7366059
               },
               "southwest" : {
                  "lat" : 35.5759985,
                  "lng" : 139.7356182
               }
            },
            "location" : {
               "lat" : 35.5761067,
               "lng" : 139.7361035
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57748358029149,
                  "lng" : 139.7374610302915
               },
               "southwest" : {
                  "lat" : 35.57478561970849,
                  "lng" : 139.7347630697085
               }
            }
         },
         "place_id" : "ChIJvWlowbNhGGARgK1ORU6LGRg",
         "types" : [ "political", "sublocality", "sublocality_level_4" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "1 Chome",
               "short_name" : "1 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1 Chome Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            },
            "location" : {
               "lat" : 35.5758024,
               "lng" : 139.7390173
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7447002
               },
               "southwest" : {
                  "lat" : 35.5735278,
                  "lng" : 139.734339
               }
            }
         },
         "place_id" : "ChIJu8heqrFhGGARuv9YOBCQzGo",
         "types" : [ "political", "sublocality", "sublocality_level_3" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJxZNj_qhhGGARTW5fPBcmOYU",
         "types" : [ "postal_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJLRKfCK9hGGARvfLtFpOxWWw",
         "types" : [ "political", "sublocality", "sublocality_level_2" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ōmori",
               "short_name" : "Ōmori",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ōmori, Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            },
            "location" : {
               "lat" : 35.5736324,
               "lng" : 139.7338633
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            }
         },
         "place_id" : "ChIJExMzH6pvGGARsS6Ipgy1Jn0",
         "types" : [ "neighborhood", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            },
            "location" : {
               "lat" : 35.561407,
               "lng" : 139.7160626
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            }
         },
         "place_id" : "ChIJQ2ajwVJgGGARSQ1cUKxqwk8",
         "types" : [ "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "colloquial_area", "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            },
            "location" : {
               "lat" : 35.6803997,
               "lng" : 139.7690174
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            }
         },
         "place_id" : "ChIJXSModoWLGGARILWiCfeu2M0",
         "types" : [ "colloquial_area", "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            },
            "location" : {
               "lat" : 35.6761919,
               "lng" : 139.6503106
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            }
         },
         "place_id" : "ChIJ51cu8IcbXWARiRtXIothAS4",
         "types" : [ "administrative_area_level_1", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            },
            "location" : {
               "lat" : 36.204824,
               "lng" : 138.252924
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            }
         },
         "place_id" : "ChIJLxl_1w9OZzQRRFJmfNR1QvU",
         "types" : [ "country", "political" ]
      }
   ],
   "status" : "OK"
}

DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 18:05:05[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 18:05:05[http-nio-8080-exec-1] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:05:21.785', 'test', 'Apartment', 1, 'aaaa', 1)

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:05:21.785', 'test', 'Apartment', 1, 'aaaa', 1)
 {executed in 1 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:05:21.785', 'test', 'Apartment', 1, 'aaaa', 1)
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=NOT, laundryRoom=NOT, parkingLot=NOT, gym=NOT, swimmingPool=NOT, jacuzzi=NOT, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/17/2022 18:05:21.828', 1, 1, 1, 1, 1, 1)

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/17/2022 18:05:21.828', 1, 1, 1, 1, 1, 1)
 {executed in 2 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/17/2022 18:05:21.828', 1, 1, 1, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ota City', '01/17/2022 18:05:21.859', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ota City', '01/17/2022 18:05:21.859', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 1 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ota City', '01/17/2022 18:05:21.859', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=1000, startDate=2022-01-25, endDate=2022-02-04, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/17/2022 18:05:21.889', '2022-02-04', '1000', '2022-01-25')

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/17/2022 18:05:21.889', '2022-02-04', '1000', '2022-01-25')
 {executed in 1 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/17/2022 18:05:21.889', '2022-02-04', '1000', '2022-01-25')
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/17/2022 18:05:21.926', 0, 0, 'entire')

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/17/2022 18:05:21.926', 0, 0, 'entire')
 {executed in 2 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/17/2022 18:05:21.926', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=1, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=7, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T18:05:21.926274, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:05:21.961', 0, 7, 'Single')

DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:05:21.961', 0, 7, 'Single')
 {executed in 1 msec}
DEBUG 22-01-17 18:05:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:05:21.961', 0, 7, 'Single')
 {executed in 0 msec}
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|19            |
|--------------|

INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:196] - Public bed builder
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:214] - Amenities builder.
INFO  22-01-17 18:05:21[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:232] - Amenities save: Amenities(id=null, wifi=NOT, tv=NOT, heater=NOT, airConditioner=NOT, iron=NOT, shampoo=NOT, hairDryer=NOT, breakfast=NOT, businessSpace=NOT, fireplace=NOT, closet=NOT, guestEntrance=NOT, createdAt=null, updatedAt=null, room=Room(id=7, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T18:05:21.926274, updatedAt=null, accommodation=Accommodation(id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:05:21.785023, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 18:05:22[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:05:21.997', 1, 1, 1, 1, 1, 7, 1, 1, 1)

DEBUG 22-01-17 18:05:22[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:05:21.997', 1, 1, 1, 1, 1, 7, 1, 1, 1)
 {executed in 0 msec}
DEBUG 22-01-17 18:05:22[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:05:21.997', 1, 1, 1, 1, 1, 7, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 18:05:22[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-17 18:07:20[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 1 msec}
INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|1       |1  |1  |null       |2022-01-10 12:46:00.0 |0       |bnb_test1_1641818759328.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg |1       |
|1       |2  |2  |null       |2022-01-10 12:46:03.0 |0       |bnb_test3_1641818763060.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg |1       |
|1       |3  |3  |null       |2022-01-10 12:48:24.0 |0       |bnb_test1_1641818903793.jpg |75715 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg |1       |
|1       |4  |4  |null       |2022-01-10 12:48:29.0 |0       |bnb_test3_1641818908771.jpg |51046 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg |1       |
|1       |5  |5  |null       |2022-01-10 12:50:52.0 |0       |bnb_test4_1641819051803.jpg |93116 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg |1       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-17 18:07:20[http-nio-8080-exec-5] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=1, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818759328.jpg), PhotoApiResponse(id=2, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818763060.jpg), PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test1_1641818903793.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test3_1641818908771.jpg), PhotoApiResponse(id=5, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1641819051803.jpg)]
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: POST
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:07:24.163', 'test', 'Apartment', 1, 'aaaa', 1)

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:07:24.163', 'test', 'Apartment', 1, 'aaaa', 1)
 {executed in 1 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/17/2022 18:07:24.163', 'test', 'Apartment', 1, 'aaaa', 1)
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=NOT, laundryRoom=NOT, parkingLot=NOT, gym=NOT, swimmingPool=NOT, jacuzzi=NOT, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/17/2022 18:07:24.172', 1, 1, 1, 1, 1, 1)

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/17/2022 18:07:24.172', 1, 1, 1, 1, 1, 1)
 {executed in 0 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/17/2022 18:07:24.172', 1, 1, 1, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ota City', '01/17/2022 18:07:24.178', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ota City', '01/17/2022 18:07:24.178', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 1 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ota City', '01/17/2022 18:07:24.178', '111', 35, 139, '143-0012', 'Tokyo', 'Ōmorihigashi 1-chōme')
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=1000, startDate=2022-01-25, endDate=2022-02-04, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/17/2022 18:07:24.186', '2022-02-04', '1000', '2022-01-25')

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/17/2022 18:07:24.186', '2022-02-04', '1000', '2022-01-25')
 {executed in 1 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/17/2022 18:07:24.186', '2022-02-04', '1000', '2022-01-25')
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null)))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/17/2022 18:07:24.195', 0, 0, 'entire')

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/17/2022 18:07:24.195', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/17/2022 18:07:24.195', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=1, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=8, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T18:07:24.195051, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:07:24.202', 0, 8, 'Single')

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:07:24.202', 0, 8, 'Single')
 {executed in 5 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (1, '01/17/2022 18:07:24.202', 0, 8, 'Single')
 {executed in 1 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|20            |
|--------------|

INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:196] - Public bed builder
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:214] - Amenities builder.
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:232] - Amenities save: Amenities(id=null, wifi=NOT, tv=NOT, heater=NOT, airConditioner=NOT, iron=NOT, shampoo=NOT, hairDryer=NOT, breakfast=NOT, businessSpace=NOT, fireplace=NOT, closet=NOT, guestEntrance=NOT, createdAt=null, updatedAt=null, room=Room(id=8, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-17T18:07:24.195051, updatedAt=null, accommodation=Accommodation(id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-17T18:07:24.163407, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG, firstname=example, lastname=test, birthday=2004/October/21, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-17T17:53:09, createdAt=2022-01-10T12:44:38, updatedAt=null))))
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:07:24.216', 1, 1, 1, 1, 1, 8, 1, 1, 1)

DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
161. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:07:24.216', 1, 1, 1, 1, 1, 8, 1, 1, 1)
 {executed in 3 msec}
DEBUG 22-01-17 18:07:24[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
161. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (1, 1, 1, 1, '01/17/2022 18:07:24.216', 1, 1, 1, 1, 1, 8, 1, 1, 1)
 {executed in 0 msec}
INFO  22-01-17 18:07:24[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10 12:44:38.0 |test@gmail.com |example   |2022-01-17 17:53:09.0 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |null       |
|---|-------|----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday        |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2004/October/21 |2022-01-10T21:44:38 |test@gmail.com |example   |2022-01-18T02:53:09 |test     |$2a$10$zcvi4PDLm2uAAAH2EmxpjeAhwPOWehUgpvVTJoyppQmQwFyCYi6IG |0      |[null]     |
|---|-------|----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=1
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|--------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|user_id |id |id |building_type |created_at            |description      |large_building_type |maximum_guest_count |title   |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address       |updated_at |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|--------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|
|1       |1  |1  |Annex         |2022-01-10 13:10:51.0 |test1
tet2
test3 |Apartment           |1                   |test    |null       |1       |1  |1                |2022-01-10 13:10:51.0 |1   |1       |1       |1            |1           |1             |null       |1  |1                |Ōmorihigashi |2022-01-10 13:10:51.0 |111            |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |2  |2  |Flat          |2022-01-10 15:59:39.0 |test1
test2      |Apartment           |1                   |test    |null       |1       |2  |2                |2022-01-10 15:59:39.0 |1   |1       |1       |1            |1           |1             |null       |2  |2                |Ōmorihigashi |2022-01-10 15:59:39.0 |1111           |35       |139       |Japan    |Ota City |3-chōme 27           |null       |
|1       |3  |3  |Town House    |2022-01-17 17:24:59.0 |test             |House               |6                   |test    |null       |1       |3  |3                |2022-01-17 17:24:59.0 |1   |1       |1       |1            |1           |1             |null       |3  |3                |Ota City     |2022-01-17 17:24:59.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |4  |4  |Town House    |2022-01-17 17:32:41.0 |test             |House               |6                   |test    |null       |1       |4  |4                |2022-01-17 17:32:41.0 |0   |0       |0       |0            |0           |0             |null       |4  |4                |Ota City     |2022-01-17 17:32:41.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |5  |5  |Town House    |2022-01-17 17:38:03.0 |test             |House               |6                   |test    |null       |1       |5  |5                |2022-01-17 17:38:03.0 |0   |0       |0       |0            |0           |0             |null       |5  |5                |Ota City     |2022-01-17 17:38:03.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |6  |6  |Masion        |2022-01-17 17:54:43.0 |test             |House               |8                   |teeeest |null       |1       |6  |6                |2022-01-17 17:54:43.0 |0   |0       |0       |0            |0           |0             |null       |6  |6                |Ota City     |2022-01-17 17:54:43.0 |1111           |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |7  |7  |Annex         |2022-01-17 18:05:22.0 |test             |Apartment           |1                   |aaaa    |null       |1       |7  |7                |2022-01-17 18:05:22.0 |1   |1       |1       |1            |1           |1             |null       |7  |7                |Ota City     |2022-01-17 18:05:22.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|1       |8  |8  |Annex         |2022-01-17 18:07:24.0 |test             |Apartment           |1                   |aaaa    |null       |1       |8  |8                |2022-01-17 18:07:24.0 |1   |1       |1       |1            |1           |1             |null       |8  |8                |Ota City     |2022-01-17 18:07:24.0 |111            |35       |139       |143-0012 |Tokyo    |Ōmorihigashi 1-chōme |null       |
|--------|---|---|--------------|----------------------|-----------------|--------------------|--------------------|--------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|1                |1  |1  |1                |2.0            |private       |2022-01-10 13:10:51.0 |0                   |0      |entire |null       |1  |1               |1         |1              |1      |2022-01-10 13:10:52.0 |1         |1              |1          |1      |1    |1       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=1
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type         |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|
|1       |1  |1  |1     |2022-01-10 13:10:51.0 |0          |1       |Single       |null       |
|1       |2  |2  |1     |2022-01-10 13:10:51.0 |0          |1       |Air Mettress |null       |
|1       |3  |3  |1     |2022-01-10 13:10:52.0 |1          |1       |Queen-size   |null       |
|--------|---|---|------|----------------------|-----------|--------|-------------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=1
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price     |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|
|1                |1  |1  |1                |2022-01-10 13:10:51.0 |2022-02-05 |123456798 |2022-01-10 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|----------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|2                |2  |2  |2                |1.0            |private       |2022-01-10 15:59:39.0 |0                   |0      |entire |null       |2  |1               |1         |1              |1      |2022-01-10 15:59:39.0 |1         |1              |1          |1      |1    |2       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=2
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|2       |4  |4  |1     |2022-01-10 15:59:39.0 |0          |2       |Single |null       |
|2       |5  |5  |1     |2022-01-10 15:59:39.0 |1          |2       |Double |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=2
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price      |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|
|2                |2  |2  |2                |2022-01-10 15:59:39.0 |2022-02-05 |1234567890 |2022-01-11 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-----------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|3                |3  |3  |3                |1.0            |private       |2022-01-17 17:24:59.0 |0                   |0      |entire |null       |3  |1               |1         |1              |1      |2022-01-17 17:24:59.0 |1         |1              |1          |1      |1    |3       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=3
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|3       |6  |6  |3     |2022-01-17 17:24:59.0 |0          |3       |Single     |null       |
|3       |7  |7  |2     |2022-01-17 17:24:59.0 |0          |3       |Double     |null       |
|3       |8  |8  |2     |2022-01-17 17:24:59.0 |1          |3       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=3
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|3                |3  |3  |3                |2022-01-17 17:24:59.0 |2022-02-10 |100000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|4                |4  |4  |4                |1.0            |private       |2022-01-17 17:32:41.0 |0                   |0      |entire |null       |4  |0               |0         |0              |0      |2022-01-17 17:32:41.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |9  |9  |3     |2022-01-17 17:32:41.0 |0          |4       |Single     |null       |
|4       |10 |10 |2     |2022-01-17 17:32:41.0 |0          |4       |Double     |null       |
|4       |11 |11 |2     |2022-01-17 17:32:41.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=4
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|4                |4  |4  |4                |2022-01-17 17:32:41.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=5
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|5                |5  |5  |5                |1.0            |private       |2022-01-17 17:38:03.0 |0                   |0      |entire |null       |5  |0               |0         |0              |0      |2022-01-17 17:38:04.0 |0         |0              |1          |0      |0    |5       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=5
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|5       |12 |12 |3     |2022-01-17 17:38:03.0 |0          |5       |Single     |null       |
|5       |13 |13 |2     |2022-01-17 17:38:04.0 |0          |5       |Double     |null       |
|5       |14 |14 |2     |2022-01-17 17:38:04.0 |1          |5       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=5
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price  |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|
|5                |5  |5  |5                |2022-01-17 17:38:03.0 |2022-02-10 |200000 |2022-02-01 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|-------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=6

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=6
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|--------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type    |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|--------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|6                |6  |6  |6                |2.0            |private       |2022-01-17 17:54:43.0 |0                   |0      |private |null       |6  |0               |0         |0              |0      |2022-01-17 17:54:43.0 |0         |0              |1          |0      |0    |6       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|--------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=6

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=6
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|6       |15 |15 |4     |2022-01-17 17:54:43.0 |0          |6       |Single     |null       |
|6       |16 |16 |3     |2022-01-17 17:54:43.0 |0          |6       |Double     |null       |
|6       |17 |17 |3     |2022-01-17 17:54:43.0 |1          |6       |Queen-size |null       |
|6       |18 |18 |2     |2022-01-17 17:54:43.0 |1          |6       |Hammock    |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=6

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=6
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|6                |6  |6  |6                |2022-01-17 17:54:43.0 |2022-02-05 |50000 |2022-01-30 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=7

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=7
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|7                |7  |7  |7                |2.0            |private       |2022-01-17 18:05:22.0 |0                   |0      |entire |null       |7  |1               |1         |1              |1      |2022-01-17 18:05:22.0 |1         |1              |1          |1      |1    |7       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=7

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=7
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|7       |19 |19 |1     |2022-01-17 18:05:22.0 |0          |7       |Single |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=7

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=7
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|7                |7  |7  |7                |2022-01-17 18:05:22.0 |2022-02-04 |1000  |2022-01-25 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=8

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=8
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|8                |8  |8  |8                |1.5            |private       |2022-01-17 18:07:24.0 |0                   |0      |entire |null       |8  |1               |1         |1              |1      |2022-01-17 18:07:24.0 |1         |1              |1          |1      |1    |8       |1       |1  |null       |1    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=8

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=8
 {executed in 1 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type   |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|
|8       |20 |20 |1     |2022-01-17 18:07:24.0 |0          |8       |Single |null       |
|--------|---|---|------|----------------------|-----------|--------|-------|-----------|

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=8

DEBUG 22-01-17 18:07:45[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
161. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=8
 {executed in 0 msec}
INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|8                |8  |8  |8                |2022-01-17 18:07:24.0 |2022-02-04 |1000  |2022-01-25 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

INFO  22-01-17 18:07:45[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=1, title=test, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test1
tet2
test3, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=2.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1), BedApiResponse(type=Air Mettress, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=123456798, startDate=2022-01-10, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=2, title=test, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1)], publicBedList=[BedApiResponse(type=Double, count=1)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=1111, postcode=Japan, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1234567890, startDate=2022-01-11, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=3, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=100000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=4, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=5, title=test, largeBuildingType=House, buildingType=Town House, maximumGuestCount=6, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=2)], publicBedList=[BedApiResponse(type=Queen-size, count=2)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=200000, startDate=2022-02-01, endDate=2022-02-10)]), AccommodationApiResponse(email=null, id=6, title=teeeest, largeBuildingType=House, buildingType=Masion, maximumGuestCount=8, description=test, roomList=[RoomApiResponse(roomType=private, isSetUpForGuest=true, bathroomCount=2.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=4), BedApiResponse(type=Double, count=3)], publicBedList=[BedApiResponse(type=Queen-size, count=3), BedApiResponse(type=Hammock, count=2)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=1111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=50000, startDate=2022-01-30, endDate=2022-02-05)]), AccommodationApiResponse(email=null, id=7, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=2.0, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1)], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1000, startDate=2022-01-25, endDate=2022-02-04)]), AccommodationApiResponse(email=null, id=8, title=aaaa, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=1)], publicBedList=[], amenities=AmenitiesApiResponse(wifi=false, tv=false, heater=false, airConditioner=false, iron=false, shampoo=false, hairDryer=false, breakfast=false, businessSpace=false, fireplace=false, closet=false, guestEntrance=false))], latitude=35, longitude=139, state=Tokyo, city=Ota City, streetAddress=Ōmorihigashi 1-chōme, detailAddress=111, postcode=143-0012, conveniences=ConveniencesApiResponse(kitchen=false, laundryRoom=false, parkingLot=false, gym=false, swimmingPool=false, jacuzzi=false), vacancyList=[VacancyApiResponse(price=1000, startDate=2022-01-25, endDate=2022-02-04)])]
