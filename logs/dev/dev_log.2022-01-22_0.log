INFO  22-01-22 03:39:57[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 03:39:57[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 03:39:57[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 24 ms
ERROR 22-01-22 03:39:58[http-nio-8080-exec-2] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T03:39:58Z, a difference of 294410250 milliseconds.  Allowed clock skew: 0 milliseconds.
ERROR 22-01-22 03:39:58[http-nio-8080-exec-3] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T03:39:58Z, a difference of 294410250 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 03:39:59[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 03:39:59[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
302. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

ERROR 22-01-22 03:39:59[http-nio-8080-exec-3] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
302. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:39:59[http-nio-8080-exec-2] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:39:59[http-nio-8080-exec-2] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {FAILED after 91 msec}
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:39:59[http-nio-8080-exec-3] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
302. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {FAILED after 91 msec}
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 03:39:59[http-nio-8080-exec-3] [SqlExceptionHelper:137] - SQL Error: 1146, SQLState: 42S02
WARN  22-01-22 03:39:59[http-nio-8080-exec-2] [SqlExceptionHelper:137] - SQL Error: 1146, SQLState: 42S02
ERROR 22-01-22 03:39:59[http-nio-8080-exec-3] [SqlExceptionHelper:142] - Table 'gradlebnb.user' doesn't exist
ERROR 22-01-22 03:39:59[http-nio-8080-exec-2] [SqlExceptionHelper:142] - Table 'gradlebnb.user' doesn't exist
ERROR 22-01-22 03:39:59[http-nio-8080-exec-3] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:39:59[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:40:04[http-nio-8080-exec-4] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T03:40:04Z, a difference of 294416090 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 03:40:04[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

ERROR 22-01-22 03:40:04[http-nio-8080-exec-4] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:40:04[http-nio-8080-exec-4] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 03:40:04[http-nio-8080-exec-4] [SqlExceptionHelper:137] - SQL Error: 1146, SQLState: 42S02
ERROR 22-01-22 03:40:04[http-nio-8080-exec-4] [SqlExceptionHelper:142] - Table 'gradlebnb.user' doesn't exist
ERROR 22-01-22 03:40:04[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 03:40:49[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

ERROR 22-01-22 03:40:49[http-nio-8080-exec-6] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 03:40:49[http-nio-8080-exec-6] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
301. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 03:40:49[http-nio-8080-exec-6] [SqlExceptionHelper:137] - SQL Error: 1146, SQLState: 42S02
ERROR 22-01-22 03:40:49[http-nio-8080-exec-6] [SqlExceptionHelper:142] - Table 'gradlebnb.user' doesn't exist
ERROR 22-01-22 03:40:49[http-nio-8080-exec-6] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Table 'gradlebnb.user' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy164.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:39)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
INFO  22-01-22 03:41:52[Thread-7] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 03:41:52[Thread-7] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  22-01-22 03:41:52[Thread-7] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  22-01-22 03:41:53[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 319 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 03:41:53[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 03:41:59[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 03:42:01[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2176 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 03:42:03[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 03:42:03[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 03:42:03[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 03:42:03[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 03:42:03[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 03:42:03[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 03:42:03[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 10598 ms
INFO  22-01-22 03:42:04[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  22-01-22 03:42:04[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  22-01-22 03:42:05[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 03:42:05[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 03:42:05[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 03:42:05[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 03:42:06[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 03:42:07[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 8df7af21-dada-427e-bd60-ff9ac3abb107

INFO  22-01-22 03:42:08[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11c7c938, org.springframework.security.web.context.SecurityContextPersistenceFilter@42e174bf, org.springframework.security.web.header.HeaderWriterFilter@6712cce6, org.springframework.web.filter.CorsFilter@4b9bdb21, org.springframework.security.web.authentication.logout.LogoutFilter@43a6ebfe, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@59e12974, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@702199bb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a50ea5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@310b006c, org.springframework.security.web.session.SessionManagementFilter@4ac829b0, org.springframework.security.web.access.ExceptionTranslationFilter@7508ff5f]
INFO  22-01-22 03:42:09[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 03:42:09[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 03:42:09[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 03:42:09[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 17.168 seconds (JVM running for 53625.614)
INFO  22-01-22 03:42:09[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 09:57:13[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-01-22 09:57:13[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 09:57:13[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 09:57:13[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  22-01-22 09:57:13[restartedMain] [DevToolsPropertyDefaultsPostProcessor:255] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  22-01-22 09:57:22[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 09:57:24[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2089 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 09:57:25[restartedMain] [InstanceMetadataServiceResourceFetcher:105] - Fail to retrieve token 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-22 09:57:25[restartedMain] [EC2MetadataUtils:409] - Unable to retrieve the requested metadata (/latest/meta-data/instance-id). Failed to connect to service endpoint: 
com.amazonaws.SdkClientException: Failed to connect to service endpoint: 
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:100)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.getToken(InstanceMetadataServiceResourceFetcher.java:91)
	at com.amazonaws.internal.InstanceMetadataServiceResourceFetcher.readResource(InstanceMetadataServiceResourceFetcher.java:69)
	at com.amazonaws.internal.EC2ResourceFetcher.readResource(EC2ResourceFetcher.java:66)
	at com.amazonaws.util.EC2MetadataUtils.getItems(EC2MetadataUtils.java:402)
	at com.amazonaws.util.EC2MetadataUtils.getData(EC2MetadataUtils.java:371)
	at org.springframework.cloud.aws.context.support.env.AwsCloudEnvironmentCheckUtils.isRunningOnCloudEnvironment(AwsCloudEnvironmentCheckUtils.java:38)
	at org.springframework.cloud.aws.context.annotation.OnAwsCloudEnvironmentCondition.matches(OnAwsCloudEnvironmentCondition.java:38)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:489)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:129)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:343)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.example.gradlebnbadminapi.GradleBnbAdminApiApplication.main(GradleBnbAdminApiApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.base/java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:177)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:474)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:569)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:341)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:362)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1232)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
	at com.amazonaws.internal.ConnectionUtils.connectToEndpoint(ConnectionUtils.java:52)
	at com.amazonaws.internal.EC2ResourceFetcher.doReadResource(EC2ResourceFetcher.java:80)
	... 29 common frames omitted
WARN  22-01-22 09:57:26[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 09:57:29[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 09:57:29[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 09:57:29[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 09:57:29[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 09:57:30[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 09:57:30[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 16632 ms
INFO  22-01-22 09:57:30[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-01-22 09:57:31[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-01-22 09:57:32[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 09:57:32[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 5.4.32.Final
INFO  22-01-22 09:57:33[restartedMain] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  22-01-22 09:57:34[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 09:57:39[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 09:57:39[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 09:57:40[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 09:57:45[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 05000e4e-253f-4266-91f1-997fba49e329

INFO  22-01-22 09:57:46[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69df21b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e6eb0e5, org.springframework.security.web.header.HeaderWriterFilter@1d3c0033, org.springframework.web.filter.CorsFilter@1d8410b8, org.springframework.security.web.authentication.logout.LogoutFilter@b9ac176, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@51c4d342, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@331211d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d4e17a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cf05c39, org.springframework.security.web.session.SessionManagementFilter@367f5945, org.springframework.security.web.access.ExceptionTranslationFilter@5cad7a99]
INFO  22-01-22 09:57:50[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 09:57:51[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 09:57:51[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 09:57:51[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 41.658 seconds (JVM running for 42.928)
INFO  22-01-22 09:58:30[Thread-5] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 09:58:30[Thread-5] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-01-22 09:58:30[Thread-5] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-01-22 09:58:31[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 09:58:31[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 09:58:35[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 09:58:37[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1560 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 09:58:38[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 09:58:39[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 09:58:39[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 09:58:39[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 09:58:39[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 09:58:39[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 09:58:39[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8231 ms
INFO  22-01-22 09:58:39[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  22-01-22 09:58:39[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  22-01-22 09:58:40[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 09:58:40[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 09:58:41[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 09:58:41[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 09:58:41[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 09:58:42[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 6137e97c-2b08-4f64-8900-643b779bf89a

INFO  22-01-22 09:58:43[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f067dc2, org.springframework.security.web.context.SecurityContextPersistenceFilter@568cdd72, org.springframework.security.web.header.HeaderWriterFilter@4d273c96, org.springframework.web.filter.CorsFilter@51960720, org.springframework.security.web.authentication.logout.LogoutFilter@7b0264da, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@147b15f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bc57ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@748b08e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2197595, org.springframework.security.web.session.SessionManagementFilter@25e3405c, org.springframework.security.web.access.ExceptionTranslationFilter@6f57362a]
INFO  22-01-22 09:58:44[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 09:58:44[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 09:58:44[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 09:58:44[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 13.706 seconds (JVM running for 95.33)
INFO  22-01-22 09:58:44[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:00:38[Thread-7] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:00:38[Thread-7] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  22-01-22 10:00:38[Thread-7] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  22-01-22 10:00:39[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:00:39[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:00:45[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:00:47[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1898 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:00:48[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:00:48[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:00:48[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:00:48[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:00:48[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:00:48[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:00:48[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9213 ms
INFO  22-01-22 10:00:49[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  22-01-22 10:00:49[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  22-01-22 10:00:49[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:00:49[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:00:50[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:00:50[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:00:50[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:00:52[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 1a65110b-a75c-4dbb-a11a-fdfc25ababa1

INFO  22-01-22 10:00:53[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1850f495, org.springframework.security.web.context.SecurityContextPersistenceFilter@550895d7, org.springframework.security.web.header.HeaderWriterFilter@67b5cd43, org.springframework.web.filter.CorsFilter@7b1c48ac, org.springframework.security.web.authentication.logout.LogoutFilter@51928cff, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@5be976f3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@608086a5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29968023, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e445495, org.springframework.security.web.session.SessionManagementFilter@2b585040, org.springframework.security.web.access.ExceptionTranslationFilter@455e1c77]
INFO  22-01-22 10:00:53[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:00:53[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:00:53[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:00:53[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 14.861 seconds (JVM running for 225.049)
INFO  22-01-22 10:00:53[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:04:21[Thread-11] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:04:21[Thread-11] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  22-01-22 10:04:21[Thread-11] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  22-01-22 10:04:22[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:04:22[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:04:26[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:04:28[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1616 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:04:28[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:04:29[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:04:29[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:04:29[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:04:29[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:04:29[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:04:29[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 7261 ms
INFO  22-01-22 10:04:29[restartedMain] [HikariDataSource:110] - HikariPool-4 - Starting...
INFO  22-01-22 10:04:29[restartedMain] [HikariDataSource:123] - HikariPool-4 - Start completed.
INFO  22-01-22 10:04:30[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:04:30[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:04:31[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:04:31[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:04:31[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:04:32[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: e9dd40c5-9450-4f9a-b8f6-6857eb1cd0b8

INFO  22-01-22 10:04:33[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@474be4b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@3dcfad9a, org.springframework.security.web.header.HeaderWriterFilter@615c7a6, org.springframework.web.filter.CorsFilter@6c534f0b, org.springframework.security.web.authentication.logout.LogoutFilter@5160122b, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@15ca5ca0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48c3721b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60c3a452, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71241fa0, org.springframework.security.web.session.SessionManagementFilter@3ce5fe1, org.springframework.security.web.access.ExceptionTranslationFilter@5e356999]
INFO  22-01-22 10:04:34[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:04:34[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:04:34[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:04:34[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 12.413 seconds (JVM running for 445.234)
INFO  22-01-22 10:04:34[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:08:43[Thread-15] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:08:43[Thread-15] [HikariDataSource:350] - HikariPool-4 - Shutdown initiated...
INFO  22-01-22 10:08:43[Thread-15] [HikariDataSource:352] - HikariPool-4 - Shutdown completed.
INFO  22-01-22 10:08:43[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:08:43[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:08:47[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:08:49[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1356 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:08:49[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:08:50[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:08:50[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:08:50[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:08:50[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:08:50[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:08:50[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6763 ms
INFO  22-01-22 10:08:50[restartedMain] [HikariDataSource:110] - HikariPool-5 - Starting...
INFO  22-01-22 10:08:50[restartedMain] [HikariDataSource:123] - HikariPool-5 - Start completed.
INFO  22-01-22 10:08:51[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:08:51[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:08:52[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:08:52[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:08:52[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:08:53[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 64e535f0-058e-4660-bf56-bacca7617f7e

INFO  22-01-22 10:08:54[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e697acf, org.springframework.security.web.context.SecurityContextPersistenceFilter@6822a47d, org.springframework.security.web.header.HeaderWriterFilter@c29d354, org.springframework.web.filter.CorsFilter@6fc620df, org.springframework.security.web.authentication.logout.LogoutFilter@2cc67357, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@7603a201, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1664540a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@549596e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38a85ce8, org.springframework.security.web.session.SessionManagementFilter@593b9230, org.springframework.security.web.access.ExceptionTranslationFilter@559575b6]
INFO  22-01-22 10:08:55[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:08:55[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:08:55[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:08:55[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 11.99 seconds (JVM running for 706.504)
INFO  22-01-22 10:08:55[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:17:01[Thread-19] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:17:01[Thread-19] [HikariDataSource:350] - HikariPool-5 - Shutdown initiated...
INFO  22-01-22 10:17:01[Thread-19] [HikariDataSource:352] - HikariPool-5 - Shutdown completed.
INFO  22-01-22 10:17:02[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:17:02[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:17:06[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:17:08[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1604 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:17:09[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:17:09[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:17:09[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:17:09[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:17:09[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:17:09[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:17:09[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 7413 ms
INFO  22-01-22 10:17:10[restartedMain] [HikariDataSource:110] - HikariPool-6 - Starting...
INFO  22-01-22 10:17:10[restartedMain] [HikariDataSource:123] - HikariPool-6 - Start completed.
INFO  22-01-22 10:17:10[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:17:10[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:17:11[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:17:11[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:17:11[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:17:12[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: c6e1c3ea-9cd8-4c56-adeb-7e6c779b6f16

INFO  22-01-22 10:17:13[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43db9348, org.springframework.security.web.context.SecurityContextPersistenceFilter@46d1c5ad, org.springframework.security.web.header.HeaderWriterFilter@42740899, org.springframework.web.filter.CorsFilter@4e85865f, org.springframework.security.web.authentication.logout.LogoutFilter@481552b3, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@54974fa8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a07bbf5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68d55aec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f3e4400, org.springframework.security.web.session.SessionManagementFilter@2c988089, org.springframework.security.web.access.ExceptionTranslationFilter@24fd1cee]
INFO  22-01-22 10:17:14[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:17:14[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:17:14[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:17:14[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 12.442 seconds (JVM running for 1205.425)
INFO  22-01-22 10:17:14[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:18:15[Thread-23] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:18:15[Thread-23] [HikariDataSource:350] - HikariPool-6 - Shutdown initiated...
INFO  22-01-22 10:18:15[Thread-23] [HikariDataSource:352] - HikariPool-6 - Shutdown completed.
INFO  22-01-22 10:18:15[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:18:15[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:18:20[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:18:21[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1678 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:18:22[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:18:23[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:18:23[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:18:23[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:18:23[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:18:23[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:18:23[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 7643 ms
INFO  22-01-22 10:18:23[restartedMain] [HikariDataSource:110] - HikariPool-7 - Starting...
INFO  22-01-22 10:18:23[restartedMain] [HikariDataSource:123] - HikariPool-7 - Start completed.
INFO  22-01-22 10:18:24[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:18:24[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:18:24[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:18:24[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:18:25[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:18:26[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: c58c0186-2da5-4df5-bf90-27d71f037944

INFO  22-01-22 10:18:27[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@577fc035, org.springframework.security.web.context.SecurityContextPersistenceFilter@194a6596, org.springframework.security.web.header.HeaderWriterFilter@336f68c0, org.springframework.web.filter.CorsFilter@73024cbd, org.springframework.security.web.authentication.logout.LogoutFilter@35c69b4, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@425f696e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b414a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4855451d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f8a70bd, org.springframework.security.web.session.SessionManagementFilter@593b13e5, org.springframework.security.web.access.ExceptionTranslationFilter@438b4d99]
INFO  22-01-22 10:18:28[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:18:28[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:18:28[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:18:28[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 12.955 seconds (JVM running for 1279.279)
INFO  22-01-22 10:18:28[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 10:21:06[Thread-27] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 10:21:06[Thread-27] [HikariDataSource:350] - HikariPool-7 - Shutdown initiated...
INFO  22-01-22 10:21:06[Thread-27] [HikariDataSource:352] - HikariPool-7 - Shutdown completed.
INFO  22-01-22 10:21:06[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 10:21:06[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 10:21:11[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 10:21:13[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1736 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 10:21:13[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 10:21:14[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 10:21:14[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:21:14[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 10:21:14[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 10:21:14[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 10:21:14[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 7616 ms
INFO  22-01-22 10:21:14[restartedMain] [HikariDataSource:110] - HikariPool-8 - Starting...
INFO  22-01-22 10:21:14[restartedMain] [HikariDataSource:123] - HikariPool-8 - Start completed.
INFO  22-01-22 10:21:15[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 10:21:15[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 10:21:16[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 10:21:16[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 10:21:16[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 10:21:17[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 48527a59-6a07-43ec-bd68-e48853b8c859

INFO  22-01-22 10:21:18[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fa07b4e, org.springframework.security.web.context.SecurityContextPersistenceFilter@60e65bf5, org.springframework.security.web.header.HeaderWriterFilter@7330b9e9, org.springframework.web.filter.CorsFilter@a42ed47, org.springframework.security.web.authentication.logout.LogoutFilter@5eeb49c8, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@4c324851, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10ee5a05, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66674600, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ab2924b, org.springframework.security.web.session.SessionManagementFilter@7563fdd7, org.springframework.security.web.access.ExceptionTranslationFilter@71103d19]
INFO  22-01-22 10:21:19[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 10:21:19[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 10:21:19[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 10:21:19[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 13.188 seconds (JVM running for 1450.607)
INFO  22-01-22 10:21:19[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 11:42:36[Thread-31] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 11:42:36[Thread-31] [HikariDataSource:350] - HikariPool-8 - Shutdown initiated...
INFO  22-01-22 11:42:36[Thread-31] [HikariDataSource:352] - HikariPool-8 - Shutdown completed.
INFO  22-01-22 11:42:37[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 11:42:37[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 11:42:42[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 11:42:44[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1744 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 11:42:45[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 11:42:45[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 11:42:45[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 11:42:45[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 11:42:45[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 11:42:45[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 11:42:45[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8581 ms
INFO  22-01-22 11:42:46[restartedMain] [HikariDataSource:110] - HikariPool-9 - Starting...
INFO  22-01-22 11:42:46[restartedMain] [HikariDataSource:123] - HikariPool-9 - Start completed.
INFO  22-01-22 11:42:46[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 11:42:47[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 11:42:47[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 11:42:47[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 11:42:47[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 11:42:49[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 8fad5a99-4f72-4115-90fb-89b2408f3af6

INFO  22-01-22 11:42:50[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29cbf578, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c55e30d, org.springframework.security.web.header.HeaderWriterFilter@3f13bed8, org.springframework.web.filter.CorsFilter@422822f6, org.springframework.security.web.authentication.logout.LogoutFilter@7a3dcf6c, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@14e6bc71, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e8a16c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c4d90b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5122e92c, org.springframework.security.web.session.SessionManagementFilter@13ecccfa, org.springframework.security.web.access.ExceptionTranslationFilter@16f295e6]
INFO  22-01-22 11:42:50[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 11:42:50[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 11:42:50[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 11:42:50[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 14.026 seconds (JVM running for 6342.013)
INFO  22-01-22 11:42:50[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 13:05:53[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 13:05:53[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 13:05:53[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 4 ms
ERROR 22-01-22 13:05:54[http-nio-8080-exec-1] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T13:05:54Z, a difference of 328366149 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 13:05:55[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

ERROR 22-01-22 13:05:55[http-nio-8080-exec-1] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

java.sql.SQLSyntaxErrorException: Unknown column 'user0_.access' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.hasEmail(UserApiLogicServiceImpl.java:87)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:42)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 13:05:55[http-nio-8080-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {FAILED after 56 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'user0_.access' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.hasEmail(UserApiLogicServiceImpl.java:87)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:42)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 13:05:55[http-nio-8080-exec-1] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 13:05:55[http-nio-8080-exec-1] [SqlExceptionHelper:142] - Unknown column 'user0_.access' in 'field list'
ERROR 22-01-22 13:05:55[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'user0_.access' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeQuery(PreparedStatementSpy.java:780)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2297)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2050)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2843)
	at org.hibernate.loader.Loader.doList(Loader.java:2825)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2657)
	at org.hibernate.loader.Loader.list(Loader.java:2652)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:400)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1414)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1636)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1604)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1652)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.findByEmail(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.hasEmail(UserApiLogicServiceImpl.java:87)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:42)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 13:07:24[http-nio-8080-exec-2] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T13:07:24Z, a difference of 328456418 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 13:07:24[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:07:24[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 13:07:24[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

DEBUG 22-01-22 13:07:24[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:07:24.667', 'test@gmail.com', 'example', 'test', '$2a$10$H4pzZsn4QbOl0Zq5IO7/Ru3PrgsIVFqGr1oVXSw8Ylp4lVoSQj/0K', 0)

ERROR 22-01-22 13:07:24[http-nio-8080-exec-2] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:07:24.667', 'test@gmail.com', 'example', 'test', '$2a$10$H4pzZsn4QbOl0Zq5IO7/Ru3PrgsIVFqGr1oVXSw8Ylp4lVoSQj/0K', 0)

com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'password' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:59)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 13:07:24[http-nio-8080-exec-2] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:07:24.667', 'test@gmail.com', 'example', 'test', '$2a$10$H4pzZsn4QbOl0Zq5IO7/Ru3PrgsIVFqGr1oVXSw8Ylp4lVoSQj/0K', 0)
 {FAILED after 8 msec}
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'password' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:59)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 13:07:24[http-nio-8080-exec-2] [SqlExceptionHelper:137] - SQL Error: 1406, SQLState: 22001
ERROR 22-01-22 13:07:24[http-nio-8080-exec-2] [SqlExceptionHelper:142] - Data truncation: Data too long for column 'password' at row 1
ERROR 22-01-22 13:07:24[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement] with root cause
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'password' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy276.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl.create(UserApiLogicServiceImpl.java:59)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$FastClassBySpringCGLIB$$773b9a08.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.UserApiLogicServiceImpl$$EnhancerBySpringCGLIB$$72079bb5.create(<generated>)
	at com.example.gradlebnbadminapi.controller.UserController.create(UserController.java:23)
	at com.example.gradlebnbadminapi.controller.UserController$$FastClassBySpringCGLIB$$15607474.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.UserController$$EnhancerBySpringCGLIB$$45baa242.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 13:08:21[http-nio-8080-exec-3] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T13:08:21Z, a difference of 328513498 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 13:08:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:08:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 13:08:21[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

DEBUG 22-01-22 13:08:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:08:21.595', 'test@gmail.com', 'example', 'test', '$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y', 0)

DEBUG 22-01-22 13:08:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:08:21.595', 'test@gmail.com', 'example', 'test', '$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y', 0)
 {executed in 2 msec}
DEBUG 22-01-22 13:08:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
121. getGeneratedKeys on query: insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/November/16', '01/22/2022 13:08:21.595', 'test@gmail.com', 'example', 'test', '$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y', 0)
 {executed in 0 msec}
INFO  22-01-22 13:08:21[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 13:08:21[http-nio-8080-exec-3] [UserApiLogicServiceImpl:61] - User Created:User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=null, createdAt=2022-01-22T13:08:21.595719, updatedAt=null)
ERROR 22-01-22 13:08:32[http-nio-8080-exec-5] [TokenProvider:48] - JWT TOKEN ERROR: JWT expired at 2022-01-18T17:53:08Z. Current time: 2022-01-22T13:08:32Z, a difference of 328524963 milliseconds.  Allowed clock skew: 0 milliseconds.
DEBUG 22-01-22 13:08:32[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:08:32[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 13:08:32[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |null          |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 13:08:33[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. update user set last_login_at='01/22/2022 13:08:33.116' where id=1

DEBUG 22-01-22 13:08:33[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
121. update user set last_login_at='01/22/2022 13:08:33.116' where id=1
 {executed in 0 msec}
DEBUG 22-01-22 13:19:39[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:19:39[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-22 13:19:39[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:08:33.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 13:19:39[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 13:19:39[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 13:19:39[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 13:19:39[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:19:39[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 13:19:39[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:08:33 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 13:22:48[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:22:48[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 13:22:48[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:08:33.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 13:22:48[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
131. update user set last_login_at='01/22/2022 13:22:48.567' where id=1

DEBUG 22-01-22 13:22:48[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
131. update user set last_login_at='01/22/2022 13:22:48.567' where id=1
 {executed in 1 msec}
DEBUG 22-01-22 13:24:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 13:24:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 13:24:03[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:22:49.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 13:24:03[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
131. update user set last_login_at='01/22/2022 13:24:03.472' where id=1

DEBUG 22-01-22 13:24:03[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
131. update user set last_login_at='01/22/2022 13:24:03.472' where id=1
 {executed in 0 msec}
DEBUG 22-01-22 16:40:00[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:40:00[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 3 msec}
INFO  22-01-22 16:40:00[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:40:00[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:40:00[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 16:40:00[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 16:40:00[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:40:00[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:40:00[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:40:04[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:40:04[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:40:04[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:40:04[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:40:04[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 16:40:04[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 16:40:04[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:40:04[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:40:04[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:43:06[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:43:06[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:43:06[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:43:06[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:43:06[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 16:43:06[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 16:43:06[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:43:06[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:43:06[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:43:11[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:43:11[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:43:11[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:43:11[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:43:11[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 16:43:11[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 16:43:11[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:43:11[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:43:11[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:44:17[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:17[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/location
INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [LocationApiLogicServiceImpl:36] - Google Geometry Url: https://maps.googleapis.com/maps/api/geocode/json?latlng=35.5729408,139.739136&language=en&key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc
INFO  22-01-22 16:44:17[http-nio-8080-exec-2] [LocationApiLogicServiceImpl:40] - Responded Geometry info: {
   "plus_code" : {
      "compound_code" : "HPFQ+5MC Ota City, Tokyo, Japan",
      "global_code" : "8Q7XHPFQ+5MC"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "三光熱処理",
               "short_name" : "三光熱処理",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Japan, 〒143-0012 Tokyo, Ota City, Ōmorihigashi, 3-chōme−27−６ 三光熱処理",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5728752,
                  "lng" : 139.7391158
               },
               "southwest" : {
                  "lat" : 35.5726838,
                  "lng" : 139.7388572
               }
            },
            "location" : {
               "lat" : 35.5728063,
               "lng" : 139.7389774
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741284802915,
                  "lng" : 139.7403354802915
               },
               "southwest" : {
                  "lat" : 35.5714305197085,
                  "lng" : 139.7376375197085
               }
            }
         },
         "place_id" : "ChIJh7_SR65hGGARdTUZzy-iYgM",
         "types" : [ "premise" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3-chōme-27-6 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "location" : {
               "lat" : 35.5727769,
               "lng" : 139.7389821
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741258802915,
                  "lng" : 139.7403310802915
               },
               "southwest" : {
                  "lat" : 35.5714279197085,
                  "lng" : 139.7376331197085
               }
            }
         },
         "place_id" : "ChIJjwvMSK5hGGAR864ht7lEEcE",
         "plus_code" : {
            "compound_code" : "HPFQ+4H Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+4H"
         },
         "types" : [ "street_address" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "三光熱処理",
               "short_name" : "三光熱処理",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Japan, 〒143-0012 Tokyo, Ota City, Ōmorihigashi, 3-chōme−27−６ 三光熱処理",
         "geometry" : {
            "location" : {
               "lat" : 35.5727769,
               "lng" : 139.7389821
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741258802915,
                  "lng" : 139.7403310802915
               },
               "southwest" : {
                  "lat" : 35.5714279197085,
                  "lng" : 139.7376331197085
               }
            }
         },
         "place_id" : "ChIJQ5XSR65hGGARfN2veB2uvmE",
         "plus_code" : {
            "compound_code" : "HPFQ+4H Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+4H"
         },
         "types" : [ "establishment", "point_of_interest" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "HPFQ+5M",
               "short_name" : "HPFQ+5M",
               "types" : [ "plus_code" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "HPFQ+5M Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.573,
                  "lng" : 139.73925
               },
               "southwest" : {
                  "lat" : 35.572875,
                  "lng" : 139.739125
               }
            },
            "location" : {
               "lat" : 35.5729408,
               "lng" : 139.739136
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5742864802915,
                  "lng" : 139.7405364802915
               },
               "southwest" : {
                  "lat" : 35.5715885197085,
                  "lng" : 139.7378385197085
               }
            }
         },
         "place_id" : "GhIJpEXHH1bJQUARe2mKAKd3YUA",
         "plus_code" : {
            "compound_code" : "HPFQ+5M Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+5M"
         },
         "types" : [ "plus_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Unnamed Road",
               "short_name" : "Unnamed Road",
               "types" : [ "route" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Unnamed Road, 3-chōme-27 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5730769,
                  "lng" : 139.7394607
               },
               "southwest" : {
                  "lat" : 35.5725324,
                  "lng" : 139.738844
               }
            },
            "location" : {
               "lat" : 35.5728067,
               "lng" : 139.739155
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57415363029149,
                  "lng" : 139.7405013302915
               },
               "southwest" : {
                  "lat" : 35.57145566970849,
                  "lng" : 139.7378033697085
               }
            }
         },
         "place_id" : "ChIJTxgCq69hGGARmOQYLBqo9rg",
         "types" : [ "route" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "28",
               "short_name" : "28",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3 Chome",
               "short_name" : "3 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3 Chome-28 Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5701818,
                  "lng" : 139.7383277
               }
            },
            "location" : {
               "lat" : 35.5723895,
               "lng" : 139.7412526
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5701818,
                  "lng" : 139.7383277
               }
            }
         },
         "place_id" : "ChIJv8B5eq9hGGARxgJQcfpdNhs",
         "types" : [ "political", "sublocality", "sublocality_level_4" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "3 Chome",
               "short_name" : "3 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3 Chome Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5692606,
                  "lng" : 139.7346021
               }
            },
            "location" : {
               "lat" : 35.5717183,
               "lng" : 139.7402946
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5692606,
                  "lng" : 139.7346021
               }
            }
         },
         "place_id" : "ChIJcw0nAK9hGGARyVm1HP2Gk7M",
         "types" : [ "political", "sublocality", "sublocality_level_3" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJxZNj_qhhGGARTW5fPBcmOYU",
         "types" : [ "postal_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJLRKfCK9hGGARvfLtFpOxWWw",
         "types" : [ "political", "sublocality", "sublocality_level_2" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ōmori",
               "short_name" : "Ōmori",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ōmori, Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            },
            "location" : {
               "lat" : 35.5736324,
               "lng" : 139.7338633
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            }
         },
         "place_id" : "ChIJExMzH6pvGGARsS6Ipgy1Jn0",
         "types" : [ "neighborhood", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            },
            "location" : {
               "lat" : 35.561407,
               "lng" : 139.7160626
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            }
         },
         "place_id" : "ChIJQ2ajwVJgGGARSQ1cUKxqwk8",
         "types" : [ "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "colloquial_area", "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            },
            "location" : {
               "lat" : 35.6803997,
               "lng" : 139.7690174
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            }
         },
         "place_id" : "ChIJXSModoWLGGARILWiCfeu2M0",
         "types" : [ "colloquial_area", "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            },
            "location" : {
               "lat" : 35.6761919,
               "lng" : 139.6503106
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            }
         },
         "place_id" : "ChIJ51cu8IcbXWARiRtXIothAS4",
         "types" : [ "administrative_area_level_1", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            },
            "location" : {
               "lat" : 36.204824,
               "lng" : 138.252924
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            }
         },
         "place_id" : "ChIJLxl_1w9OZzQRRFJmfNR1QvU",
         "types" : [ "country", "political" ]
      }
   ],
   "status" : "OK"
}

DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1

DEBUG 22-01-22 16:44:36[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=1
 {executed in 15 msec}
INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|
|user_id |id |id |updated_at |created_at |del_flg |name |size |url |user_id |
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|

INFO  22-01-22 16:44:36[http-nio-8080-exec-4] [PhotoLogicServiceImpl:55] - Photo info: []
DEBUG 22-01-22 16:44:45[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:45[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [PhotoLogicServiceImpl:63] - Create Original Photo name: bnb_test6.jpg
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [PhotoLogicServiceImpl:64] - email: test@gmail.com
DEBUG 22-01-22 16:44:45[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:45[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [HandlingS3:63] - Create user: test@gmail.com
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [HandlingS3:66] - Upload photo name: bnb_test6_1642869885651.jpg
INFO  22-01-22 16:44:45[http-nio-8080-exec-6] [HandlingS3:111] - Photo: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@70edab1c
INFO  22-01-22 16:44:47[http-nio-8080-exec-6] [HandlingS3:71] - S3Url: https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642869885651.jpg
INFO  22-01-22 16:44:47[http-nio-8080-exec-6] [HandlingS3:76] - Create CALLBACK start
INFO  22-01-22 16:44:47[http-nio-8080-exec-6] [HandlingS3:86] - Create Photo: Photo(id=null, name=bnb_test6_1642869885651.jpg, size=39900, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642869885651.jpg, delFlg=STORED, createdAt=2022-01-22T16:44:47.305508, UpdatedAt=null)
DEBUG 22-01-22 16:44:47[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:47.330', 0, 'bnb_test6_1642869885651.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642869885651.jpg', 1)

DEBUG 22-01-22 16:44:47[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:47.330', 0, 'bnb_test6_1642869885651.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642869885651.jpg', 1)
 {executed in 2 msec}
DEBUG 22-01-22 16:44:47[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
201. getGeneratedKeys on query: insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:47.330', 0, 'bnb_test6_1642869885651.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642869885651.jpg', 1)
 {executed in 0 msec}
INFO  22-01-22 16:44:47[http-nio-8080-exec-6] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [PhotoLogicServiceImpl:63] - Create Original Photo name: bnb_test4.jpg
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [PhotoLogicServiceImpl:64] - email: test@gmail.com
DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:63] - Create user: test@gmail.com
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:66] - Upload photo name: bnb_test4_1642869892308.jpg
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:111] - Photo: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@597be34a
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:71] - S3Url: https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1642869892308.jpg
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:76] - Create CALLBACK start
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [HandlingS3:86] - Create Photo: Photo(id=null, name=bnb_test4_1642869892308.jpg, size=93116, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1642869892308.jpg, delFlg=STORED, createdAt=2022-01-22T16:44:52.419906, UpdatedAt=null)
DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:52.420', 0, 'bnb_test4_1642869892308.jpg', 93116, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1642869892308.jpg', 1)

DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:52.420', 0, 'bnb_test4_1642869892308.jpg', 93116, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1642869892308.jpg', 1)
 {executed in 0 msec}
DEBUG 22-01-22 16:44:52[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
201. getGeneratedKeys on query: insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 16:44:52.420', 0, 'bnb_test4_1642869892308.jpg', 93116, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test4_1642869892308.jpg', 1)
 {executed in 0 msec}
INFO  22-01-22 16:44:52[http-nio-8080-exec-7] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
201. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:45:21.068', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:45:21.068', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 2 msec}
DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
201. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:45:21.068', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:45:21[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=1, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:45:21.068203, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:45:21[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (1, '01/22/2022 16:45:21.144', 0, 0, 0, 0, 0, 0)

ERROR 22-01-22 16:45:21[http-nio-8080-exec-9] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (1, '01/22/2022 16:45:21.144', 0, 0, 0, 0, 0, 0)

java.sql.SQLSyntaxErrorException: Unknown column 'laundry_room' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveConveniences(RoomApiLogicServiceImpl.java:125)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:61)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:45:21[http-nio-8080-exec-9] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
201. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (1, '01/22/2022 16:45:21.144', 0, 0, 0, 0, 0, 0)
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'laundry_room' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy274.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy281.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveConveniences(RoomApiLogicServiceImpl.java:125)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:61)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:45:21[http-nio-8080-exec-9] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 16:45:21[http-nio-8080-exec-9] [SqlExceptionHelper:142] - Unknown column 'laundry_room' in 'field list'
WARN  22-01-22 16:45:21[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 16:45:21[http-nio-8080-exec-9] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
INFO  22-01-22 16:47:17[Thread-35] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 16:47:17[Thread-35] [HikariDataSource:350] - HikariPool-9 - Shutdown initiated...
INFO  22-01-22 16:47:17[Thread-35] [HikariDataSource:352] - HikariPool-9 - Shutdown completed.
INFO  22-01-22 16:47:18[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 16:47:18[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 16:47:23[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 16:47:24[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1729 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 16:47:25[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 16:47:26[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 16:47:26[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 16:47:26[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 16:47:26[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 16:47:26[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 16:47:26[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8210 ms
INFO  22-01-22 16:47:26[restartedMain] [HikariDataSource:110] - HikariPool-10 - Starting...
INFO  22-01-22 16:47:26[restartedMain] [HikariDataSource:123] - HikariPool-10 - Start completed.
INFO  22-01-22 16:47:27[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 16:47:27[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 16:47:28[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 16:47:28[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 16:47:28[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 16:47:30[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 307f4169-3768-45db-8cce-ccb84541d908

INFO  22-01-22 16:47:30[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40a915ca, org.springframework.security.web.context.SecurityContextPersistenceFilter@60d2d9f5, org.springframework.security.web.header.HeaderWriterFilter@52eb0d2b, org.springframework.web.filter.CorsFilter@28a31122, org.springframework.security.web.authentication.logout.LogoutFilter@47eee894, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@3f7e4f67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b996530, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7111bd3d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73dc2c00, org.springframework.security.web.session.SessionManagementFilter@117a35da, org.springframework.security.web.access.ExceptionTranslationFilter@339508af]
INFO  22-01-22 16:47:31[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 16:47:31[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 16:47:31[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 16:47:31[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 14.012 seconds (JVM running for 24622.791)
INFO  22-01-22 16:47:31[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:47:34.810', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:47:34.810', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:47:34.810', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:47:34[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=2, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:47:34.810827, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:47:34[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (2, '01/22/2022 16:47:34.870', 0, 0, 0, 0, 0, 0)

ERROR 22-01-22 16:47:34[http-nio-8080-exec-1] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (2, '01/22/2022 16:47:34.870', 0, 0, 0, 0, 0, 0)

com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'created_at' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy304.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveConveniences(RoomApiLogicServiceImpl.java:125)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:61)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:47:34[http-nio-8080-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (2, '01/22/2022 16:47:34.870', 0, 0, 0, 0, 0, 0)
 {FAILED after 1 msec}
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Out of range value for column 'created_at' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy304.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveConveniences(RoomApiLogicServiceImpl.java:125)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:61)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:47:34[http-nio-8080-exec-1] [SqlExceptionHelper:137] - SQL Error: 1264, SQLState: 22001
ERROR 22-01-22 16:47:34[http-nio-8080-exec-1] [SqlExceptionHelper:142] - Data truncation: Out of range value for column 'created_at' at row 1
WARN  22-01-22 16:47:34[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement
ERROR 22-01-22 16:47:34[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:23.525', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:23.525', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 1 msec}
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:23.525', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:23.525830, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/22/2022 16:51:23.531', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/22/2022 16:51:23.531', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (3, '01/22/2022 16:51:23.531', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, createdAt=null, updatedAt=null, accommodation=Accommodation(id=3, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:23.525830, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ōmorihigashi', '01/22/2022 16:51:23.552', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

ERROR 22-01-22 16:51:23[http-nio-8080-exec-2] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ōmorihigashi', '01/22/2022 16:51:23.552', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:51:23[http-nio-8080-exec-2] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (3, 'Ōmorihigashi', '01/22/2022 16:51:23.552', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:51:23[http-nio-8080-exec-2] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 16:51:23[http-nio-8080-exec-2] [SqlExceptionHelper:142] - Unknown column 'accommodation_id' in 'field list'
WARN  22-01-22 16:51:23[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 16:51:23[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:37.925', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:37.925', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 1 msec}
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:37.925', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:37.925345, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/22/2022 16:51:37.933', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/22/2022 16:51:37.933', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (4, '01/22/2022 16:51:37.933', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, createdAt=null, updatedAt=null, accommodation=Accommodation(id=4, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:37.925345, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ōmorihigashi', '01/22/2022 16:51:37.940', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

ERROR 22-01-22 16:51:37[http-nio-8080-exec-3] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ōmorihigashi', '01/22/2022 16:51:37.940', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:51:37[http-nio-8080-exec-3] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (4, 'Ōmorihigashi', '01/22/2022 16:51:37.940', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:51:37[http-nio-8080-exec-3] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 16:51:37[http-nio-8080-exec-3] [SqlExceptionHelper:142] - Unknown column 'accommodation_id' in 'field list'
WARN  22-01-22 16:51:37[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 16:51:37[http-nio-8080-exec-3] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:50.256', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:50.256', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 1 msec}
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:51:50.256', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:50.256741, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/22/2022 16:51:50.264', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/22/2022 16:51:50.264', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (5, '01/22/2022 16:51:50.264', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, createdAt=null, updatedAt=null, accommodation=Accommodation(id=5, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:51:50.256741, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ōmorihigashi', '01/22/2022 16:51:50.271', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

ERROR 22-01-22 16:51:50[http-nio-8080-exec-4] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ōmorihigashi', '01/22/2022 16:51:50.271', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:51:50[http-nio-8080-exec-4] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (5, 'Ōmorihigashi', '01/22/2022 16:51:50.271', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:51:50[http-nio-8080-exec-4] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 16:51:50[http-nio-8080-exec-4] [SqlExceptionHelper:142] - Unknown column 'accommodation_id' in 'field list'
WARN  22-01-22 16:51:50[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 16:51:50[http-nio-8080-exec-4] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22 13:08:22.0 |test@gmail.com |example   |2022-01-22 13:24:03.0 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |null       |
|---|-------|-----------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday         |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|1  |1      |2006/November/16 |2022-01-22T22:08:22 |test@gmail.com |example   |2022-01-22T22:24:03 |test     |$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y |0      |[null]     |
|---|-------|-----------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:55:46.302', 'test', 'Apartment', 1, 'test title', 1)

DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:55:46.302', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Annex', '01/22/2022 16:55:46.302', 'test', 'Apartment', 1, 'test title', 1)
 {executed in 0 msec}
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:55:46.302947, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/22/2022 16:55:46.310', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/22/2022 16:55:46.310', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (6, '01/22/2022 16:55:46.310', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=Japan, createdAt=null, updatedAt=null, accommodation=Accommodation(id=6, title=test title, largeBuildingType=Apartment, buildingType=Annex, maximumGuestCount=1, description=test, createdAt=2022-01-22T16:55:46.302947, updatedAt=null, user=User(id=1, email=test@gmail.com, password=$2a$10$QjFOefPMtUpLFrMnq0WkTuGea.6qCSeqMYFYk3kS3XgYXIBe7xl9y, firstname=example, lastname=test, birthday=2006/November/16, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T13:24:03, createdAt=2022-01-22T13:08:22, updatedAt=null)))
DEBUG 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ōmorihigashi', '01/22/2022 16:55:46.318', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

ERROR 22-01-22 16:55:46[http-nio-8080-exec-5] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ōmorihigashi', '01/22/2022 16:55:46.318', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')

java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 16:55:46[http-nio-8080-exec-5] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (6, 'Ōmorihigashi', '01/22/2022 16:55:46.318', '111', 35, 139, 'Japan', 'Ota City', '3-chōme 27')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'accommodation_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy305.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveLocation(RoomApiLogicServiceImpl.java:143)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:62)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 16:55:46[http-nio-8080-exec-5] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 16:55:46[http-nio-8080-exec-5] [SqlExceptionHelper:142] - Unknown column 'accommodation_id' in 'field list'
WARN  22-01-22 16:55:46[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 16:55:46[http-nio-8080-exec-5] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 17:00:56[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:00:56[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-22 17:00:56[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

ERROR 22-01-22 17:00:56[http-nio-8080-exec-6] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:00:56[http-nio-8080-exec-6] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-22 17:00:58[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:00:58[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:00:58[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

ERROR 22-01-22 17:00:58[http-nio-8080-exec-8] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:00:58[http-nio-8080-exec-8] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-22 17:01:03[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:01:03[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:01:03[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

ERROR 22-01-22 17:01:03[http-nio-8080-exec-10] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:01:03[http-nio-8080-exec-10] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-22 17:01:24[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:01:24[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:01:24[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

ERROR 22-01-22 17:01:24[http-nio-8080-exec-1] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:01:24[http-nio-8080-exec-1] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
DEBUG 22-01-22 17:01:36[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:01:36[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:01:36[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

ERROR 22-01-22 17:01:36[http-nio-8080-exec-2] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:01:36[http-nio-8080-exec-2] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-22 17:02:26[http-nio-8080-exec-4] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
DEBUG 22-01-22 17:02:26[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:02:26[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:02:26[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|id |access |birthday |created_at |email |firstname |last_login_at |lastname |password |status |updated_at |
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|
|---|-------|---------|-----------|------|----------|--------------|---------|---------|-------|-----------|

DEBUG 22-01-22 17:02:26[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/May/19', '01/22/2022 17:02:26.263', 'test@gmail.com', 'example', 'test', '$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO', 0)

DEBUG 22-01-22 17:02:26[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/May/19', '01/22/2022 17:02:26.263', 'test@gmail.com', 'example', 'test', '$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO', 0)
 {executed in 1 msec}
DEBUG 22-01-22 17:02:26[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into user (access, birthday, created_at, email, firstname, lastname, password, status) values (1, '2006/May/19', '01/22/2022 17:02:26.263', 'test@gmail.com', 'example', 'test', '$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO', 0)
 {executed in 0 msec}
INFO  22-01-22 17:02:26[http-nio-8080-exec-4] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 17:02:26[http-nio-8080-exec-4] [UserApiLogicServiceImpl:61] - User Created:User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=null, createdAt=2022-01-22T17:02:26.263398, updatedAt=null)
ERROR 22-01-22 17:02:36[http-nio-8080-exec-6] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
DEBUG 22-01-22 17:02:36[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:02:36[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:02:36[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |null          |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|

ERROR 22-01-22 17:02:37[http-nio-8080-exec-6] [SessionApiLogicServiceImpl:42] - Wrong Password
ERROR 22-01-22 17:02:37[http-nio-8080-exec-6] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.security.auth.login.LoginException: login Error] with root cause
javax.security.auth.login.LoginException: login Error
	at com.example.gradlebnbadminapi.service.SessionApiLogicServiceImpl.authenticate(SessionApiLogicServiceImpl.java:43)
	at com.example.gradlebnbadminapi.controller.SessionController.create(SessionController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 17:02:41[http-nio-8080-exec-7] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
DEBUG 22-01-22 17:02:41[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:02:41[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:02:41[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |null          |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|--------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:02:41[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/22/2022 17:02:41.107' where id=2

DEBUG 22-01-22 17:02:41[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/22/2022 17:02:41.107' where id=2
 {executed in 1 msec}
ERROR 22-01-22 17:03:20[http-nio-8080-exec-9] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
ERROR 22-01-22 17:03:20[http-nio-8080-exec-9] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:03:20[http-nio-8080-exec-9] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-22 17:03:28[http-nio-8080-exec-10] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
ERROR 22-01-22 17:03:28[http-nio-8080-exec-10] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:03:28[http-nio-8080-exec-10] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-22 17:04:00[http-nio-8080-exec-2] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
ERROR 22-01-22 17:04:00[http-nio-8080-exec-2] [UnauthenticatedException:12] - Unauthenticated User.
WARN  22-01-22 17:04:00[http-nio-8080-exec-2] [ExceptionHandlerExceptionResolver:208] - Resolved [com.example.gradlebnbadminapi.exception.UnauthenticatedException: Unauthenticated User.]
ERROR 22-01-22 17:04:22[http-nio-8080-exec-3] [TokenProvider:48] - JWT TOKEN ERROR: JWT strings must contain exactly 2 period characters. Found: 0
DEBUG 22-01-22 17:04:22[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:04:22[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:04:22[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:02:41.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:04:22[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/22/2022 17:04:22.604' where id=2

DEBUG 22-01-22 17:04:22[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. update user set last_login_at='01/22/2022 17:04:22.604' where id=2
 {executed in 0 msec}
DEBUG 22-01-22 17:05:08[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:05:08[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:05:08[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:05:08[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:05:08[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:05:08[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:05:08[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:05:08[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:05:08[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:05:09[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:05:09[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:05:09[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:05:09[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:05:09[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/location
INFO  22-01-22 17:05:09[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:05:09[http-nio-8080-exec-5] [LocationApiLogicServiceImpl:36] - Google Geometry Url: https://maps.googleapis.com/maps/api/geocode/json?latlng=35.5729408,139.739136&language=en&key=AIzaSyBy-JKAaKlSZxFpf2AzD2Nsh8aqpXAJSMc
INFO  22-01-22 17:05:10[http-nio-8080-exec-5] [LocationApiLogicServiceImpl:40] - Responded Geometry info: {
   "plus_code" : {
      "compound_code" : "HPFQ+5MC Ota City, Tokyo, Japan",
      "global_code" : "8Q7XHPFQ+5MC"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "三光熱処理",
               "short_name" : "三光熱処理",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Japan, 〒143-0012 Tokyo, Ota City, Ōmorihigashi, 3-chōme−27−６ 三光熱処理",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5728752,
                  "lng" : 139.7391158
               },
               "southwest" : {
                  "lat" : 35.5726838,
                  "lng" : 139.7388572
               }
            },
            "location" : {
               "lat" : 35.5728063,
               "lng" : 139.7389774
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741284802915,
                  "lng" : 139.7403354802915
               },
               "southwest" : {
                  "lat" : 35.5714305197085,
                  "lng" : 139.7376375197085
               }
            }
         },
         "place_id" : "ChIJh7_SR65hGGARdTUZzy-iYgM",
         "types" : [ "premise" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3-chōme-27-6 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "location" : {
               "lat" : 35.5727769,
               "lng" : 139.7389821
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741258802915,
                  "lng" : 139.7403310802915
               },
               "southwest" : {
                  "lat" : 35.5714279197085,
                  "lng" : 139.7376331197085
               }
            }
         },
         "place_id" : "ChIJjwvMSK5hGGAR864ht7lEEcE",
         "plus_code" : {
            "compound_code" : "HPFQ+4H Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+4H"
         },
         "types" : [ "street_address" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "三光熱処理",
               "short_name" : "三光熱処理",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "6",
               "short_name" : "6",
               "types" : [ "premise" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Japan, 〒143-0012 Tokyo, Ota City, Ōmorihigashi, 3-chōme−27−６ 三光熱処理",
         "geometry" : {
            "location" : {
               "lat" : 35.5727769,
               "lng" : 139.7389821
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5741258802915,
                  "lng" : 139.7403310802915
               },
               "southwest" : {
                  "lat" : 35.5714279197085,
                  "lng" : 139.7376331197085
               }
            }
         },
         "place_id" : "ChIJQ5XSR65hGGARfN2veB2uvmE",
         "plus_code" : {
            "compound_code" : "HPFQ+4H Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+4H"
         },
         "types" : [ "establishment", "point_of_interest" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "HPFQ+5M",
               "short_name" : "HPFQ+5M",
               "types" : [ "plus_code" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "HPFQ+5M Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.573,
                  "lng" : 139.73925
               },
               "southwest" : {
                  "lat" : 35.572875,
                  "lng" : 139.739125
               }
            },
            "location" : {
               "lat" : 35.5729408,
               "lng" : 139.739136
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5742864802915,
                  "lng" : 139.7405364802915
               },
               "southwest" : {
                  "lat" : 35.5715885197085,
                  "lng" : 139.7378385197085
               }
            }
         },
         "place_id" : "GhIJpEXHH1bJQUARe2mKAKd3YUA",
         "plus_code" : {
            "compound_code" : "HPFQ+5M Ota City, Tokyo, Japan",
            "global_code" : "8Q7XHPFQ+5M"
         },
         "types" : [ "plus_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Unnamed Road",
               "short_name" : "Unnamed Road",
               "types" : [ "route" ]
            },
            {
               "long_name" : "27",
               "short_name" : "27",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3-chōme",
               "short_name" : "3-chōme",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Ōmorihigashi",
               "short_name" : "Ōmorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Unnamed Road, 3-chōme-27 Ōmorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5730769,
                  "lng" : 139.7394607
               },
               "southwest" : {
                  "lat" : 35.5725324,
                  "lng" : 139.738844
               }
            },
            "location" : {
               "lat" : 35.5728067,
               "lng" : 139.739155
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.57415363029149,
                  "lng" : 139.7405013302915
               },
               "southwest" : {
                  "lat" : 35.57145566970849,
                  "lng" : 139.7378033697085
               }
            }
         },
         "place_id" : "ChIJTxgCq69hGGARmOQYLBqo9rg",
         "types" : [ "route" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "28",
               "short_name" : "28",
               "types" : [ "political", "sublocality", "sublocality_level_4" ]
            },
            {
               "long_name" : "3 Chome",
               "short_name" : "3 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3 Chome-28 Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5701818,
                  "lng" : 139.7383277
               }
            },
            "location" : {
               "lat" : 35.5723895,
               "lng" : 139.7412526
            },
            "location_type" : "GEOMETRIC_CENTER",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5701818,
                  "lng" : 139.7383277
               }
            }
         },
         "place_id" : "ChIJv8B5eq9hGGARxgJQcfpdNhs",
         "types" : [ "political", "sublocality", "sublocality_level_4" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "3 Chome",
               "short_name" : "3 Chome",
               "types" : [ "political", "sublocality", "sublocality_level_3" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "3 Chome Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5692606,
                  "lng" : 139.7346021
               }
            },
            "location" : {
               "lat" : 35.5717183,
               "lng" : 139.7402946
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5746443,
                  "lng" : 139.7448357
               },
               "southwest" : {
                  "lat" : 35.5692606,
                  "lng" : 139.7346021
               }
            }
         },
         "place_id" : "ChIJcw0nAK9hGGARyVm1HP2Gk7M",
         "types" : [ "political", "sublocality", "sublocality_level_3" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            },
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJxZNj_qhhGGARTW5fPBcmOYU",
         "types" : [ "postal_code" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Omorihigashi",
               "short_name" : "Omorihigashi",
               "types" : [ "political", "sublocality", "sublocality_level_2" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "143-0012",
               "short_name" : "143-0012",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "Omorihigashi, Ota City, Tokyo 143-0012, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            },
            "location" : {
               "lat" : 35.5726741,
               "lng" : 139.7383786
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5792457,
                  "lng" : 139.7467245
               },
               "southwest" : {
                  "lat" : 35.56491219999999,
                  "lng" : 139.7340047
               }
            }
         },
         "place_id" : "ChIJLRKfCK9hGGARvfLtFpOxWWw",
         "types" : [ "political", "sublocality", "sublocality_level_2" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ōmori",
               "short_name" : "Ōmori",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ōmori, Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            },
            "location" : {
               "lat" : 35.5736324,
               "lng" : 139.7338633
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.5902714,
                  "lng" : 139.7539586
               },
               "southwest" : {
                  "lat" : 35.5607246,
                  "lng" : 139.7188174
               }
            }
         },
         "place_id" : "ChIJExMzH6pvGGARsS6Ipgy1Jn0",
         "types" : [ "neighborhood", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Ota City",
               "short_name" : "Ota City",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Ota City, Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            },
            "location" : {
               "lat" : 35.561407,
               "lng" : 139.7160626
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.6131066,
                  "lng" : 139.8259949
               },
               "southwest" : {
                  "lat" : 35.5209792,
                  "lng" : 139.6528164
               }
            }
         },
         "place_id" : "ChIJQ2ajwVJgGGARSQ1cUKxqwk8",
         "types" : [ "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "colloquial_area", "locality", "political" ]
            },
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            },
            "location" : {
               "lat" : 35.6803997,
               "lng" : 139.7690174
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8174453,
                  "lng" : 139.9188743
               },
               "southwest" : {
                  "lat" : 35.519042,
                  "lng" : 139.5628611
               }
            }
         },
         "place_id" : "ChIJXSModoWLGGARILWiCfeu2M0",
         "types" : [ "colloquial_area", "locality", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Tokyo",
               "short_name" : "Tokyo",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Tokyo, Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            },
            "location" : {
               "lat" : 35.6761919,
               "lng" : 139.6503106
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 35.8984074,
                  "lng" : 153.9867945
               },
               "southwest" : {
                  "lat" : 20.4231216,
                  "lng" : 136.0696826
               }
            }
         },
         "place_id" : "ChIJ51cu8IcbXWARiRtXIothAS4",
         "types" : [ "administrative_area_level_1", "political" ]
      },
      {
         "address_components" : [
            {
               "long_name" : "Japan",
               "short_name" : "JP",
               "types" : [ "country", "political" ]
            }
         ],
         "formatted_address" : "Japan",
         "geometry" : {
            "bounds" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            },
            "location" : {
               "lat" : 36.204824,
               "lng" : 138.252924
            },
            "location_type" : "APPROXIMATE",
            "viewport" : {
               "northeast" : {
                  "lat" : 45.6412626,
                  "lng" : 154.0031455
               },
               "southwest" : {
                  "lat" : 20.3585295,
                  "lng" : 122.8554688
               }
            }
         },
         "place_id" : "ChIJLxl_1w9OZzQRRFJmfNR1QvU",
         "types" : [ "country", "political" ]
      }
   ],
   "status" : "OK"
}

DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:06:36[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|
|user_id |id |id |updated_at |created_at |del_flg |name |size |url |user_id |
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|
|--------|---|---|-----------|-----------|--------|-----|-----|----|--------|

INFO  22-01-22 17:06:36[http-nio-8080-exec-7] [PhotoLogicServiceImpl:55] - Photo info: []
DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [PhotoLogicServiceImpl:63] - Create Original Photo name: bnb_test5.jpg
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [PhotoLogicServiceImpl:64] - email: test@gmail.com
DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:63] - Create user: test@gmail.com
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:66] - Upload photo name: bnb_test5_1642871201028.jpg
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:111] - Photo: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4f391ac0
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:71] - S3Url: https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:76] - Create CALLBACK start
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [HandlingS3:86] - Create Photo: Photo(id=null, name=bnb_test5_1642871201028.jpg, size=65006, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg, delFlg=STORED, createdAt=2022-01-22T17:06:41.247237, UpdatedAt=null)
DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:41.250', 0, 'bnb_test5_1642871201028.jpg', 65006, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg', 2)

DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:41.250', 0, 'bnb_test5_1642871201028.jpg', 65006, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg', 2)
 {executed in 1 msec}
DEBUG 22-01-22 17:06:41[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:41.250', 0, 'bnb_test5_1642871201028.jpg', 65006, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg', 2)
 {executed in 0 msec}
INFO  22-01-22 17:06:41[http-nio-8080-exec-8] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [PhotoLogicServiceImpl:63] - Create Original Photo name: bnb_test6.jpg
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [PhotoLogicServiceImpl:64] - email: test@gmail.com
DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:63] - Create user: test@gmail.com
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:66] - Upload photo name: bnb_test6_1642871204826.jpg
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:111] - Photo: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f11a78a
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:71] - S3Url: https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:76] - Create CALLBACK start
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [HandlingS3:86] - Create Photo: Photo(id=null, name=bnb_test6_1642871204826.jpg, size=39900, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg, delFlg=STORED, createdAt=2022-01-22T17:06:44.922108, UpdatedAt=null)
DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:44.922', 0, 'bnb_test6_1642871204826.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg', 2)

DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:44.922', 0, 'bnb_test6_1642871204826.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg', 2)
 {executed in 0 msec}
DEBUG 22-01-22 17:06:44[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into photo (created_at, del_flg, name, size, url, user_id) values ('01/22/2022 17:06:44.922', 0, 'bnb_test6_1642871204826.jpg', 39900, 'https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg', 2)
 {executed in 0 msec}
INFO  22-01-22 17:06:44[http-nio-8080-exec-9] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/photo
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [PhotoLogicServiceImpl:47] - Get S3 urls
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [PhotoLogicServiceImpl:48] - Email: test@gmail.com
DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:07:24[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:07:24[http-nio-8080-exec-10] [PhotoLogicServiceImpl:55] - Photo info: [PhotoApiResponse(id=3, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=4, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)]
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
211. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:07:32.362', 'test1
test2', 'Apartment', 1, 'test title', 2)

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:07:32.362', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 2 msec}
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:07:32.362', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:07:32.362931, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/22/2022 17:07:32.369', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/22/2022 17:07:32.369', 0, 0, 0, 0, 0, 0)
 {executed in 2 msec}
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (7, '01/22/2022 17:07:32.369', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:07:32.362931, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ōmorihigashi', '01/22/2022 17:07:32.375', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ōmorihigashi', '01/22/2022 17:07:32.375', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 1 msec}
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (7, 'Ōmorihigashi', '01/22/2022 17:07:32.375', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=20000, startDate=2022-01-23, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:07:32.362931, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/22/2022 17:07:32.383', '2022-02-05', '20000', '2022-01-23')

DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/22/2022 17:07:32.383', '2022-02-05', '20000', '2022-01-23')
 {executed in 2 msec}
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
211. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (7, '01/22/2022 17:07:32.383', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=7, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:07:32.362931, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/22/2022 17:07:32.431', 0, 0, 'entire')

ERROR 22-01-22 17:07:32[http-nio-8080-exec-1] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/22/2022 17:07:32.431', 0, 0, 'entire')

java.sql.SQLSyntaxErrorException: Unknown column 'number' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy306.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveRoom(RoomApiLogicServiceImpl.java:172)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:65)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 17:07:32[http-nio-8080-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
211. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (7, 1.5, 'private', '01/22/2022 17:07:32.431', 0, 0, 'entire')
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'number' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy297.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy306.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.saveRoom(RoomApiLogicServiceImpl.java:172)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:65)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 17:07:32[http-nio-8080-exec-1] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 17:07:32[http-nio-8080-exec-1] [SqlExceptionHelper:142] - Unknown column 'number' in 'field list'
WARN  22-01-22 17:07:32[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 17:07:32[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
INFO  22-01-22 17:09:13[Thread-39] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:09:13[Thread-39] [HikariDataSource:350] - HikariPool-10 - Shutdown initiated...
INFO  22-01-22 17:09:13[Thread-39] [HikariDataSource:352] - HikariPool-10 - Shutdown completed.
INFO  22-01-22 17:09:14[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:09:14[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:09:20[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:09:22[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1878 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:09:23[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:09:24[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:09:24[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:09:24[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:09:24[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:09:24[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:09:24[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9589 ms
INFO  22-01-22 17:09:24[restartedMain] [HikariDataSource:110] - HikariPool-11 - Starting...
INFO  22-01-22 17:09:24[restartedMain] [HikariDataSource:123] - HikariPool-11 - Start completed.
INFO  22-01-22 17:09:25[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:09:25[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:09:26[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:09:26[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:09:26[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:09:28[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 9819267e-964e-48fd-ae84-92d2289ac5c7

INFO  22-01-22 17:09:29[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2af2aafb, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e975940, org.springframework.security.web.header.HeaderWriterFilter@2d9d0118, org.springframework.web.filter.CorsFilter@371ea63a, org.springframework.security.web.authentication.logout.LogoutFilter@11e60020, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@61700679, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f493f95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a9978a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68000de, org.springframework.security.web.session.SessionManagementFilter@1eae28f4, org.springframework.security.web.access.ExceptionTranslationFilter@57cac2ad]
INFO  22-01-22 17:09:29[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:09:29[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:09:29[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:09:30[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.996 seconds (JVM running for 25941.06)
INFO  22-01-22 17:09:30[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
DEBUG 22-01-22 17:10:30[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
221. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:10:30[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
221. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 17:10:30[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
221. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:10:30[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
221. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:10:30[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:31.003', 'test1
test2', 'Apartment', 1, 'test title', 2)

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:31.003', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 1 msec}
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
221. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:31.003', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:31.003629, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/22/2022 17:10:31.040', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/22/2022 17:10:31.040', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
221. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (8, '01/22/2022 17:10:31.040', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:31.003629, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ōmorihigashi', '01/22/2022 17:10:31.061', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ōmorihigashi', '01/22/2022 17:10:31.061', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 1 msec}
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
221. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (8, 'Ōmorihigashi', '01/22/2022 17:10:31.061', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=20000, startDate=2022-01-23, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:31.003629, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/22/2022 17:10:31.082', '2022-02-05', '20000', '2022-01-23')

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/22/2022 17:10:31.082', '2022-02-05', '20000', '2022-01-23')
 {executed in 1 msec}
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
221. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (8, '01/22/2022 17:10:31.082', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=8, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:31.003629, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/22/2022 17:10:31.113', 0, 0, 'entire')

DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/22/2022 17:10:31.113', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
221. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (8, 1.5, 'private', '01/22/2022 17:10:31.113', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=1, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:10:31.113436, updatedAt=null, accommodation=Accommodation(id=8, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:31.003629, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:31.166', 0, 1, 'Single')

ERROR 22-01-22 17:10:31[http-nio-8080-exec-1] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:31.166', 0, 1, 'Single')

java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy314.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy314.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy320.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 17:10:31[http-nio-8080-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
221. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:31.166', 0, 1, 'Single')
 {FAILED after 3 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy314.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy314.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy320.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 17:10:31[http-nio-8080-exec-1] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 17:10:31[http-nio-8080-exec-1] [SqlExceptionHelper:142] - Unknown column 'type' in 'field list'
WARN  22-01-22 17:10:31[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 17:10:31[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
INFO  22-01-22 17:10:39[Thread-43] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:10:39[Thread-43] [HikariDataSource:350] - HikariPool-11 - Shutdown initiated...
INFO  22-01-22 17:10:39[Thread-43] [HikariDataSource:352] - HikariPool-11 - Shutdown completed.
INFO  22-01-22 17:10:40[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:10:40[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:10:45[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:10:47[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1769 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:10:48[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:10:49[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:10:49[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:10:49[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:10:49[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:10:49[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:10:49[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9133 ms
INFO  22-01-22 17:10:49[restartedMain] [HikariDataSource:110] - HikariPool-12 - Starting...
INFO  22-01-22 17:10:49[restartedMain] [HikariDataSource:123] - HikariPool-12 - Start completed.
INFO  22-01-22 17:10:50[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:10:50[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:10:51[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:10:51[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:10:51[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:10:53[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: f4cf85ca-73b5-4bcb-b8bc-fff58caab8d2

INFO  22-01-22 17:10:54[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e6112c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@25ff0f4, org.springframework.security.web.header.HeaderWriterFilter@22b56b46, org.springframework.web.filter.CorsFilter@fff4373, org.springframework.security.web.authentication.logout.LogoutFilter@13956e61, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@771da92d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73994b30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7affe15e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1df1d843, org.springframework.security.web.session.SessionManagementFilter@7dad2edc, org.springframework.security.web.access.ExceptionTranslationFilter@4d979403]
INFO  22-01-22 17:10:55[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:10:55[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:10:55[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:10:55[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.863 seconds (JVM running for 26026.607)
INFO  22-01-22 17:10:55[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:57.454', 'test1
test2', 'Apartment', 1, 'test title', 2)

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:57.454', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:10:57.454', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|9             |
|--------------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=9, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:57.454635, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (9, '01/22/2022 17:10:57.496', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (9, '01/22/2022 17:10:57.496', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (9, '01/22/2022 17:10:57.496', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, createdAt=null, updatedAt=null, accommodation=Accommodation(id=9, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:57.454635, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (9, 'Ōmorihigashi', '01/22/2022 17:10:57.526', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (9, 'Ōmorihigashi', '01/22/2022 17:10:57.526', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 1 msec}
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (9, 'Ōmorihigashi', '01/22/2022 17:10:57.526', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=20000, startDate=2022-01-23, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=9, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:57.454635, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (9, '01/22/2022 17:10:57.555', '2022-02-05', '20000', '2022-01-23')

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (9, '01/22/2022 17:10:57.555', '2022-02-05', '20000', '2022-01-23')
 {executed in 4 msec}
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (9, '01/22/2022 17:10:57.555', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=9, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:57.454635, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (9, 1.5, 'private', '01/22/2022 17:10:57.585', 0, 0, 'entire')

DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (9, 1.5, 'private', '01/22/2022 17:10:57.585', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (9, 1.5, 'private', '01/22/2022 17:10:57.585', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=2, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:10:57.585230, updatedAt=null, accommodation=Accommodation(id=9, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:10:57.454635, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:57.611', 0, 2, 'Single')

ERROR 22-01-22 17:10:57[http-nio-8080-exec-1] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:57.611', 0, 2, 'Single')

java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy336.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 17:10:57[http-nio-8080-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:10:57.611', 0, 2, 'Single')
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy336.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 17:10:57[http-nio-8080-exec-1] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 17:10:57[http-nio-8080-exec-1] [SqlExceptionHelper:142] - Unknown column 'type' in 'field list'
WARN  22-01-22 17:10:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 17:10:57[http-nio-8080-exec-1] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:11:52.132', 'test1
test2', 'Apartment', 1, 'test title', 2)

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:11:52.132', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:11:52.132', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|10            |
|--------------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=10, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:11:52.132601, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (10, '01/22/2022 17:11:52.139', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (10, '01/22/2022 17:11:52.139', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (10, '01/22/2022 17:11:52.139', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, createdAt=null, updatedAt=null, accommodation=Accommodation(id=10, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:11:52.132601, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (10, 'Ōmorihigashi', '01/22/2022 17:11:52.147', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (10, 'Ōmorihigashi', '01/22/2022 17:11:52.147', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (10, 'Ōmorihigashi', '01/22/2022 17:11:52.147', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=20000, startDate=2022-01-23, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=10, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:11:52.132601, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (10, '01/22/2022 17:11:52.153', '2022-02-05', '20000', '2022-01-23')

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (10, '01/22/2022 17:11:52.153', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (10, '01/22/2022 17:11:52.153', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=10, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:11:52.132601, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (10, 1.5, 'private', '01/22/2022 17:11:52.158', 0, 0, 'entire')

DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (10, 1.5, 'private', '01/22/2022 17:11:52.158', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (10, 1.5, 'private', '01/22/2022 17:11:52.158', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=3, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:11:52.158064, updatedAt=null, accommodation=Accommodation(id=10, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:11:52.132601, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:11:52.164', 0, 3, 'Single')

ERROR 22-01-22 17:11:52[http-nio-8080-exec-2] [sqlonly:140] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:11:52.164', 0, 3, 'Single')

java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy336.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
ERROR 22-01-22 17:11:52[http-nio-8080-exec-2] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:11:52.164', 0, 3, 'Single')
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: Unknown column 'type' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1348)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3795)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor336.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy330.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at jdk.internal.reflect.GeneratedMethodAccessor335.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy336.save(Unknown Source)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.lambda$savePrivateBed$1(RoomApiLogicServiceImpl.java:191)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.savePrivateBed(RoomApiLogicServiceImpl.java:192)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl.create(RoomApiLogicServiceImpl.java:66)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$FastClassBySpringCGLIB$$76604af8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
WARN  22-01-22 17:11:52[http-nio-8080-exec-2] [SqlExceptionHelper:137] - SQL Error: 1054, SQLState: 42S22
ERROR 22-01-22 17:11:52[http-nio-8080-exec-2] [SqlExceptionHelper:142] - Unknown column 'type' in 'field list'
WARN  22-01-22 17:11:52[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:70] - Database Error: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute statement
ERROR 22-01-22 17:11:52[http-nio-8080-exec-2] [[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only] with root cause
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.service.RoomApiLogicServiceImpl$$EnhancerBySpringCGLIB$$55b3c485.create(<generated>)
	at com.example.gradlebnbadminapi.controller.RoomController.create(RoomController.java:26)
	at com.example.gradlebnbadminapi.controller.RoomController$$FastClassBySpringCGLIB$$1a33f584.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.gradlebnbadminapi.controller.RoomController$$EnhancerBySpringCGLIB$$9a64f72.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:35)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: POST
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/room
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:57] - email: test@gmail.com
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:95] - Conveniences builder.
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:12:24.781', 'test1
test2', 'Apartment', 1, 'test title', 2)

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:12:24.781', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into accommodation (building_type, created_at, description, large_building_type, maximum_guest_count, title, user_id) values ('Flat', '01/22/2022 17:12:24.781', 'test1
test2', 'Apartment', 1, 'test title', 2)
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|11            |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:112] - Conveniences builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:124] - Conveniences save: Conveniences(id=null, kitchen=HAS, laundryRoom=HAS, parkingLot=HAS, gym=HAS, swimmingPool=HAS, jacuzzi=HAS, createdAt=null, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (11, '01/22/2022 17:12:24.787', 0, 0, 0, 0, 0, 0)

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (11, '01/22/2022 17:12:24.787', 0, 0, 0, 0, 0, 0)
 {executed in 0 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into conveniences (accommodation_id, created_at, gym, jacuzzi, kitchen, laundry_room, parking_lot, swimming_pool) values (11, '01/22/2022 17:12:24.787', 0, 0, 0, 0, 0, 0)
 {executed in 1 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|9             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:129] - Location builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:142] - Location save: Location(id=null, latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, createdAt=null, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (11, 'Ōmorihigashi', '01/22/2022 17:12:24.795', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (11, 'Ōmorihigashi', '01/22/2022 17:12:24.795', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 1 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into location (accommodation_id, city, created_at, detail_address, latitude, longitude, postcode, state, street_address) values (11, 'Ōmorihigashi', '01/22/2022 17:12:24.795', '111', 35, 139, '1420015', 'Ota City', '3-chōme 27')
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:147] - Vacancy builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:156] - Vacancy save: Vacancy(id=null, price=20000, startDate=2022-01-23, endDate=2022-02-05, createdAt=null, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (11, '01/22/2022 17:12:24.801', '2022-02-05', '20000', '2022-01-23')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (11, '01/22/2022 17:12:24.801', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into vacancy (accommodation_id, created_at, end_date, price, start_date) values (11, '01/22/2022 17:12:24.801', '2022-02-05', '20000', '2022-01-23')
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:161] - Room builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:171] - Bed save: Room(id=null, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=null, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null)))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (11, 1.5, 'private', '01/22/2022 17:12:24.807', 0, 0, 'entire')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (11, 1.5, 'private', '01/22/2022 17:12:24.807', 0, 0, 'entire')
 {executed in 1 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into room (accommodation_id, bathroom_count, bathroom_type, created_at, is_set_up_for_guest, number, type) values (11, 1.5, 'private', '01/22/2022 17:12:24.807', 0, 0, 'entire')
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:176] - Private bed builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Single, count=3, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:12:24.807927, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:12:24.814', 0, 4, 'Single')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:12:24.814', 0, 4, 'Single')
 {executed in 1 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (3, '01/22/2022 17:12:24.814', 0, 4, 'Single')
 {executed in 1 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:190] - Private bed save: Bed(id=null, type=Double, count=1, isPrivate=Yes, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:12:24.807927, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.821', 0, 4, 'Double')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.821', 0, 4, 'Double')
 {executed in 1 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.821', 0, 4, 'Double')
 {executed in 1 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:196] - Public bed builder
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:208] - Public bed save: Bed(id=null, type=Queen-size, count=1, isPrivate=NO, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:12:24.807927, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.828', 1, 4, 'Queen-size')

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.828', 1, 4, 'Queen-size')
 {executed in 0 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into bed (count, created_at, is_private, room_id, type) values (1, '01/22/2022 17:12:24.828', 1, 4, 'Queen-size')
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:214] - Amenities builder.
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:232] - Amenities save: Amenities(id=null, wifi=HAS, tv=HAS, heater=HAS, airConditioner=HAS, iron=HAS, shampoo=HAS, hairDryer=NOT, breakfast=HAS, businessSpace=HAS, fireplace=HAS, closet=HAS, guestEntrance=HAS, createdAt=null, updatedAt=null, room=Room(id=4, number=0, type=entire, isSetUpForGuest=YES, bathroomCount=1.5, bathroomType=private, createdAt=2022-01-22T17:12:24.807927, updatedAt=null, accommodation=Accommodation(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, createdAt=2022-01-22T17:12:24.781132, updatedAt=null, user=User(id=2, email=test@gmail.com, password=$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO, firstname=example, lastname=test, birthday=2006/May/19, status=ACTIVATED, access=MANAGER, lastLoginAt=2022-01-22T17:04:23, createdAt=2022-01-22T17:02:26, updatedAt=null))))
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/22/2022 17:12:24.858', 0, 0, 1, 0, 0, 4, 0, 0, 0)

DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
231. insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/22/2022 17:12:24.858', 0, 0, 1, 0, 0, 4, 0, 0, 0)
 {executed in 2 msec}
DEBUG 22-01-22 17:12:24[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
231. getGeneratedKeys on query: insert into amenities (air_conditioner, breakfast, business_space, closet, created_at, fireplace, guest_entrance, hair_dryer, heater, iron, room_id, shampoo, tv, wifi) values (0, 0, 0, 0, '01/22/2022 17:12:24.858', 0, 0, 1, 0, 0, 4, 0, 0, 0)
 {executed in 0 msec}
INFO  22-01-22 17:12:24[http-nio-8080-exec-3] [resultsettable:610] - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

DEBUG 22-01-22 17:13:12[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:13:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:13:12[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:13:12[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:13:12[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:13:12[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:13:12[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:13:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:13:12[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:13:17[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:13:17[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:13:17[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:13:17[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:13:17[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:13:17[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:13:17[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:13:17[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:13:17[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:14:57[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:14:57[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:14:57[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:14:57[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:14:57[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:14:57[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:14:57[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:14:57[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:14:57[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:20:07[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:20:07[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:20:07[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:20:07[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:20:07[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:20:07[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:20:07[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:20:07[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:20:07[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:20:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:20:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:20:11[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:20:11[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:20:11[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:20:11[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:20:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:20:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:20:11[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:28:16[http-nio-8080-exec-4] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:28:22[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:28:22[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:28:22[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:28:22[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:28:22[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:28:22[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:28:22[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:28:22[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:28:22[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:28:22[http-nio-8080-exec-6] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
WARN  22-01-22 17:29:00[http-nio-8080-exec-7] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:29:03[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:03[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-22 17:29:03[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:29:03[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:29:03[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:29:03[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:29:03[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:03[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:29:03[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:29:03[http-nio-8080-exec-9] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:29:28[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:28[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:29:28[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:29:28[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:29:28[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:29:28[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:29:28[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:28[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:29:28[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:29:28[http-nio-8080-exec-1] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:29:39[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:39[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:29:39[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:29:39[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:29:39[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:29:39[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:29:39[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:29:39[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:29:39[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:29:47[http-nio-8080-exec-3] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
WARN  22-01-22 17:32:02[http-nio-8080-exec-5] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:32:05[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-22 17:32:05[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:32:05[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:32:05[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:32:05[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:32:05[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:05[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:32:05[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:32:05[http-nio-8080-exec-7] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:32:27[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:27[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:32:27[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:32:27[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:32:27[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:32:27[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:32:27[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:27[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:32:27[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:32:34[http-nio-8080-exec-9] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:32:38[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:38[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:32:38[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:32:38[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:32:38[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:32:38[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:32:38[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:32:38[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:32:38[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:32:39[http-nio-8080-exec-1] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:33:59[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:33:59[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:33:59[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:33:59[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:33:59[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:33:59[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:33:59[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:33:59[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:33:59[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:34:03[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:34:03[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:34:03[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:34:03[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:34:03[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:34:03[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:03[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:34:03[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:34:12[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:34:12[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:34:12[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:34:12[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:34:12[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
WARN  22-01-22 17:34:12[http-nio-8080-exec-6] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:34:12[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:12[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:34:12[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:34:21[http-nio-8080-exec-8] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:34:21[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:21[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:34:21[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:34:21[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:34:21[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:34:21[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:34:21[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:34:21[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:34:21[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:35:22[http-nio-8080-exec-2] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:35:22[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:35:22[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:35:22[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:35:22[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:35:22[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:35:22[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:35:22[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:35:22[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:35:22[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:35:25[http-nio-8080-exec-4] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:35:25[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:35:25[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:35:25[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:35:25[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:35:25[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:35:25[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:35:25[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:35:25[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:35:25[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:36:50[http-nio-8080-exec-7] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:36:50[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:36:50[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:36:50[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:36:50[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:36:50[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:36:50[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:36:50[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:36:50[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:36:50[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:37:05[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

WARN  22-01-22 17:37:05[http-nio-8080-exec-10] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
DEBUG 22-01-22 17:37:05[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:37:05[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:37:05[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:37:05[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:37:05[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:37:05[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:37:05[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:37:05[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:38:38[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:38:38[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:38:38[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:38:38[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:38:38[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:38:38[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:38:38[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:38:38[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:38:38[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:38:45[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:38:45[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:38:45[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:38:45[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:38:45[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:38:45[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:38:45[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:38:45[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:38:45[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:39:02[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:02[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:39:02[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:39:02[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:39:02[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:39:02[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:39:02[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:02[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:39:02[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:39:15[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:15[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:39:15[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:39:15[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:39:15[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:39:15[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:39:15[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:15[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:39:15[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:39:32[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:32[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:39:32[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

WARN  22-01-22 17:39:32[http-nio-8080-exec-8] [DefaultHandlerExceptionResolver:208] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
INFO  22-01-22 17:39:32[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:39:32[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:39:32[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:39:32[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:39:32[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
231. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:39:32[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:40:11[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:40:11[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:40:11[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:40:11[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 5 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:40:11[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:40:11[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
235. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:40:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
235. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:40:42[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:40:42[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:40:42[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:40:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
235. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
235. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:40:42[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 4 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:40:42[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:40:42[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
DEBUG 22-01-22 17:41:45[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:41:45[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:41:45[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:41:45[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:41:45[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 4 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 0 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:41:45[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:41:45[http-nio-8080-exec-8] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:42:40[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:42:40[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:42:40[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:42:40[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 17:42:40[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 0 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:42:40[http-nio-8080-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:42:40[http-nio-8080-exec-9] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
DEBUG 22-01-22 17:42:57[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:42:57[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:42:57[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:42:57[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 17:42:57[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
241. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 17:42:57[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:42:57[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
242. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:42:57[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(email=null, id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
INFO  22-01-22 17:43:21[Thread-47] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:43:21[Thread-47] [HikariDataSource:350] - HikariPool-12 - Shutdown initiated...
INFO  22-01-22 17:43:21[Thread-47] [HikariDataSource:352] - HikariPool-12 - Shutdown completed.
INFO  22-01-22 17:43:21[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:43:21[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:43:25[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:43:29[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 3317 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:43:30[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:43:30[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:43:30[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:43:30[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:43:30[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:43:30[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:43:30[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 8456 ms
INFO  22-01-22 17:43:30[restartedMain] [HikariDataSource:110] - HikariPool-13 - Starting...
INFO  22-01-22 17:43:30[restartedMain] [HikariDataSource:123] - HikariPool-13 - Start completed.
INFO  22-01-22 17:43:31[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:43:31[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:43:31[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:43:31[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:43:31[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:43:32[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 7cf0fc54-4d54-4b3f-995c-f88936ba2cd4

INFO  22-01-22 17:43:33[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73f6f245, org.springframework.security.web.context.SecurityContextPersistenceFilter@48a71a36, org.springframework.security.web.header.HeaderWriterFilter@380e2e80, org.springframework.security.web.csrf.CsrfFilter@45dc12cb, org.springframework.security.web.authentication.logout.LogoutFilter@433166f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e2e14b6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@613028d3, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2326ee3d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@f188848, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5dee232, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c6db627, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d93d54b, org.springframework.security.web.session.SessionManagementFilter@6dc8070e, org.springframework.security.web.access.ExceptionTranslationFilter@3e5e7d45, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e8abbe3]
INFO  22-01-22 17:43:33[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:43:33[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:43:33[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:43:33[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 11.822 seconds (JVM running for 27984.213)
INFO  22-01-22 17:43:33[restartedMain] [ConditionEvaluationDeltaLoggingListener:58] - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - AllNestedConditions 2 matched 0 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   WebSecurityEnablerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



INFO  22-01-22 17:43:39[Thread-51] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:43:39[Thread-51] [HikariDataSource:350] - HikariPool-13 - Shutdown initiated...
INFO  22-01-22 17:43:39[Thread-51] [HikariDataSource:352] - HikariPool-13 - Shutdown completed.
INFO  22-01-22 17:43:39[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:43:39[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:43:45[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:43:47[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2362 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:43:48[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:43:49[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:43:49[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:43:49[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:43:49[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:43:49[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:43:49[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9386 ms
INFO  22-01-22 17:43:49[restartedMain] [HikariDataSource:110] - HikariPool-14 - Starting...
INFO  22-01-22 17:43:49[restartedMain] [HikariDataSource:123] - HikariPool-14 - Start completed.
INFO  22-01-22 17:43:50[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:43:50[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:43:51[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:43:51[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:43:51[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:43:53[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 3756c157-b312-4429-b10a-3c6dfdf5bdff

INFO  22-01-22 17:43:55[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a0100f1, org.springframework.security.web.context.SecurityContextPersistenceFilter@247d9f2d, org.springframework.security.web.header.HeaderWriterFilter@7cfad129, org.springframework.web.filter.CorsFilter@48f17c82, org.springframework.security.web.authentication.logout.LogoutFilter@69f5fb46, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@7a48b42e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d93ac77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@474a5b75, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5afff6e2, org.springframework.security.web.session.SessionManagementFilter@5306b27d, org.springframework.security.web.access.ExceptionTranslationFilter@60e52855]
INFO  22-01-22 17:43:56[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:43:56[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:43:56[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:43:56[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.603 seconds (JVM running for 28007.271)
INFO  22-01-22 17:43:56[restartedMain] [ConditionEvaluationDeltaLoggingListener:58] - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

    None


Negative matches:
-----------------

   SpringBootWebSecurityConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



INFO  22-01-22 17:44:00[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 17:44:00[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 17:44:00[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-22 17:44:00[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
262. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:44:00[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
262. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:44:00[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:44:00[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:44:00[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:44:00[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
262. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
262. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo11_4_3_, location2_.city as city2_4_3_, location2_.created_at as created_3_4_3_, location2_.detail_address as detail_a4_4_3_, location2_.latitude as latitude5_4_3_, location2_.longitude as longitud6_4_3_, location2_.postcode as postcode7_4_3_, location2_.state as state8_4_3_, location2_.street_address as street_a9_4_3_, location2_.updated_at as updated10_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 3 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:44:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
261. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:44:00[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
INFO  22-01-22 17:53:59[Thread-55] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:53:59[Thread-55] [HikariDataSource:350] - HikariPool-14 - Shutdown initiated...
INFO  22-01-22 17:53:59[Thread-55] [HikariDataSource:352] - HikariPool-14 - Shutdown completed.
INFO  22-01-22 17:54:00[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:54:00[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:54:06[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:54:08[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1902 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:54:09[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:54:09[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:54:09[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:54:09[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:54:09[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:54:09[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:54:09[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9352 ms
INFO  22-01-22 17:54:10[restartedMain] [HikariDataSource:110] - HikariPool-15 - Starting...
INFO  22-01-22 17:54:10[restartedMain] [HikariDataSource:123] - HikariPool-15 - Start completed.
INFO  22-01-22 17:54:10[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:54:11[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:54:11[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:54:11[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:54:11[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:54:13[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: ba786c5a-6feb-4486-83d1-933c77878726

INFO  22-01-22 17:54:14[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29599acf, org.springframework.security.web.context.SecurityContextPersistenceFilter@435214ed, org.springframework.security.web.header.HeaderWriterFilter@72be1c37, org.springframework.web.filter.CorsFilter@5cedf2be, org.springframework.security.web.authentication.logout.LogoutFilter@7b959645, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@32fd0b95, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a0a47e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2857b936, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f092ab0, org.springframework.security.web.session.SessionManagementFilter@d71b2bc, org.springframework.security.web.access.ExceptionTranslationFilter@40253299]
INFO  22-01-22 17:54:15[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:54:15[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:54:15[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:54:15[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.527 seconds (JVM running for 28626.546)
INFO  22-01-22 17:54:15[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:54:29[Thread-59] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:54:29[Thread-59] [HikariDataSource:350] - HikariPool-15 - Shutdown initiated...
INFO  22-01-22 17:54:29[Thread-59] [HikariDataSource:352] - HikariPool-15 - Shutdown completed.
INFO  22-01-22 17:54:29[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:54:29[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:54:35[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:54:37[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2098 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:54:38[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:54:39[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:54:39[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:54:39[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:54:39[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:54:39[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:54:39[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9877 ms
INFO  22-01-22 17:54:40[restartedMain] [HikariDataSource:110] - HikariPool-16 - Starting...
INFO  22-01-22 17:54:40[restartedMain] [HikariDataSource:123] - HikariPool-16 - Start completed.
INFO  22-01-22 17:54:41[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:54:41[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:54:41[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:54:41[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:54:42[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:54:43[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 97e960f1-18b1-414d-83a7-f093a7e936d6

INFO  22-01-22 17:54:44[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e55cb95, org.springframework.security.web.context.SecurityContextPersistenceFilter@7026beb, org.springframework.security.web.header.HeaderWriterFilter@75dc33e6, org.springframework.web.filter.CorsFilter@2f2259ac, org.springframework.security.web.authentication.logout.LogoutFilter@57b426d1, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@70ed077f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51bed6e5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45e99c37, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12aeb655, org.springframework.security.web.session.SessionManagementFilter@1e23063a, org.springframework.security.web.access.ExceptionTranslationFilter@4a138f29]
INFO  22-01-22 17:54:45[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:54:45[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:54:45[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:54:45[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.326 seconds (JVM running for 28656.648)
INFO  22-01-22 17:54:45[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:54:52[Thread-63] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:54:52[Thread-63] [HikariDataSource:350] - HikariPool-16 - Shutdown initiated...
INFO  22-01-22 17:54:52[Thread-63] [HikariDataSource:352] - HikariPool-16 - Shutdown completed.
INFO  22-01-22 17:54:52[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:54:52[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:54:58[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:55:00[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2195 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:55:01[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:55:02[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:55:02[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:55:02[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:55:02[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:55:02[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:55:02[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9880 ms
INFO  22-01-22 17:55:03[restartedMain] [HikariDataSource:110] - HikariPool-17 - Starting...
INFO  22-01-22 17:55:03[restartedMain] [HikariDataSource:123] - HikariPool-17 - Start completed.
INFO  22-01-22 17:55:04[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:55:04[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:55:04[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:55:04[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:55:05[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:55:07[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 4006d46e-0d7c-442d-8cb6-70a4443d26e5

INFO  22-01-22 17:55:08[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1784efad, org.springframework.security.web.context.SecurityContextPersistenceFilter@36d9281f, org.springframework.security.web.header.HeaderWriterFilter@3ffbbad2, org.springframework.web.filter.CorsFilter@5e8fa62, org.springframework.security.web.authentication.logout.LogoutFilter@5e9a416, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@33d25089, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ffad063, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d35c864, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@464159e7, org.springframework.security.web.session.SessionManagementFilter@277814be, org.springframework.security.web.access.ExceptionTranslationFilter@158b9c23]
INFO  22-01-22 17:55:08[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:55:09[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:55:09[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:55:09[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 16.502 seconds (JVM running for 28680.089)
INFO  22-01-22 17:55:09[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:55:38[Thread-67] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:55:38[Thread-67] [HikariDataSource:350] - HikariPool-17 - Shutdown initiated...
INFO  22-01-22 17:55:38[Thread-67] [HikariDataSource:352] - HikariPool-17 - Shutdown completed.
INFO  22-01-22 17:55:39[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:55:39[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:55:44[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:55:46[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2008 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:55:47[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:55:48[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:55:48[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:55:48[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:55:48[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:55:48[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:55:48[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9093 ms
INFO  22-01-22 17:55:49[restartedMain] [HikariDataSource:110] - HikariPool-18 - Starting...
INFO  22-01-22 17:55:49[restartedMain] [HikariDataSource:123] - HikariPool-18 - Start completed.
INFO  22-01-22 17:55:49[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:55:50[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:55:50[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:55:50[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:55:50[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:55:52[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: a4953d16-becb-4fa1-8860-79752ddc4e44

INFO  22-01-22 17:55:53[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f10efc9, org.springframework.security.web.context.SecurityContextPersistenceFilter@340bce4d, org.springframework.security.web.header.HeaderWriterFilter@e695886, org.springframework.web.filter.CorsFilter@250cb5a8, org.springframework.security.web.authentication.logout.LogoutFilter@17210dd8, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@33545389, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f26549b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bcf8291, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60480de2, org.springframework.security.web.session.SessionManagementFilter@26a01f62, org.springframework.security.web.access.ExceptionTranslationFilter@281062dd]
INFO  22-01-22 17:55:54[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:55:54[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:55:54[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:55:54[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.38 seconds (JVM running for 28725.524)
INFO  22-01-22 17:55:54[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:56:09[Thread-71] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:56:09[Thread-71] [HikariDataSource:350] - HikariPool-18 - Shutdown initiated...
INFO  22-01-22 17:56:09[Thread-71] [HikariDataSource:352] - HikariPool-18 - Shutdown completed.
INFO  22-01-22 17:56:09[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:56:09[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:56:15[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:56:17[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 2034 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:56:18[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:56:19[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:56:19[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:56:19[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:56:19[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:56:19[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:56:19[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9182 ms
INFO  22-01-22 17:56:19[restartedMain] [HikariDataSource:110] - HikariPool-19 - Starting...
INFO  22-01-22 17:56:19[restartedMain] [HikariDataSource:123] - HikariPool-19 - Start completed.
INFO  22-01-22 17:56:20[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:56:20[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:56:20[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:56:20[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:56:21[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:56:23[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 8fdf1348-bdca-45ad-a6b7-c652952c0544

INFO  22-01-22 17:56:23[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70241055, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ef32676, org.springframework.security.web.header.HeaderWriterFilter@152dd9eb, org.springframework.web.filter.CorsFilter@7d4cd8cd, org.springframework.security.web.authentication.logout.LogoutFilter@25192f00, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@204a6105, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b949e00, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@208de618, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6df06b7a, org.springframework.security.web.session.SessionManagementFilter@39628ec, org.springframework.security.web.access.ExceptionTranslationFilter@52e1787]
INFO  22-01-22 17:56:24[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:56:24[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:56:24[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:56:24[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 15.327 seconds (JVM running for 28755.959)
INFO  22-01-22 17:56:24[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
311. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:56:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
311. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 17:56:42[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
311. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
311. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 0 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 17:56:42[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
312. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 17:56:42[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(id=null, url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)])]
INFO  22-01-22 17:57:50[Thread-75] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:57:50[Thread-75] [HikariDataSource:350] - HikariPool-19 - Shutdown initiated...
INFO  22-01-22 17:57:50[Thread-75] [HikariDataSource:352] - HikariPool-19 - Shutdown completed.
INFO  22-01-22 17:57:50[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:57:50[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:57:56[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:57:58[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1933 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:58:00[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:58:00[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:58:00[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:58:00[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:58:00[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:58:00[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:58:00[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 9929 ms
INFO  22-01-22 17:58:01[restartedMain] [HikariDataSource:110] - HikariPool-20 - Starting...
INFO  22-01-22 17:58:01[restartedMain] [HikariDataSource:123] - HikariPool-20 - Start completed.
INFO  22-01-22 17:58:02[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:58:02[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:58:03[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:58:03[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:58:03[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-22 17:58:04[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'photoController': Unsatisfied dependency expressed through field 'photoLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-22 17:58:04[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:58:04[restartedMain] [HikariDataSource:350] - HikariPool-20 - Shutdown initiated...
INFO  22-01-22 17:58:04[restartedMain] [HikariDataSource:352] - HikariPool-20 - Shutdown completed.
INFO  22-01-22 17:58:04[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-22 17:58:04[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-22 17:58:04[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field photoLogicService in com.example.gradlebnbadminapi.controller.PhotoController required a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' in your configuration.

INFO  22-01-22 17:58:16[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:58:16[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:58:20[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:58:21[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 948 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:58:22[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:58:22[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:58:22[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:58:22[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:58:22[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:58:22[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:58:22[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6135 ms
INFO  22-01-22 17:58:22[restartedMain] [HikariDataSource:110] - HikariPool-21 - Starting...
INFO  22-01-22 17:58:22[restartedMain] [HikariDataSource:123] - HikariPool-21 - Start completed.
INFO  22-01-22 17:58:23[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:58:23[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:58:23[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:58:23[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:58:23[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-22 17:58:25[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'photoController': Unsatisfied dependency expressed through field 'photoLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-22 17:58:25[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:58:25[restartedMain] [HikariDataSource:350] - HikariPool-21 - Shutdown initiated...
INFO  22-01-22 17:58:25[restartedMain] [HikariDataSource:352] - HikariPool-21 - Shutdown completed.
INFO  22-01-22 17:58:25[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-22 17:58:25[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-22 17:58:25[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field photoLogicService in com.example.gradlebnbadminapi.controller.PhotoController required a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' in your configuration.

INFO  22-01-22 17:58:37[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:58:37[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:58:40[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:58:42[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1150 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:58:42[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:58:43[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:58:43[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:58:43[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:58:43[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:58:43[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:58:43[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5389 ms
INFO  22-01-22 17:58:43[restartedMain] [HikariDataSource:110] - HikariPool-22 - Starting...
INFO  22-01-22 17:58:43[restartedMain] [HikariDataSource:123] - HikariPool-22 - Start completed.
INFO  22-01-22 17:58:43[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:58:43[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:58:44[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:58:44[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:58:44[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-22 17:58:45[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'photoController': Unsatisfied dependency expressed through field 'photoLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-22 17:58:45[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 17:58:45[restartedMain] [HikariDataSource:350] - HikariPool-22 - Shutdown initiated...
INFO  22-01-22 17:58:45[restartedMain] [HikariDataSource:352] - HikariPool-22 - Shutdown completed.
INFO  22-01-22 17:58:45[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-22 17:58:45[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-22 17:58:45[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field photoLogicService in com.example.gradlebnbadminapi.controller.PhotoController required a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.PhotoLogicService' in your configuration.

INFO  22-01-22 17:58:51[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 17:58:51[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 17:58:54[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 17:58:55[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1024 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 17:58:56[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 17:58:57[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 17:58:57[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:58:57[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 17:58:57[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 17:58:57[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 17:58:57[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5702 ms
INFO  22-01-22 17:58:57[restartedMain] [HikariDataSource:110] - HikariPool-23 - Starting...
INFO  22-01-22 17:58:57[restartedMain] [HikariDataSource:123] - HikariPool-23 - Start completed.
INFO  22-01-22 17:58:57[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 17:58:57[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 17:58:58[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 17:58:58[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 17:58:58[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 17:58:59[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 3ce92526-d6c9-4b49-bd29-edb90448cdb9

INFO  22-01-22 17:59:00[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@218ff489, org.springframework.security.web.context.SecurityContextPersistenceFilter@742bacc0, org.springframework.security.web.header.HeaderWriterFilter@3bba4012, org.springframework.web.filter.CorsFilter@37e2e380, org.springframework.security.web.authentication.logout.LogoutFilter@1f305c6, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@48cd466f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a9448bc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23473b2c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51b87359, org.springframework.security.web.session.SessionManagementFilter@2d34ddf9, org.springframework.security.web.access.ExceptionTranslationFilter@55dd6b82]
INFO  22-01-22 17:59:00[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 17:59:00[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 17:59:00[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 17:59:00[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 9.667 seconds (JVM running for 28911.909)
INFO  22-01-22 17:59:00[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 18:05:59[Thread-79] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 18:05:59[Thread-79] [HikariDataSource:350] - HikariPool-23 - Shutdown initiated...
INFO  22-01-22 18:05:59[Thread-79] [HikariDataSource:352] - HikariPool-23 - Shutdown completed.
INFO  22-01-22 18:06:00[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 18:06:00[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 18:06:04[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 18:06:05[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1475 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 18:06:06[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 18:06:07[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 18:06:07[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 18:06:07[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 18:06:07[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 18:06:07[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 18:06:07[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 6300 ms
INFO  22-01-22 18:06:07[restartedMain] [HikariDataSource:110] - HikariPool-24 - Starting...
INFO  22-01-22 18:06:07[restartedMain] [HikariDataSource:123] - HikariPool-24 - Start completed.
INFO  22-01-22 18:06:07[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 18:06:07[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 18:06:08[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 18:06:08[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 18:06:08[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 18:06:10[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 2de26c2a-0ed8-4357-9709-c16f65280257

INFO  22-01-22 18:06:11[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67062051, org.springframework.security.web.context.SecurityContextPersistenceFilter@4563ae81, org.springframework.security.web.header.HeaderWriterFilter@4f195907, org.springframework.web.filter.CorsFilter@3265a98, org.springframework.security.web.authentication.logout.LogoutFilter@1d2871ee, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@5cb083c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ab72382, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7fe38cb2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@247c6390, org.springframework.security.web.session.SessionManagementFilter@3a1015de, org.springframework.security.web.access.ExceptionTranslationFilter@505df6d1]
INFO  22-01-22 18:06:11[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 18:06:11[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 18:06:11[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 18:06:11[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 11.65 seconds (JVM running for 29342.916)
INFO  22-01-22 18:06:11[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 18:07:06[Thread-92] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 18:07:06[Thread-92] [HikariDataSource:350] - HikariPool-24 - Shutdown initiated...
INFO  22-01-22 18:07:06[Thread-92] [HikariDataSource:352] - HikariPool-24 - Shutdown completed.
INFO  22-01-22 18:07:06[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 18:07:06[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 18:07:10[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 18:07:11[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 966 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 18:07:12[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 18:07:12[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 18:07:12[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 18:07:12[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 18:07:12[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 18:07:12[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 18:07:12[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5908 ms
INFO  22-01-22 18:07:13[restartedMain] [HikariDataSource:110] - HikariPool-25 - Starting...
INFO  22-01-22 18:07:13[restartedMain] [HikariDataSource:123] - HikariPool-25 - Start completed.
INFO  22-01-22 18:07:13[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 18:07:13[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 18:07:14[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 18:07:14[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 18:07:14[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  22-01-22 18:07:15[restartedMain] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roomController': Unsatisfied dependency expressed through field 'roomApiLogicService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  22-01-22 18:07:15[restartedMain] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  22-01-22 18:07:15[restartedMain] [HikariDataSource:350] - HikariPool-25 - Shutdown initiated...
INFO  22-01-22 18:07:15[restartedMain] [HikariDataSource:352] - HikariPool-25 - Shutdown completed.
INFO  22-01-22 18:07:15[restartedMain] [StandardService:173] - Stopping service [Tomcat]
INFO  22-01-22 18:07:15[restartedMain] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-01-22 18:07:15[restartedMain] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field roomApiLogicService in com.example.gradlebnbadminapi.controller.RoomController required a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.example.gradlebnbadminapi.service.RoomApiLogicService' in your configuration.

INFO  22-01-22 18:07:32[restartedMain] [GradleBnbAdminApiApplication:55] - Starting GradleBnbAdminApiApplication using Java 11.0.13 on 4c2b20666ef6 with PID 275 (/api/gradle-bnb-admin-api/build/classes/java/main started by root in /api/gradle-bnb-admin-api)
INFO  22-01-22 18:07:32[restartedMain] [GradleBnbAdminApiApplication:663] - The following profiles are active: dev
INFO  22-01-22 18:07:35[restartedMain] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-01-22 18:07:37[restartedMain] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 1220 ms. Found 9 JPA repository interfaces.
WARN  22-01-22 18:07:37[restartedMain] [ClassPathMapperScanner:44] - No MyBatis mapper was found in '[com.example.gradlebnbadminapi]' package. Please check your configuration.
INFO  22-01-22 18:07:38[restartedMain] [TomcatWebServer:108] - Tomcat initialized with port(s): 8080 (http)
INFO  22-01-22 18:07:38[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 18:07:38[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  22-01-22 18:07:38[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.54]
INFO  22-01-22 18:07:38[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  22-01-22 18:07:38[restartedMain] [ServletWebServerApplicationContext:290] - Root WebApplicationContext: initialization completed in 5536 ms
INFO  22-01-22 18:07:38[restartedMain] [HikariDataSource:110] - HikariPool-26 - Starting...
INFO  22-01-22 18:07:38[restartedMain] [HikariDataSource:123] - HikariPool-26 - Start completed.
INFO  22-01-22 18:07:38[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-01-22 18:07:38[restartedMain] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
INFO  22-01-22 18:07:39[restartedMain] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  22-01-22 18:07:39[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  22-01-22 18:07:39[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:219] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  22-01-22 18:07:40[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: ec470431-314d-4546-a5f8-8f4ecb70c2f6

INFO  22-01-22 18:07:41[restartedMain] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@663bd0d, org.springframework.security.web.context.SecurityContextPersistenceFilter@479a596f, org.springframework.security.web.header.HeaderWriterFilter@5779c2f6, org.springframework.web.filter.CorsFilter@63494723, org.springframework.security.web.authentication.logout.LogoutFilter@10e545bf, com.example.gradlebnbadminapi.filters.JwtAuthenticationFilter@3a22e71e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@122f54db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@bd84a1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4dc0ed25, org.springframework.security.web.session.SessionManagementFilter@7dfe712d, org.springframework.security.web.access.ExceptionTranslationFilter@3a4df5a2]
INFO  22-01-22 18:07:42[restartedMain] [OptionalLiveReloadServer:58] - LiveReload server is running on port 35729
INFO  22-01-22 18:07:42[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  22-01-22 18:07:42[restartedMain] [TomcatWebServer:220] - Tomcat started on port(s): 8080 (http) with context path ''
INFO  22-01-22 18:07:42[restartedMain] [GradleBnbAdminApiApplication:61] - Started GradleBnbAdminApiApplication in 9.903 seconds (JVM running for 29433.301)
INFO  22-01-22 18:07:42[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:08:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:08:58[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:08:58[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 2 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 2 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:08:58[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:08:58[http-nio-8080-exec-2] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:09:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:21[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:21[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:09:21[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:09:21[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 0 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:09:21[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:09:21[http-nio-8080-exec-4] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:09:33[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:33[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:33[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:09:33[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:09:33[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:33[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:33[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:33[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:33[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:09:33[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:09:33[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:09:33[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:09:33[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:09:33[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:33[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:09:34[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:34[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:09:34[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:09:34[http-nio-8080-exec-6] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:09:46[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:09:46[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:46[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:09:46[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:09:46[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:09:46[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:09:46[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 3 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 2 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:09:46[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:09:46[http-nio-8080-exec-8] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:11:47[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:11:47[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:11:47[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/user
DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:11:47[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
INFO  22-01-22 18:11:47[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:11:47[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:11:47[http-nio-8080-exec-3] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:12:01[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:12:01[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:12:01[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:12:01[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:12:01[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 3 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:12:01[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:12:01[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:12:35[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:12:35[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:12:35[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:12:35[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 3 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:12:35[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:12:35[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:13:13[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:13:13[http-nio-8080-exec-8] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:13:13[http-nio-8080-exec-8] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:13:13[http-nio-8080-exec-8] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:13:13[http-nio-8080-exec-8] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 2 msec}
DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-8] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:13:13[http-nio-8080-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 0 msec}
INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:13:13[http-nio-8080-exec-10] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:14:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:14:00[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:14:00[http-nio-8080-exec-2] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:14:00[http-nio-8080-exec-2] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:14:00[http-nio-8080-exec-2] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:14:00[http-nio-8080-exec-2] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:14:00[http-nio-8080-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:14:00[http-nio-8080-exec-2] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:14:00[http-nio-8080-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:14:00[http-nio-8080-exec-1] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:14:10[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:10[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:14:10[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:14:10[http-nio-8080-exec-3] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:14:10[http-nio-8080-exec-3] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:14:10[http-nio-8080-exec-3] [ParameterAop:59] - Authenticated: test@gmail.com
DEBUG 22-01-22 18:14:10[http-nio-8080-exec-3] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:10[http-nio-8080-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:14:10[http-nio-8080-exec-3] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:14:56[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-4] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:14:56[http-nio-8080-exec-4] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:14:56[http-nio-8080-exec-4] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:14:56[http-nio-8080-exec-4] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-4] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:14:56[http-nio-8080-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:14:56[http-nio-8080-exec-5] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
DEBUG 22-01-22 18:15:22[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:15:22[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-6] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at            |email          |firstname |last_login_at         |lastname |password                                                     |status |updated_at |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-22 17:02:26.0 |test@gmail.com |example   |2022-01-22 17:04:23.0 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |null       |
|---|-------|------------|----------------------|---------------|----------|----------------------|---------|-------------------------------------------------------------|-------|-----------|

INFO  22-01-22 18:15:22[http-nio-8080-exec-6] [ParameterAop:53] - Request URI: /api/user
INFO  22-01-22 18:15:22[http-nio-8080-exec-6] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [ParameterAop:52] - Request Method: GET
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [ParameterAop:53] - Request URI: /api/room/test@gmail.com
DEBUG 22-01-22 18:15:22[http-nio-8080-exec-6] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [ParameterAop:59] - Authenticated: test@gmail.com
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:79] - Email: test@gmail.com
DEBUG 22-01-22 18:15:22[http-nio-8080-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
381. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 1 msec}
DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'

INFO  22-01-22 18:15:22[http-nio-8080-exec-6] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select user0_.id as id1_7_, user0_.access as access2_7_, user0_.birthday as birthday3_7_, user0_.created_at as created_4_7_, user0_.email as email5_7_, user0_.firstname as firstnam6_7_, user0_.last_login_at as last_log7_7_, user0_.lastname as lastname8_7_, user0_.password as password9_7_, user0_.status as status10_7_, user0_.updated_at as updated11_7_ from user user0_ where user0_.email='test@gmail.com'
 {executed in 0 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|id |access |birthday    |created_at          |email          |firstname |last_login_at       |lastname |password                                                     |status |updated_at |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|
|2  |1      |2006/May/19 |2022-01-23T02:02:26 |test@gmail.com |example   |2022-01-23T02:04:23 |test     |$2a$10$6.I1rUwL40zkowA7/AAcA.dHaiXTugweNRTAEJPSeNElb2BRpkXiO |0      |[null]     |
|---|-------|------------|--------------------|---------------|----------|--------------------|---------|-------------------------------------------------------------|-------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select accommodat0_.user_id as user_id9_0_0_, accommodat0_.id as id1_0_0_, accommodat0_.id as id1_0_1_, accommodat0_.building_type as building2_0_1_, accommodat0_.created_at as created_3_0_1_, accommodat0_.description as descript4_0_1_, accommodat0_.large_building_type as large_bu5_0_1_, accommodat0_.maximum_guest_count as maximum_6_0_1_, accommodat0_.title as title7_0_1_, accommodat0_.updated_at as updated_8_0_1_, accommodat0_.user_id as user_id9_0_1_, convenienc1_.id as id1_3_2_, convenienc1_.accommodation_id as accommo10_3_2_, convenienc1_.created_at as created_2_3_2_, convenienc1_.gym as gym3_3_2_, convenienc1_.jacuzzi as jacuzzi4_3_2_, convenienc1_.kitchen as kitchen5_3_2_, convenienc1_.laundry_room as laundry_6_3_2_, convenienc1_.parking_lot as parking_7_3_2_, convenienc1_.swimming_pool as swimming8_3_2_, convenienc1_.updated_at as updated_9_3_2_, location2_.id as id1_4_3_, location2_.accommodation_id as accommo12_4_3_, location2_.city as city2_4_3_, location2_.country as country3_4_3_, location2_.created_at as created_4_4_3_, location2_.detail_address as detail_a5_4_3_, location2_.latitude as latitude6_4_3_, location2_.longitude as longitud7_4_3_, location2_.postcode as postcode8_4_3_, location2_.state as state9_4_3_, location2_.street_address as street_10_4_3_, location2_.updated_at as updated11_4_3_ from accommodation accommodat0_ left outer join conveniences convenienc1_ on accommodat0_.id=convenienc1_.accommodation_id left outer join location location2_ on accommodat0_.id=location2_.accommodation_id where accommodat0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|user_id |id |id |building_type |created_at            |description |large_building_type |maximum_guest_count |title      |updated_at |user_id |id |accommodation_id |created_at            |gym |jacuzzi |kitchen |laundry_room |parking_lot |swimming_pool |updated_at |id |accommodation_id |city         |country |created_at            |detail_address |latitude |longitude |postcode |state    |street_address |updated_at |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|
|2       |11 |11 |Flat          |2022-01-22 17:12:25.0 |test1
test2 |Apartment           |1                   |test title |null       |2       |9  |11               |2022-01-22 17:12:25.0 |0   |0       |0       |0            |0           |0             |null       |5  |11               |Ōmorihigashi |Japan   |2022-01-22 17:12:25.0 |111            |35       |139       |1420015  |Ota City |3-chōme 27     |null       |
|--------|---|---|--------------|----------------------|------------|--------------------|--------------------|-----------|-----------|--------|---|-----------------|----------------------|----|--------|--------|-------------|------------|--------------|-----------|---|-----------------|-------------|--------|----------------------|---------------|---------|----------|---------|---------|---------------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select roomlist0_.accommodation_id as accommod9_6_0_, roomlist0_.id as id1_6_0_, roomlist0_.id as id1_6_1_, roomlist0_.accommodation_id as accommod9_6_1_, roomlist0_.bathroom_count as bathroom2_6_1_, roomlist0_.bathroom_type as bathroom3_6_1_, roomlist0_.created_at as created_4_6_1_, roomlist0_.is_set_up_for_guest as is_set_u5_6_1_, roomlist0_.number as number6_6_1_, roomlist0_.type as type7_6_1_, roomlist0_.updated_at as updated_8_6_1_, amenities1_.id as id1_1_2_, amenities1_.air_conditioner as air_cond2_1_2_, amenities1_.breakfast as breakfas3_1_2_, amenities1_.business_space as business4_1_2_, amenities1_.closet as closet5_1_2_, amenities1_.created_at as created_6_1_2_, amenities1_.fireplace as fireplac7_1_2_, amenities1_.guest_entrance as guest_en8_1_2_, amenities1_.hair_dryer as hair_dry9_1_2_, amenities1_.heater as heater10_1_2_, amenities1_.iron as iron11_1_2_, amenities1_.room_id as room_id16_1_2_, amenities1_.shampoo as shampoo12_1_2_, amenities1_.tv as tv13_1_2_, amenities1_.updated_at as updated14_1_2_, amenities1_.wifi as wifi15_1_2_ from room roomlist0_ left outer join amenities amenities1_ on roomlist0_.id=amenities1_.room_id where roomlist0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|accommodation_id |id |id |accommodation_id |bathroom_count |bathroom_type |created_at            |is_set_up_for_guest |number |type   |updated_at |id |air_conditioner |breakfast |business_space |closet |created_at            |fireplace |guest_entrance |hair_dryer |heater |iron |room_id |shampoo |tv |updated_at |wifi |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|
|11               |4  |4  |11               |1.5            |private       |2022-01-22 17:12:25.0 |0                   |0      |entire |null       |1  |0               |0         |0              |0      |2022-01-22 17:12:25.0 |0         |0              |1          |0      |0    |4       |0       |0  |null       |0    |
|-----------------|---|---|-----------------|---------------|--------------|----------------------|--------------------|-------|-------|-----------|---|----------------|----------|---------------|-------|----------------------|----------|---------------|-----------|-------|-----|--------|--------|---|-----------|-----|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select bedlist0_.room_id as room_id7_2_0_, bedlist0_.id as id1_2_0_, bedlist0_.id as id1_2_1_, bedlist0_.count as count2_2_1_, bedlist0_.created_at as created_3_2_1_, bedlist0_.is_private as is_priva4_2_1_, bedlist0_.room_id as room_id7_2_1_, bedlist0_.type as type5_2_1_, bedlist0_.updated_at as updated_6_2_1_ from bed bedlist0_ where bedlist0_.room_id=4
 {executed in 1 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|room_id |id |id |count |created_at            |is_private |room_id |type       |updated_at |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|
|4       |1  |1  |3     |2022-01-22 17:12:25.0 |0          |4       |Single     |null       |
|4       |2  |2  |1     |2022-01-22 17:12:25.0 |0          |4       |Double     |null       |
|4       |3  |3  |1     |2022-01-22 17:12:25.0 |1          |4       |Queen-size |null       |
|--------|---|---|------|----------------------|-----------|--------|-----------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select vacancylis0_.accommodation_id as accommod7_8_0_, vacancylis0_.id as id1_8_0_, vacancylis0_.id as id1_8_1_, vacancylis0_.accommodation_id as accommod7_8_1_, vacancylis0_.created_at as created_2_8_1_, vacancylis0_.end_date as end_date3_8_1_, vacancylis0_.price as price4_8_1_, vacancylis0_.start_date as start_da5_8_1_, vacancylis0_.updated_at as updated_6_8_1_ from vacancy vacancylis0_ where vacancylis0_.accommodation_id=11
 {executed in 0 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|accommodation_id |id |id |accommodation_id |created_at            |end_date   |price |start_date |updated_at |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|
|11               |5  |5  |11               |2022-01-22 17:12:25.0 |2022-02-05 |20000 |2022-01-23 |null       |
|-----------------|---|---|-----------------|----------------------|-----------|------|-----------|-----------|

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqlonly:223] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2

DEBUG 22-01-22 18:15:22[http-nio-8080-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
382. select photolist0_.user_id as user_id8_5_0_, photolist0_.id as id1_5_0_, photolist0_.id as id1_5_1_, photolist0_.updated_at as updated_2_5_1_, photolist0_.created_at as created_3_5_1_, photolist0_.del_flg as del_flg4_5_1_, photolist0_.name as name5_5_1_, photolist0_.size as size6_5_1_, photolist0_.url as url7_5_1_, photolist0_.user_id as user_id8_5_1_ from photo photolist0_ where photolist0_.user_id=2
 {executed in 1 msec}
INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [resultsettable:610] - 
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|user_id |id |id |updated_at |created_at            |del_flg |name                        |size  |url                                                                                 |user_id |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|
|2       |3  |3  |null       |2022-01-22 17:06:41.0 |0       |bnb_test5_1642871201028.jpg |65006 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg |2       |
|2       |4  |4  |null       |2022-01-22 17:06:45.0 |0       |bnb_test6_1642871204826.jpg |39900 |https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg |2       |
|--------|---|---|-----------|----------------------|--------|----------------------------|------|------------------------------------------------------------------------------------|--------|

INFO  22-01-22 18:15:22[http-nio-8080-exec-7] [RoomApiLogicServiceImpl:89] - AccommodationList[AccommodationApiResponse(id=11, title=test title, largeBuildingType=Apartment, buildingType=Flat, maximumGuestCount=1, description=test1
test2, roomList=[RoomApiResponse(roomType=entire, isSetUpForGuest=true, bathroomCount=1.5, bathroomType=private, bedList=[BedApiResponse(type=Single, count=3), BedApiResponse(type=Double, count=1)], publicBedList=[BedApiResponse(type=Queen-size, count=1)], amenities=AmenitiesApiResponse(wifi=true, tv=true, heater=true, airConditioner=true, iron=true, shampoo=true, hairDryer=false, breakfast=true, businessSpace=true, fireplace=true, closet=true, guestEntrance=true))], latitude=35, longitude=139, country=Japan, state=Ota City, city=Ōmorihigashi, streetAddress=3-chōme 27, detailAddress=111, postcode=1420015, conveniences=ConveniencesApiResponse(kitchen=true, laundryRoom=true, parkingLot=true, gym=true, swimmingPool=true, jacuzzi=true), vacancyList=[VacancyApiResponse(price=20000, startDate=2022-01-23, endDate=2022-02-05)], photoList=[PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test5_1642871201028.jpg), PhotoApiResponse(url=https://test-bnb-images.s3.ap-northeast-1.amazonaws.com/bnb_test6_1642871204826.jpg)], created_at=2022-01-22T17:12:25, updated_at=null)]
